import{defaultAbiCoder as e,Interface as t}from"@ethersproject/abi";import{WeiPerEther as n,Zero as a,AddressZero as o,MaxUint256 as i,MaxInt256 as s}from"@ethersproject/constants";import{BigNumber as r,parseFixed as p,formatFixed as l}from"@ethersproject/bignumber";import{getAddress as d}from"@ethersproject/address";import{Contract as u}from"@ethersproject/contracts";import{utils as c,Contract as y}from"ethers";import{hexZeroPad as m,hexValue as b,splitSignature as f}from"@ethersproject/bytes";import{Signer as T}from"@ethersproject/abstract-signer";import{mergeWith as h,set as I,parseInt as g,keyBy as _,sum as w,pickBy as P,zipObject as x,identity as E,cloneDeep as v}from"lodash";import*as S from"@balancer-labs/sor";import{StablePool as A,ZERO as k,PhantomStablePool as O,StableMathBigInt as M,WeightedMaths as C,WeightedPool as R,MetaStablePool as B,LinearPool as F,SwapTypes as N,SOR as D,parseToPoolsDict as L,getSpotPriceAfterSwapForPath as U,bnum as V,ComposableStablePool as G}from"@balancer-labs/sor";export{PoolFilter,SOR,SwapTypes,stableBPTForTokensZeroPriceImpact,weightedBPTForTokensZeroPriceImpact}from"@balancer-labs/sor";import{JsonRpcProvider as q}from"@ethersproject/providers";import{GraphQLClient as W}from"graphql-request";import{parse as $}from"graphql";import H from"axios";import{jsonToGraphQLQuery as X}from"json-to-graphql-query";var Y,j,K,J,z,Z;!function(e){e[e.RECOVERY_MODE=255]="RECOVERY_MODE"}(Y||(Y={}));class Q{}Q.recoveryModeExit=t=>e.encode(["uint256","uint256"],[Y.RECOVERY_MODE,t]),function(e){e[e.INIT=0]="INIT",e[e.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",e[e.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT"}(j||(j={})),function(e){e[e.INIT=0]="INIT",e[e.COLLECT_PROTOCOL_FEES=1]="COLLECT_PROTOCOL_FEES"}(K||(K={})),function(e){e[e.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",e[e.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",e[e.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT"}(J||(J={}));class ee{constructor(){}}ee.joinInit=t=>e.encode(["uint256","uint256[]"],[j.INIT,t]),ee.joinCollectProtocolFees=()=>e.encode(["uint256"],[K.COLLECT_PROTOCOL_FEES]),ee.joinExactTokensInForBPTOut=(t,n)=>e.encode(["uint256","uint256[]","uint256"],[j.EXACT_TOKENS_IN_FOR_BPT_OUT,t,n]),ee.joinTokenInForExactBPTOut=(t,n)=>e.encode(["uint256","uint256","uint256"],[j.TOKEN_IN_FOR_EXACT_BPT_OUT,t,n]),ee.exitExactBPTInForOneTokenOut=(t,n)=>e.encode(["uint256","uint256","uint256"],[J.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,n]),ee.exitExactBPTInForTokensOut=t=>e.encode(["uint256","uint256"],[J.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),ee.exitBPTInForExactTokensOut=(t,n)=>e.encode(["uint256","uint256[]","uint256"],[J.BPT_IN_FOR_EXACT_TOKENS_OUT,t,n]),function(e){e[e.INIT=0]="INIT",e[e.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",e[e.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT",e[e.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT=3]="ALL_TOKENS_IN_FOR_EXACT_BPT_OUT"}(z||(z={})),function(e){e[e.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",e[e.EXACT_BPT_IN_FOR_TOKENS_OUT=1]="EXACT_BPT_IN_FOR_TOKENS_OUT",e[e.BPT_IN_FOR_EXACT_TOKENS_OUT=2]="BPT_IN_FOR_EXACT_TOKENS_OUT",e[e.MANAGEMENT_FEE_TOKENS_OUT=3]="MANAGEMENT_FEE_TOKENS_OUT"}(Z||(Z={}));class te{constructor(){}}te.joinInit=t=>e.encode(["uint256","uint256[]"],[z.INIT,t]),te.joinExactTokensInForBPTOut=(t,n)=>e.encode(["uint256","uint256[]","uint256"],[z.EXACT_TOKENS_IN_FOR_BPT_OUT,t,n]),te.joinTokenInForExactBPTOut=(t,n)=>e.encode(["uint256","uint256","uint256"],[z.TOKEN_IN_FOR_EXACT_BPT_OUT,t,n]),te.joinAllTokensInForExactBPTOut=t=>e.encode(["uint256","uint256"],[z.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT,t]),te.exitExactBPTInForOneTokenOut=(t,n)=>e.encode(["uint256","uint256","uint256"],[Z.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,n]),te.exitExactBPTInForTokensOut=t=>e.encode(["uint256","uint256"],[Z.EXACT_BPT_IN_FOR_TOKENS_OUT,t]),te.exitBPTInForExactTokensOut=(t,n)=>e.encode(["uint256","uint256[]","uint256"],[Z.BPT_IN_FOR_EXACT_TOKENS_OUT,t,n]);class ne{constructor(){}}ne.exitForManagementFees=()=>e.encode(["uint256"],[Z.MANAGEMENT_FEE_TOKENS_OUT]);function ae(e){if(100==e.length)return Array(100).fill(n.div(100));const t=e.reduce(((e,t)=>e.add(t)),a);if(t.eq(n))return e;const o=[];let i=a;for(let a=0;a<e.length;a++)a<e.length-1?(o[a]=e[a].mul(n).div(t),i=i.add(o[a])):o[a]=n.sub(i);return o}const oe=e=>{const t=e.reduce(((e,t)=>e.add(t)),a);return t.eq(n)};var ie,se;!function(e){e[e.INIT=0]="INIT",e[e.EXACT_TOKENS_IN_FOR_BPT_OUT=1]="EXACT_TOKENS_IN_FOR_BPT_OUT",e[e.TOKEN_IN_FOR_EXACT_BPT_OUT=2]="TOKEN_IN_FOR_EXACT_BPT_OUT"}(ie||(ie={})),function(e){e[e.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT=0]="EXACT_BPT_IN_FOR_ONE_TOKEN_OUT",e[e.BPT_IN_FOR_EXACT_TOKENS_OUT=1]="BPT_IN_FOR_EXACT_TOKENS_OUT",e[e.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT=2]="EXACT_BPT_IN_FOR_ALL_TOKENS_OUT"}(se||(se={}));class re{constructor(){}}re.joinInit=t=>e.encode(["uint256","uint256[]"],[ie.INIT,t]),re.joinCollectProtocolFees=()=>e.encode(["uint256"],[K.COLLECT_PROTOCOL_FEES]),re.joinExactTokensInForBPTOut=(t,n)=>e.encode(["uint256","uint256[]","uint256"],[ie.EXACT_TOKENS_IN_FOR_BPT_OUT,t,n]),re.joinTokenInForExactBPTOut=(t,n)=>e.encode(["uint256","uint256","uint256"],[ie.TOKEN_IN_FOR_EXACT_BPT_OUT,t,n]),re.exitExactBPTInForOneTokenOut=(t,n)=>e.encode(["uint256","uint256","uint256"],[se.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT,t,n]),re.exitExactBPTInForAllTokensOut=t=>e.encode(["uint256","uint256"],[se.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT,t]),re.exitBPTInForExactTokensOut=(t,n)=>e.encode(["uint256","uint256[]","uint256"],[se.BPT_IN_FOR_EXACT_TOKENS_OUT,t,n]);var pe="production"===process.env.NODE_ENV,le="Invariant failed";function de(e,t){if(!e){if(pe)throw new Error(le);var n="function"==typeof t?t():t,a=n?"".concat(le,": ").concat(n):le;throw new Error(a)}}const ue=e=>({address:ce(e),specialization:ye(e),nonce:me(e)}),ce=e=>(de(66===e.length,"Invalid poolId length"),e.slice(0,42)),ye=e=>{de(66===e.length,"Invalid poolId length");const t=parseInt(e[45]);return de(t<3,"Invalid pool specialization"),t},me=e=>(de(66===e.length,"Invalid poolId length"),r.from(`0x${e.slice(46)}`));var be;!function(e){e[e.MAINNET=1]="MAINNET",e[e.GOERLI=5]="GOERLI",e[e["GÖRLI"]=5]="GÖRLI",e[e.OPTIMISM=10]="OPTIMISM",e[e.GNOSIS=100]="GNOSIS",e[e.POLYGON=137]="POLYGON",e[e.FANTOM=250]="FANTOM",e[e.ZKEVM=1101]="ZKEVM",e[e.ARBITRUM=42161]="ARBITRUM",e[e.AVALANCHE=43114]="AVALANCHE",e[e.SEPOLIA=11155111]="SEPOLIA"}(be||(be={}));const fe=1e4,Te=1e6,he={IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x9f19a375709baf0e8e35c2c5c65aca676c4c7191000200000000000000000022","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366"]},Investment:{AllowList:["0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool"},Stakable:{AllowList:[]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x8fd162f338b770f7e879030830cde9173367f3010000000000000000000004d8":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xd387dfd3a786e7caa06e6cf0c675352c7ffff30400000000000000000000063e":{name:"Balancer Stable USD",hasIcon:!0}}},Ie={[be.GOERLI]:{IdsMap:{staBAL:"0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062",bbAaveUSD:{v1:"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f",v2:"0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7"},veBAL:"0xf8a0623ab66f985effc1c69d05f1af4badb01b00000200000000000000000060"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:["0x22d398c68030ef6b1c55321cca6e0cecc5c93b2f000200000000000000000678"],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xb60e46d90f2de35f7062a27d3a98749414036d5d000200000000000000000061","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0xc957b1acceb21707b782eb8eee2ed8e20088463d000200000000000000000076","0x3d5981bdd8d3e49eb7bbdc1d2b156a3ee019c18e0000000000000000000001a7","0x14f93df8a4e37bfdb49d2cec4789df7a010603d700000000000000000000011d","0x00a62d31b6c776b6813543bc99ff265f7222dbe100000000000000000000011e","0x0c925fce89a22e36ebd9b3c6e0262234e853d2f600000000000000000000019c"]},Investment:{AllowList:[]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0x44afeb87c871d8fea9398a026dea2bd3a13f5769":"stablePool","0xa55f73e2281c60206ba43a3590db07b8955832be":"stablePool","0xb48cc42c45d262534e46d5965a9ac496f1b7a830":"liquidityBootstrappingPool","0xb0c726778c3ae4b3454d85557a48e8fa502bdd6a":"liquidityBootstrappingPool","0x41e9036ae350baedcc7107760a020dca3c0731ec":"boostedPool","0xb848f50141f3d4255b37ac288c25c109104f2158":"composableStablePool","0x94f68b54191f62f781fe8298a8a5fa3ed772d227":"weightedPool"},Stakable:{AllowList:["0x16faf9f73748013155b7bc116a3008b57332d1e600020000000000000000005b","0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f","0xdcdd4a3d36dec8d57594e89763d069a7e9b223e2000000000000000000000062","0x67f8fcb9d3c463da05de1392efdbb2a87f8599ea000200000000000000000059"]},Metadata:{"0x13acd41c585d7ebb4a9460f7c8f50be60dc080cd00000000000000000000005f":{name:"Balancer Boosted Aave USD",hasIcon:!1}}},[be.MAINNET]:{IdsMap:{staBAL:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063",bbAaveUSD:{v1:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe",v2:"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"},veBAL:"0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3","GyroE","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x9f19a375709baf0e8e35c2c5c65aca676c4c719100000000000000000000006e","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xf93579002dbe8046c43fefe86ec78b1112247bb80000000000000000000002bc","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d","0x5b3240b6be3e7487d61cd1afdfc7fe4fa1d81e6400000000000000000000037b"]},Investment:{AllowList:["0xccf5575570fac94cec733a58ff91bb3d073085c70002000000000000000000af","0xe7b1d394f3b40abeaa0b64a545dbcf89da1ecb3f00010000000000000000009a","0x3b40d7d5ae25df2561944dd68b252016c4c7b2800001000000000000000000c2"]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0x67d27634e44793fe63c467035e31ea8635117cd4":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e":"liquidityBootstrappingPool","0x48767f9f868a4a7b86a90736632f6e44c2df7fa9":"managedPool","0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2":"boostedPool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"stablePool","0xf9ac7b9df2b3454e841110cce5550bd5ac6f875f":"composableStablePool","0xcc508a455f5b0073973107db6a878ddbdab957bc":"weightedPool"},Stakable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063","0x072f14b85add63488ddad88f855fda4a99d6ac9b000200000000000000000027","0x0b09dea16768f0799065c475be02919503cb2a3500020000000000000000001a","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000013","0x1e19cf2d73a72ef1332c882f20534b6519be0276000200000000000000000112","0x27c9f71cc31464b906e0006d4fcbc8900f48f15f00020000000000000000010f","0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080","0x350196326aeaa9b98f1903fb5e8fc2686f85318c000200000000000000000084","0x3e5fa9518ea95c3e533eb377c001702a9aacaa32000200000000000000000052","0x51735bdfbfe3fc13dea8dc6502e2e958989429610002000000000000000000a0","0x5d66fff62c17d841935b60df5f07f6cf79bd0f4700020000000000000000014c","0x5f7fa48d765053f8dd85e052843e12d23e3d7bc50002000000000000000000c0","0x702605f43471183158938c1a3e5f5a359d7b31ba00020000000000000000009f","0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe","0x7edde0cb05ed19e03a9a47cd5e53fc57fde1c80c0002000000000000000000c8","0x8f4205e1604133d1875a3e771ae7e4f2b086563900020000000000000000010e","0x90291319f1d4ea3ad4db0dd8fe9e12baf749e84500020000000000000000013c","0x96646936b91d6b9d7d0c47c496afbf3d6ec7b6f8000200000000000000000019","0x96ba9025311e2f47b840a1f68ed57a3df1ea8747000200000000000000000160","0xa02e4b3d18d4e6b8d18ac421fbc3dfff8933c40a00020000000000000000004b","0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e","0xbaeec99c90e3420ec6c1e7a769d2a856d2898e4d00020000000000000000008a","0xbf96189eee9357a95c7719f4f5047f76bde804e5000200000000000000000087","0xe2469f47ab58cf9cf59f9822e3c5de4950a41c49000200000000000000000089","0xe99481dc77691d8e2456e5f3f61c1810adfc1503000200000000000000000018","0xec60a5fef79a92c741cb74fdd6bfc340c0279b01000200000000000000000015","0xedf085f65b4f6c155e13155502ef925c9a756003000200000000000000000123","0xefaa1604e82e1b3af8430b90192c1b9e8197e377000200000000000000000021","0xf4c0dd9b82da36c07605df83c8a416f11724d88b000200000000000000000026","0xf5aaf7ee8c39b651cebf5f1f50c10631e78e0ef9000200000000000000000069","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc56000000000000000000000066","0x92762b42a06dcdddc5b7362cfb01e631c4d44b40000200000000000000000182","0xde8c195aa41c11a0c4787372defbbddaa31306d2000200000000000000000181","0x17ddd9646a69c9445cd8a9f921d4cd93bf50d108000200000000000000000159","0xc45d42f801105e861e86658648e3678ad7aa70f900010000000000000000011e","0x2d344a84bac123660b021eebe4eb6f12ba25fe8600020000000000000000018a","0xb460daa847c45f1c4a41cb05bfb3b51c92e41b36000200000000000000000194","0x5122e01d819e58bb2e22528c0d68d310f0aa6fd7000200000000000000000163","0x851523a36690bf267bbfec389c823072d82921a90002000000000000000001ed","0xe8cc7e765647625b95f59c15848379d10b9ab4af0002000000000000000001de","0x85370d9e3bb111391cc89f6de344e801760461830002000000000000000001ef","0xa7ff759dbef9f3efdd1d59beee44b966acafe214000200000000000000000180","0x3f7c10701b14197e2695dec6428a2ca4cf7fc3b800020000000000000000023c","0x2d011adf89f0576c9b722c28269fcb5d50c2d17900020000000000000000024d","0x178e029173417b1f9c8bc16dcec6f697bc32374600000000000000000000025d","0xcfca23ca9ca720b6e98e3eb9b6aa0ffc4a5c08b9000200000000000000000274","0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249","0x0578292cb20a443ba1cde459c985ce14ca2bdee5000100000000000000000269","0x8eb6c82c3081bbbd45dcac5afa631aac53478b7c000100000000000000000270","0x1b65fe4881800b91d4277ba738b567cbb200a60d0002000000000000000002cc","0x99a14324cfd525a34bbc93ac7e348929909d57fd00020000000000000000030e","0x9b532ab955417afd0d012eb9f7389457cd0ea712000000000000000000000338","0x48607651416a943bf5ac71c41be1420538e78f87000200000000000000000327","0x6a5ead5433a50472642cd268e584dafa5a394490000200000000000000000366","0x0fd5663d4893ae0d579d580584806aadd2dd0b8b000200000000000000000367","0x441b8a1980f2f2e43a9397099d15cc2fe6d3625000020000000000000000035f","0xf3aeb3abba741f0eece8a1b1d2f11b85899951cb000200000000000000000351","0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d"]},Metadata:{"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb20000000000000000000000fe":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0xa13a9247ea42d743238089903570127dda72fe4400000000000000000000035d":{name:"Balancer Boosted Aave USD",hasIcon:!0},"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000063":{name:"Balancer Stable USD",hasIcon:!0},"0x3dd0843a028c86e0b760b1a76929d1c5ef93a2dd000200000000000000000249":{name:"AuraBAL Stable Pool",hasIcon:!1}}},[be.POLYGON]:{IdsMap:{xMatic:{v1:"0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4",v2:"0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"},stMatic:{v1:"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366",v2:"0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d"},mai4:{mai4:"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012",maiBbaUsd:"0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e"}},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","Gyro2","Gyro3","GyroE","FX"],Stable:{AllowList:["0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xf38cf113d2d4f60c36cbd95af2f48a9a0167045a00000000000000000000005b","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x5028497af0c9a54ea8c6d42a054c0341b9fc616800020000000000000000007b","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb4670d1389c758e4380c4211bcbc85342688b9c50002000000000000000003d8","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0xb4b22bd6cdad0ab828be6f8a4086dfa54e9b373600020000000000000000058f","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x0b8319061732b34cab22445fa83b81f950e4b7ed000000000000000000000709","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xa48d164f6eb0edc68bd03b56fa59e12f24499ad10000000000000000000007c4"]},Investment:{AllowList:[""]},Factories:{"0xa5bf2ddf098bb0ef6d120c98217dd6b141c74ee0":"oracleWeightedPool","0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9":"weightedPool","0xc66ba2b6595d3613ccab350c886ace23866ede24":"stablePool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"stablePool","0x751a0bc0e3f75b38e01cf25bfce7ff36de1c87de":"liquidityBootstrappingPool","0x41b953164995c11c81da73d212ed8af25741b7ac":"liquidityBootstrappingPool","0x0f7bb7ce7b6ed9366f9b6b910adefe72dc538193":"managedPool","0xc128a9954e6c874ea3d62ce62b468ba073093f25":"boostedPool","0xca96c4f198d343e251b1a01f3eba061ef3da73c1":"stablePool","0x136fd06fa01ecf624c7f2b3cb15742c1339dc2c4":"composableStablePool","0x0e39c3d9b2ec765efd9c5c70bb290b1fcd8536e3":"weightedPool"},Stakable:{AllowList:["0x0297e37f1873d2dab4487aa67cd56b58e2f27875000100000000000000000002","0x03cd191f589d12b0582a99808cf19851e468e6b500010000000000000000000a","0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012","0x0d34e5dd4d8f043557145598e4e2dc286b35fd4f000000000000000000000068","0x10f21c9bd8128a29aa785ab2de0d044dcdd79436000200000000000000000059","0x186084ff790c65088ba694df11758fae4943ee9e000200000000000000000032","0x36128d5436d2d70cab39c9af9cce146c38554ff0000100000000000000000008","0x5a6ae1fd70d04ba4a279fc219dfabc53825cb01d00020000000000000000020e","0x614b5038611729ed49e0ded154d8a5d3af9d1d9e00010000000000000000001d","0x7c9cf12d783821d5c63d8e9427af5c44bad92445000100000000000000000051","0x805ca3ccc61cc231851dee2da6aabff0a7714aa7000200000000000000000361","0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366","0xb204bf10bc3a5435017d3db247f56da601dfe08a0002000000000000000000fe","0xc31a37105b94ab4efca1954a14f059af11fcd9bb000000000000000000000455","0xce66904b68f1f070332cbc631de7ee98b650b499000100000000000000000009","0xcf354603a9aebd2ff9f33e1b04246d8ea204ae9500020000000000000000005a","0xdb1db6e248d7bb4175f6e5a382d0a03fe3dcc813000100000000000000000035","0xea4e073c8ac859f2994c07e627178719c8002dc00002000000000000000003dc","0xfeadd389a5c427952d8fdb8057d6c8ba1156cc5600020000000000000000001e","0xc17636e36398602dd37bb5d1b3a9008c7629005f0002000000000000000004c4","0x2dbc9ab0160087ae59474fb7bed95b9e808fa6bc0001000000000000000003db","0xb797adfb7b268faeaa90cadbfed464c76ee599cd0002000000000000000005ba","0x8f9dd2064eb38e8e40f2ab67bde27c0e16ea9b080002000000000000000004ca","0x48e6b98ef6329f8f0a30ebb8c7c960330d64808500000000000000000000075b","0xb54b2125b711cd183edd3dd09433439d5396165200000000000000000000075e","0x8159462d255c1d24915cb51ec361f700174cd99400000000000000000000075d","0xb20fc01d21a50d2c734c4a1262b4404d41fa7bf000000000000000000000075c"]},Metadata:{}},[be.ARBITRUM]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX"],Stable:{AllowList:["0x9be7de742865d021c0e8fb9d64311b2c040c1ec1000200000000000000000012","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x386b5d43ba8b97c43d4afb4cdae7877a1b295e8a000000000000000000000020","0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0xd89746affa5483627a87e55713ec1905114394950002000000000000000000bf","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159"]},Investment:{AllowList:[""]},Factories:{"0x7dfdef5f355096603419239ce743bfaf1120312b":"weightedPool","0xcf0a32bbef8f064969f21f7e02328fb577382018":"weightedPool","0x2433477a10fc5d31b9513c638f19ee85caed53fd":"stablePool","0xebfd5681977e38af65a7487dc70b8221d089ccad":"stablePool","0x142b9666a0a3a30477b052962dda81547e7029ab":"liquidityBootstrappingPool","0x1802953277fd955f9a254b80aa0582f193cf1d77":"liquidityBootstrappingPool","0xacd615b3705b9c880e4e7293f1030b34e57b4c1c":"managedPool","0xdae7e32adc5d490a43ccba1f0c736033f2b4efca":"boostedPool","0xef44d6786b2b4d544b7850fe67ce6381626bf2d6":"stablePool","0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33":"composableStablePool","0x8df6efec5547e31b0eb7d1291b511ff8a2bf987c":"weightedPool"},Stakable:{AllowList:["0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d","0x0adeb25cb5920d4f7447af4a0428072edc2cee2200020000000000000000004a","0x1533a3278f3f9141d5f820a184ea4b017fce2382000000000000000000000016","0x1779900c7707885720d39aa741f4086886307e9e00020000000000000000004b","0x4a3a22a3e7fee0ffbb66f1c28bfac50f75546fc7000200000000000000000008","0x5a5884fc31948d59df2aeccca143de900d49e1a300000000000000000000006f","0x64541216bafffeec8ea535bb71fbc927831d0595000100000000000000000002","0x651e00ffd5ecfa7f3d4f33d62ede0a97cf62ede2000200000000000000000006","0xb28670b3e7ad27bd41fb5938136bf9e9cba90d6500020000000000000000001e","0xb340b6b1a34019853cb05b2de6ee8ffd0b89a008000100000000000000000036","0xb5b77f1ad2b520df01612399258e7787af63025d000200000000000000000010","0xc2f082d33b5b8ef3a7e3de30da54efd3114512ac000200000000000000000017","0xc61ff48f94d801c1ceface0289085197b5ec44f000020000000000000000004d","0xcc65a812ce382ab909a11e434dbf75b34f1cc59d000200000000000000000001","0xe1b40094f1446722c424c598ac412d590e0b3ffb000200000000000000000076","0xb3028ca124b80cfe6e9ca57b70ef2f0ccc41ebd40002000000000000000000ba","0x7bceaa9c5e7f4836fec3bce2d5346637c9b13970000000000000000000000102","0xfb5e6d0c1dfed2ba000fbc040ab8df3615ac329c000000000000000000000159","0x178e029173417b1f9c8bc16dcec6f697bc323746000200000000000000000158"]},Metadata:{}},[be.GNOSIS]:{IdsMap:{},Pagination:{PerPage:10,PerPool:10,PerPoolInitial:5},DelegateOwner:"0xba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b",ZeroAddress:"0x0000000000000000000000000000000000000000",DynamicFees:{Gauntlet:[]},BlockList:[""],ExcludedPoolTypes:["Element","AaveLinear","Linear","ERC4626Linear","FX","Gyro2","Gyro3","GyroE","HighAmpComposableStable","FX"],Stable:{AllowList:["0x11884da90fb4221b3aa288a7741c51ec4fc43b2f000000000000000000000004","0x707b7d4a1bae449d546dcab869256591bbb3d70b000000000000000000000000"]},Investment:{AllowList:[]},Factories:{},Stakable:{AllowList:[]},Metadata:{}}};function ge(e){return Ie[e]?Ie[e]:he}var _e,we,Pe,xe,Ee,ve,Se;!function(e){e.Id="id",e.Address="address",e.PoolId="poolId"}(_e||(_e={})),function(e){e.Balance="balance",e.Id="id",e.PoolId="poolId",e.UserAddress="userAddress"}(we||(we={})),function(e){e.Id="id",e.UserAddress="user",e.GaugeId="gauge",e.Balance="balance"}(Pe||(Pe={})),function(e){e[e.GeneralPool=0]="GeneralPool",e[e.MinimalSwapInfoPool=1]="MinimalSwapInfoPool",e[e.TwoTokenPool=2]="TwoTokenPool"}(xe||(xe={})),function(e){e[e.DepositInternal=0]="DepositInternal",e[e.WithdrawInternal=1]="WithdrawInternal",e[e.TransferInternal=2]="TransferInternal",e[e.TransferExternal=3]="TransferExternal"}(Ee||(Ee={})),function(e){e[e.Withdraw=0]="Withdraw",e[e.Deposit=1]="Deposit",e[e.Update=2]="Update"}(ve||(ve={})),function(e){e.Weighted="Weighted",e.Investment="Investment",e.Stable="Stable",e.ComposableStable="ComposableStable",e.MetaStable="MetaStable",e.StablePhantom="StablePhantom",e.LiquidityBootstrapping="LiquidityBootstrapping",e.Element="Element",e.Gyro2="Gyro2",e.Gyro3="Gyro3",e.GyroE="GyroE",e.Managed="Managed",e.AaveLinear="AaveLinear",e.Linear="Linear",e.EulerLinear="EulerLinear",e.ERC4626Linear="ERC4626Linear",e.BeefyLinear="BeefyLinear",e.GearboxLinear="GearboxLinear",e.MidasLinear="MidasLinear",e.ReaperLinear="ReaperLinear",e.SiloLinear="SiloLinear",e.TetuLinear="TetuLinear",e.YearnLinear="YearnLinear",e.FX="FX"}(Se||(Se={}));class Ae{constructor(){this.enableLogging=!0}static getInstance(){return Ae.instance||(Ae.instance=new Ae),Ae.instance}setLoggingEnabled(e){this.enableLogging=e}info(e){this.enableLogging}warn(e){this.enableLogging&&console.warn(`[WARN] ${e}`)}error(e){this.enableLogging&&console.error(`[ERROR] ${e}`)}}const ke=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct AaveLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Oe{static createInterface(){return new c.Interface(ke)}static connect(e,t){return new y(e,ke,t)}}Oe.abi=ke;const Me=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"AaveLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract AaveLinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Ce{static createInterface(){return new c.Interface(Me)}static connect(e,t){return new y(e,Me,t)}}Ce.abi=Me;const Re=[{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"}];class Be{static createInterface(){return new c.Interface(Re)}static connect(e,t){return new y(e,Re,t)}}Be.abi=Re;const Fe=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}];class Ne{static createInterface(){return new c.Interface(Fe)}static connect(e,t){return new y(e,Fe,t)}}Ne.abi=Fe;const De=[{inputs:[{internalType:"contract IBalancerTokenAdmin",name:"tokenAdmin",type:"address"},{internalType:"contract IGaugeController",name:"gaugeController",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"address",name:"gauge",type:"address"},{indexed:!1,internalType:"uint256",name:"minted",type:"uint256"}],name:"Minted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"address",name:"minter",type:"address"},{indexed:!1,internalType:"bool",name:"approval",type:"bool"}],name:"MinterApprovalSet",type:"event"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"allowed_to_mint_for",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBalancerToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBalancerTokenAdmin",outputs:[{internalType:"contract IBalancerTokenAdmin",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGaugeController",outputs:[{internalType:"contract IGaugeController",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"getMinterApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"gauge",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"mintFor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"}],name:"mintMany",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"address",name:"user",type:"address"}],name:"mintManyFor",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"mint_for",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[8]",name:"gauges",type:"address[8]"}],name:"mint_many",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"gauge",type:"address"}],name:"minted",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"bool",name:"approval",type:"bool"}],name:"setMinterApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"},{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"setMinterApprovalWithSignature",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"minter",type:"address"}],name:"toggle_approve_mint",outputs:[],stateMutability:"nonpayable",type:"function"}];class Le{static createInterface(){return new c.Interface(De)}static connect(e,t){return new y(e,De,t)}}Le.abi=De;const Ue=[{inputs:[{internalType:"contract IVault",name:"_vault",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getAmpForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getInRecoveryModeForPools",outputs:[{internalType:"bool[]",name:"",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getIsPausedForPools",outputs:[{internalType:"bool[]",name:"",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getLinearTargetsForPools",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getNormalizedWeightsForPools",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"},{components:[{internalType:"bool",name:"loadTokenBalanceUpdatesAfterBlock",type:"bool"},{internalType:"bool",name:"loadTotalSupply",type:"bool"},{internalType:"bool",name:"loadSwapFees",type:"bool"},{internalType:"bool",name:"loadLinearWrappedTokenRates",type:"bool"},{internalType:"bool",name:"loadLinearTargets",type:"bool"},{internalType:"bool",name:"loadNormalizedWeights",type:"bool"},{internalType:"bool",name:"loadScalingFactors",type:"bool"},{internalType:"bool",name:"loadAmps",type:"bool"},{internalType:"bool",name:"loadRates",type:"bool"},{internalType:"uint256",name:"blockNumber",type:"uint256"},{internalType:"enum TotalSupplyType[]",name:"totalSupplyTypes",type:"uint8[]"},{internalType:"enum SwapFeeType[]",name:"swapFeeTypes",type:"uint8[]"},{internalType:"uint256[]",name:"linearPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"weightedPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"scalingFactorPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"ampPoolIdxs",type:"uint256[]"},{internalType:"uint256[]",name:"ratePoolIdxs",type:"uint256[]"}],internalType:"struct PoolDataQueryConfig",name:"config",type:"tuple"}],name:"getPoolData",outputs:[{internalType:"uint256[][]",name:"balances",type:"uint256[][]"},{internalType:"uint256[]",name:"totalSupplies",type:"uint256[]"},{internalType:"uint256[]",name:"swapFees",type:"uint256[]"},{internalType:"uint256[]",name:"linearWrappedTokenRates",type:"uint256[]"},{internalType:"uint256[][]",name:"linearTargets",type:"uint256[][]"},{internalType:"uint256[][]",name:"weights",type:"uint256[][]"},{internalType:"uint256[][]",name:"scalingFactors",type:"uint256[][]"},{internalType:"uint256[]",name:"amps",type:"uint256[]"},{internalType:"uint256[]",name:"rates",type:"uint256[]"},{internalType:"uint256[]",name:"ignoreIdxs",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"},{components:[{internalType:"bool",name:"loadInRecoveryMode",type:"bool"},{internalType:"bool",name:"loadIsPaused",type:"bool"}],internalType:"struct PoolStatusQueryConfig",name:"config",type:"tuple"}],name:"getPoolStatus",outputs:[{internalType:"bool[]",name:"isPaused",type:"bool[]"},{internalType:"bool[]",name:"inRecoveryMode",type:"bool[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32[]",name:"poolIds",type:"bytes32[]"},{internalType:"uint256",name:"blockNumber",type:"uint256"}],name:"getPoolTokenBalancesWithUpdatesAfterBlock",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getRateForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getScalingFactorsForPools",outputs:[{internalType:"uint256[][]",name:"",type:"uint256[][]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"},{internalType:"enum SwapFeeType[]",name:"swapFeeTypes",type:"uint8[]"}],name:"getSwapFeePercentageForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"},{internalType:"enum TotalSupplyType[]",name:"totalSupplyTypes",type:"uint8[]"}],name:"getTotalSupplyForPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address[]",name:"poolAddresses",type:"address[]"}],name:"getWrappedTokenRateForLinearPools",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"vault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"}];class Ve{static createInterface(){return new c.Interface(Ue)}static connect(e,t){return new y(e,Ue,t)}}Ve.abi=Ue;const Ge=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class qe{static createInterface(){return new c.Interface(Ge)}static connect(e,t){return new y(e,Ge,t)}}qe.abi=Ge;const We=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"wstETH",type:"address"},{internalType:"contract IBalancerMinter",name:"minter",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approveVault",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"batchSwap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"},{components:[{internalType:"uint256",name:"index",type:"uint256"},{internalType:"uint256",name:"key",type:"uint256"}],internalType:"struct VaultActions.OutputReference[]",name:"outputReferences",type:"tuple[]"}],name:"exitPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge[]",name:"gauges",type:"address[]"}],name:"gaugeClaimRewards",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeDeposit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address[]",name:"gauges",type:"address[]"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"gaugeMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bool",name:"approval",type:"bool"},{internalType:"address",name:"user",type:"address"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"gaugeSetMinterApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStakingLiquidityGauge",name:"gauge",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"gaugeWithdraw",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"getEntrypoint",outputs:[{internalType:"contract IBalancerRelayer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum VaultActions.PoolKind",name:"kind",type:"uint8"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"},{internalType:"uint256",name:"value",type:"uint256"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"uint256",name:"ref",type:"uint256"}],name:"peekChainedReferenceValue",outputs:[{internalType:"uint256",name:"value",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"},{internalType:"bytes",name:"authorisation",type:"bytes"}],name:"setRelayerApproval",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"stakeETHAndWrap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"swap",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"toUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapAaveStaticToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ICToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapCompoundV2",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IEulerToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapEuler",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IGearboxDieselToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"dieselAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapGearbox",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IShareToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapShareToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ITetuSmartVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapTetu",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapWstETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"unwrapYearn",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20Permit",name:"token",type:"address"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermit",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20PermitDAI",name:"token",type:"address"},{internalType:"address",name:"holder",type:"address"},{internalType:"uint256",name:"nonce",type:"uint256"},{internalType:"uint256",name:"expiry",type:"uint256"},{internalType:"bool",name:"allowed",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"vaultPermitDAI",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IStaticATokenLM",name:"staticToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"fromUnderlying",type:"bool"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapAaveDynamicToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ICToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapCompoundV2",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC4626",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapERC4626",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IEulerToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"eulerProtocol",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapEuler",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IGearboxDieselToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"mainAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapGearbox",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IReaperTokenVault",name:"vaultToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapReaperVaultToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IShareToken",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapShareToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapStETH",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract ITetuSmartVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapTetu",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IUnbuttonToken",name:"wrapperToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"uAmount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapUnbuttonToken",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IYearnTokenVault",name:"wrappedToken",type:"address"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"outputReference",type:"uint256"}],name:"wrapYearn",outputs:[],stateMutability:"payable",type:"function"}];class $e{static createInterface(){return new c.Interface(We)}static connect(e,t){return new y(e,We,t)}}$e.abi=We;const He=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ComposableStablePool.NewPoolParams",name:"params",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!1,internalType:"uint256",name:"rate",type:"uint256"}],name:"TokenRateCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"tokenIndex",type:"uint256"},{indexed:!0,internalType:"contract IRateProvider",name:"provider",type:"address"},{indexed:!1,internalType:"uint256",name:"cacheDuration",type:"uint256"}],name:"TokenRateProviderSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastJoinExitData",outputs:[{internalType:"uint256",name:"lastJoinExitAmplification",type:"uint256"},{internalType:"uint256",name:"lastPostJoinExitInvariant",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMinimumBpt",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"getTokenRateCache",outputs:[{internalType:"uint256",name:"rate",type:"uint256"},{internalType:"uint256",name:"oldRate",type:"uint256"},{internalType:"uint256",name:"duration",type:"uint256"},{internalType:"uint256",name:"expires",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"isTokenExemptFromYieldProtocolFee",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"duration",type:"uint256"}],name:"setTokenRateCacheDuration",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"}],name:"updateTokenRateCache",outputs:[],stateMutability:"nonpayable",type:"function"}];class Xe{static createInterface(){return new c.Interface(He)}static connect(e,t){return new y(e,He,t)}}Xe.abi=He;const Ye=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256[]",name:"tokenRateCacheDurations",type:"uint256[]"},{internalType:"bool[]",name:"exemptFromYieldProtocolFeeFlags",type:"bool[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract ComposableStablePool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class je{static createInterface(){return new c.Interface(Ye)}static connect(e,t){return new y(e,Ye,t)}}je.abi=Ye;const Ke=[{inputs:[{internalType:"contract IERC20",name:"_underlying",type:"address"},{internalType:"contract IERC20",name:"_bond",type:"address"},{internalType:"uint256",name:"_expiration",type:"uint256"},{internalType:"uint256",name:"_unitSeconds",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_percentFee",type:"uint256"},{internalType:"uint256",name:"_percentFeeGov",type:"uint256"},{internalType:"address",name:"_governance",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"collectedBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"collectedBond",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBase",type:"uint256"},{indexed:!1,internalType:"uint256",name:"remainingBond",type:"uint256"}],name:"FeeCollection",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"FEE_BOUND",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"bond",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"bondDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"expiration",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesBond",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"feesUnderlying",outputs:[{internalType:"uint128",name:"",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"governance",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"increaseApproval",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"currentBalances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"protocolSwapFee",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"currentBalanceTokenIn",type:"uint256"},{internalType:"uint256",name:"currentBalanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"percentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"percentFeeGov",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amountX",type:"uint256"},{internalType:"uint256",name:"reserveX",type:"uint256"},{internalType:"uint256",name:"reserveY",type:"uint256"},{internalType:"bool",name:"out",type:"bool"}],name:"solveTradeInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"underlying",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"underlyingDecimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"unitSeconds",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}];class Je{static createInterface(){return new c.Interface(Ke)}static connect(e,t){return new y(e,Ke,t)}}Je.abi=Ke;const ze=[{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}];class Ze{static createInterface(){return new c.Interface(ze)}static connect(e,t){return new y(e,ze,t)}}Ze.abi=ze;const Qe=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct ERC4626LinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class et{static createInterface(){return new c.Interface(Qe)}static connect(e,t){return new y(e,Qe,t)}}et.abi=Qe;const tt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"Erc4626LinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class nt{static createInterface(){return new c.Interface(tt)}static connect(e,t){return new y(e,tt,t)}}nt.abi=tt;const at=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct EulerLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class ot{static createInterface(){return new c.Interface(at)}static connect(e,t){return new y(e,at,t)}}ot.abi=at;const it=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"_eulerProtocol",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"EulerLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"eulerProtocol",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class st{static createInterface(){return new c.Interface(it)}static connect(e,t){return new y(e,it,t)}}st.abi=it;const rt=[{inputs:[{internalType:"address[]",name:"_assetsToRegister",type:"address[]"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"uint256",name:"_protocolPercentFee",type:"uint256"},{internalType:"string",name:"_name",type:"string"},{internalType:"string",name:"_symbol",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"numeraire",type:"address"},{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!1,internalType:"uint256",name:"weight",type:"uint256"}],name:"AssetIncluded",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"derivative",type:"address"},{indexed:!0,internalType:"address",name:"numeraire",type:"address"},{indexed:!0,internalType:"address",name:"reserve",type:"address"},{indexed:!1,internalType:"address",name:"assimilator",type:"address"}],name:"AssimilatorIncluded",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"newCollector",type:"address"}],name:"ChangeCollectorAddress",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"isEmergency",type:"bool"}],name:"EmergencyAlarm",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"lptAmountBurned",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"amountsWithdrawn",type:"uint256[]"}],name:"EmergencyWithdraw",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"feesCollected",type:"uint256"}],name:"FeesAccrued",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"feesCollected",type:"uint256"}],name:"FeesCollected",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"lptAmountBurned",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"amountsWithdrawn",type:"uint256[]"}],name:"OnExitPool",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"uint256",name:"lptAmountMinted",type:"uint256"},{indexed:!1,internalType:"uint256[]",name:"amountsDeposited",type:"uint256[]"}],name:"OnJoinPool",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"alpha",type:"uint256"},{indexed:!1,internalType:"uint256",name:"beta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"delta",type:"uint256"},{indexed:!1,internalType:"uint256",name:"epsilon",type:"uint256"},{indexed:!1,internalType:"uint256",name:"lambda",type:"uint256"}],name:"ParametersSet",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Paused",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"updater",type:"address"},{indexed:!1,internalType:"uint256",name:"newProtocolPercentage",type:"uint256"}],name:"ProtocolFeeShareUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"trader",type:"address"},{indexed:!0,internalType:"address",name:"origin",type:"address"},{indexed:!0,internalType:"address",name:"target",type:"address"},{indexed:!1,internalType:"uint256",name:"originAmount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"targetAmount",type:"uint256"}],name:"Trade",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"account",type:"address"}],name:"Unpaused",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_derivative",type:"address"}],name:"assimilator",outputs:[{internalType:"address",name:"assimilator_",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"collectorAddress",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"curve",outputs:[{internalType:"int128",name:"alpha",type:"int128"},{internalType:"int128",name:"beta",type:"int128"},{internalType:"int128",name:"delta",type:"int128"},{internalType:"int128",name:"epsilon",type:"int128"},{internalType:"int128",name:"lambda",type:"int128"},{internalType:"uint256",name:"cap",type:"uint256"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"fxPoolAddress",type:"address"},{internalType:"bytes32",name:"poolId",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"derivatives",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"emergency",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address[]",name:"_assets",type:"address[]"},{internalType:"uint256[]",name:"_assetWeights",type:"uint256[]"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"liquidity",outputs:[{internalType:"uint256",name:"total_",type:"uint256"},{internalType:"uint256[]",name:"individual_",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"numeraires",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"paused",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"protocolPercentFee",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"reserves",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_cap",type:"uint256"}],name:"setCap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_collectorAddress",type:"address"}],name:"setCollectorAddress",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"_emergency",type:"bool"}],name:"setEmergency",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_alpha",type:"uint256"},{internalType:"uint256",name:"_beta",type:"uint256"},{internalType:"uint256",name:"_feeAtHalt",type:"uint256"},{internalType:"uint256",name:"_epsilon",type:"uint256"},{internalType:"uint256",name:"_lambda",type:"uint256"}],name:"setParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_protocolPercentFee",type:"uint256"}],name:"setProtocolPercentFee",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalUnclaimedFeesInNumeraire",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"totalDepositNumeraire",type:"uint256"}],name:"viewDeposit",outputs:[{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"viewParameters",outputs:[{internalType:"uint256",name:"alpha_",type:"uint256"},{internalType:"uint256",name:"beta_",type:"uint256"},{internalType:"uint256",name:"delta_",type:"uint256"},{internalType:"uint256",name:"epsilon_",type:"uint256"},{internalType:"uint256",name:"lambda_",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"_curvesToBurn",type:"uint256"}],name:"viewWithdraw",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"}];class pt{static createInterface(){return new c.Interface(rt)}static connect(e,t){return new y(e,rt,t)}}pt.abi=rt;const lt=[{inputs:[],name:"CLAIM_FREQUENCY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauge",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge[]",name:"gauges",type:"address[]"},{internalType:"address",name:"user",type:"address"}],name:"claimRewardsFromGauges",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IRewardsOnlyGauge",name:"gauge",type:"address"},{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"token",type:"address"}],name:"getPendingRewards",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"}];class dt{static createInterface(){return new c.Interface(lt)}static connect(e,t){return new y(e,lt,t)}}dt.abi=lt;const ut=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct GearboxLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class ct{static createInterface(){return new c.Interface(ut)}static connect(e,t){return new y(e,ut,t)}}ct.abi=ut;const yt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"GearboxLinearPoolCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract GearboxLinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class mt{static createInterface(){return new c.Interface(yt)}static connect(e,t){return new y(e,yt,t)}}mt.abi=yt;const bt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IwstETH",name:"wstETH",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"swapAmounts",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getStETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWstETH",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"swapAmount",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class ft{static createInterface(){return new c.Interface(bt)}static connect(e,t){return new y(e,bt,t)}}ft.abi=bt;const Tt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class ht{static createInterface(){return new c.Interface(Tt)}static connect(e,t){return new y(e,Tt,t)}}ht.abi=Tt;const It=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"UpdateLiquidityLimit",inputs:[{name:"user",type:"address",indexed:!0},{name:"original_balance",type:"uint256",indexed:!1},{name:"original_supply",type:"uint256",indexed:!1},{name:"working_balance",type:"uint256",indexed:!1},{name:"working_supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Transfer",inputs:[{name:"_from",type:"address",indexed:!0},{name:"_to",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Approval",inputs:[{name:"_owner",type:"address",indexed:!0},{name:"_spender",type:"address",indexed:!0},{name:"_value",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"minter",type:"address"},{name:"veBoostProxy",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit",inputs:[{name:"_value",type:"uint256"},{name:"_addr",type:"address"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[{name:"_value",type:"uint256"},{name:"_claim_rewards",type:"bool"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"claim_rewards",inputs:[{name:"_addr",type:"address"},{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"transferFrom",inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"transfer",inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"approve",inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"permit",inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"},{name:"_value",type:"uint256"},{name:"_deadline",type:"uint256"},{name:"_v",type:"uint8"},{name:"_r",type:"bytes32"},{name:"_s",type:"bytes32"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"increaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_added_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"decreaseAllowance",inputs:[{name:"_spender",type:"address"},{name:"_subtracted_value",type:"uint256"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"user_checkpoint",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"bool"}]},{stateMutability:"nonpayable",type:"function",name:"set_rewards_receiver",inputs:[{name:"_receiver",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"kick",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_reward_token",inputs:[{name:"_reward_token",type:"address"},{name:"_amount",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"add_reward",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_reward_distributor",inputs:[{name:"_reward_token",type:"address"},{name:"_distributor",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"set_killed",inputs:[{name:"_is_killed",type:"bool"}],outputs:[]},{stateMutability:"view",type:"function",name:"claimed_reward",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward",inputs:[{name:"_user",type:"address"},{name:"_reward_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_reward_write",inputs:[{name:"_addr",type:"address"},{name:"_token",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"claimable_tokens",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"future_epoch_time",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"inflation_rate",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"version",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"allowance",inputs:[{name:"owner",type:"address"},{name:"spender",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"initialize",inputs:[{name:"_lp_token",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"DOMAIN_SEPARATOR",inputs:[],outputs:[{name:"",type:"bytes32"}]},{stateMutability:"view",type:"function",name:"nonces",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"factory",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"lp_token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"is_killed",inputs:[],outputs:[{name:"",type:"bool"}]},{stateMutability:"view",type:"function",name:"reward_count",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"reward_data",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"token",type:"address"},{name:"distributor",type:"address"},{name:"period_finish",type:"uint256"},{name:"rate",type:"uint256"},{name:"last_update",type:"uint256"},{name:"integral",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"rewards_receiver",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"reward_integral_for",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_balances",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"working_supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_checkpoint_of",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_fraction",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"period",inputs:[],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"reward_tokens",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"period_timestamp",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"integrate_inv_supply",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"uint256"}]}];class gt{static createInterface(){return new c.Interface(It)}static connect(e,t){return new y(e,It,t)}}gt.abi=It;const _t=[{constant:!1,inputs:[{components:[{name:"target",type:"address"},{name:"callData",type:"bytes"}],name:"calls",type:"tuple[]"}],name:"aggregate",outputs:[{name:"blockNumber",type:"uint256"},{name:"returnData",type:"bytes[]"}],payable:!1,stateMutability:"nonpayable",type:"function"}];class wt{static createInterface(){return new c.Interface(_t)}static connect(e,t){return new y(e,_t,t)}}wt.abi=_t;const Pt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256",name:"amplificationParameter",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"startValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endValue",type:"uint256"},{indexed:!1,internalType:"uint256",name:"startTime",type:"uint256"},{indexed:!1,internalType:"uint256",name:"endTime",type:"uint256"}],name:"AmpUpdateStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"currentValue",type:"uint256"}],name:"AmpUpdateStopped",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAmplificationParameter",outputs:[{internalType:"uint256",name:"value",type:"uint256"},{internalType:"bool",name:"isUpdating",type:"bool"},{internalType:"uint256",name:"precision",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"swapRequest",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"rawEndValue",type:"uint256"},{internalType:"uint256",name:"endTime",type:"uint256"}],name:"startAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"stopAmplificationParameterUpdate",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}];class xt{static createInterface(){return new c.Interface(Pt)}static connect(e,t){return new y(e,Pt,t)}}xt.abi=Pt;const Et=[{inputs:[{internalType:"contract IStaticAToken",name:"_waToken",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"waToken",outputs:[{internalType:"contract IStaticAToken",name:"",type:"address"}],stateMutability:"view",type:"function"}];class vt{static createInterface(){return new c.Interface(Et)}static connect(e,t){return new y(e,Et,t)}}vt.abi=Et;const St=[{inputs:[{internalType:"contract IAuthorizer",name:"authorizer",type:"address"},{internalType:"contract IWETH",name:"weth",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"AuthorizerChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"address",name:"recipient",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"ExternalBalanceTransfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeAmount",type:"uint256"}],name:"FlashLoan",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"delta",type:"int256"}],name:"InternalBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"liquidityProvider",type:"address"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"int256[]",name:"deltas",type:"int256[]"},{indexed:!1,internalType:"uint256[]",name:"protocolFeeAmounts",type:"uint256[]"}],name:"PoolBalanceChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"assetManager",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"int256",name:"cashDelta",type:"int256"},{indexed:!1,internalType:"int256",name:"managedDelta",type:"int256"}],name:"PoolBalanceManaged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"address",name:"poolAddress",type:"address"},{indexed:!1,internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"PoolRegistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"relayer",type:"address"},{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"RelayerApprovalChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!0,internalType:"contract IERC20",name:"tokenIn",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"tokenOut",type:"address"},{indexed:!1,internalType:"uint256",name:"amountIn",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amountOut",type:"uint256"}],name:"Swap",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"TokensDeregistered",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"bytes32",name:"poolId",type:"bytes32"},{indexed:!1,internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{indexed:!1,internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"TokensRegistered",type:"event"},{inputs:[],name:"WETH",outputs:[{internalType:"contract IWETH",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"int256[]",name:"limits",type:"int256[]"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"batchSwap",outputs:[{internalType:"int256[]",name:"assetDeltas",type:"int256[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"deregisterTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"minAmountsOut",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.ExitPoolRequest",name:"request",type:"tuple"}],name:"exitPool",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IFlashLoanRecipient",name:"recipient",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"flashLoan",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"}],name:"getInternalBalance",outputs:[{internalType:"uint256[]",name:"balances",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPool",outputs:[{internalType:"address",name:"",type:"address"},{internalType:"enum IVault.PoolSpecialization",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"}],name:"getPoolTokenInfo",outputs:[{internalType:"uint256",name:"cash",type:"uint256"},{internalType:"uint256",name:"managed",type:"uint256"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"assetManager",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"}],name:"getPoolTokens",outputs:[{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract ProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"relayer",type:"address"}],name:"hasApprovedRelayer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{components:[{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{internalType:"uint256[]",name:"maxAmountsIn",type:"uint256[]"},{internalType:"bytes",name:"userData",type:"bytes"},{internalType:"bool",name:"fromInternalBalance",type:"bool"}],internalType:"struct IVault.JoinPoolRequest",name:"request",type:"tuple"}],name:"joinPool",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.PoolBalanceOpKind",name:"kind",type:"uint8"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],internalType:"struct IVault.PoolBalanceOp[]",name:"ops",type:"tuple[]"}],name:"managePoolBalance",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.UserBalanceOpKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"asset",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"sender",type:"address"},{internalType:"address payable",name:"recipient",type:"address"}],internalType:"struct IVault.UserBalanceOp[]",name:"ops",type:"tuple[]"}],name:"manageUserBalance",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"assetInIndex",type:"uint256"},{internalType:"uint256",name:"assetOutIndex",type:"uint256"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.BatchSwapStep[]",name:"swaps",type:"tuple[]"},{internalType:"contract IAsset[]",name:"assets",type:"address[]"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"}],name:"queryBatchSwap",outputs:[{internalType:"int256[]",name:"",type:"int256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"enum IVault.PoolSpecialization",name:"specialization",type:"uint8"}],name:"registerPool",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"}],name:"registerTokens",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IAuthorizer",name:"newAuthorizer",type:"address"}],name:"setAuthorizer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"relayer",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setRelayerApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IAsset",name:"assetIn",type:"address"},{internalType:"contract IAsset",name:"assetOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IVault.SingleSwap",name:"singleSwap",type:"tuple"},{components:[{internalType:"address",name:"sender",type:"address"},{internalType:"bool",name:"fromInternalBalance",type:"bool"},{internalType:"address payable",name:"recipient",type:"address"},{internalType:"bool",name:"toInternalBalance",type:"bool"}],internalType:"struct IVault.FundManagement",name:"funds",type:"tuple"},{internalType:"uint256",name:"limit",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"}],name:"swap",outputs:[{internalType:"uint256",name:"amountCalculated",type:"uint256"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}];class At{static createInterface(){return new c.Interface(St)}static connect(e,t){return new y(e,St,t)}}At.abi=St;const kt=[{inputs:[{components:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"address[]",name:"assetManagers",type:"address[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],internalType:"struct WeightedPool.NewPoolParams",name:"params",type:"tuple"},{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"feeType",type:"uint256"},{indexed:!1,internalType:"uint256",name:"protocolFeePercentage",type:"uint256"}],name:"ProtocolFeePercentageCacheUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DELEGATE_PROTOCOL_SWAP_FEES_SENTINEL",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"getATHRateProduct",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getActualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastPostJoinExitInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"feeType",type:"uint256"}],name:"getProtocolFeePercentageCache",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolSwapFeeDelegation",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRateProviders",outputs:[{internalType:"contract IRateProvider[]",name:"",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bytes",name:"poolConfig",type:"bytes"}],name:"setAssetManagerPoolConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"updateProtocolFeePercentageCache",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Ot{static createInterface(){return new c.Interface(kt)}static connect(e,t){return new y(e,kt,t)}}Ot.abi=kt;const Mt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"normalizedWeights",type:"uint256[]"},{internalType:"contract IRateProvider[]",name:"rateProviders",type:"address[]"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Ct{static createInterface(){return new c.Interface(Mt)}static connect(e,t){return new y(e,Mt,t)}}Ct.abi=Mt;const Rt=[{inputs:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"address",name:"assetManager",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"string",name:"version",type:"string"}],internalType:"struct YearnLinearPool.ConstructorArgs",name:"args",type:"tuple"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"RecoveryModeStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"lowerTarget",type:"uint256"},{indexed:!1,internalType:"uint256",name:"upperTarget",type:"uint256"}],name:"TargetsSet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableRecoveryMode",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getBptIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getDomainSeparator",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMainToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"getNextNonce",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeesCollector",outputs:[{internalType:"contract IProtocolFeesCollector",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getScalingFactors",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTargets",outputs:[{internalType:"uint256",name:"lowerTarget",type:"uint256"},{internalType:"uint256",name:"upperTarget",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVirtualSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedIndex",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedToken",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getWrappedTokenRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"inRecoveryMode",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFees",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"indexIn",type:"uint256"},{internalType:"uint256",name:"indexOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"uint256",name:"",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"newLowerTarget",type:"uint256"},{internalType:"uint256",name:"newUpperTarget",type:"uint256"}],name:"setTargets",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Bt{static createInterface(){return new c.Interface(Rt)}static connect(e,t){return new y(e,Rt,t)}}Bt.abi=Rt;const Ft=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IProtocolFeePercentagesProvider",name:"protocolFeeProvider",type:"address"},{internalType:"contract IBalancerQueries",name:"queries",type:"address"},{internalType:"string",name:"factoryVersion",type:"string"},{internalType:"string",name:"poolVersion",type:"string"},{internalType:"uint256",name:"initialPauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[],name:"FactoryDisabled",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"}],name:"PoolCreated",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"pool",type:"address"},{indexed:!0,internalType:"uint256",name:"protocolId",type:"uint256"}],name:"YearnLinearPoolCreated",type:"event"},{inputs:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"mainToken",type:"address"},{internalType:"contract IERC20",name:"wrappedToken",type:"address"},{internalType:"uint256",name:"upperTarget",type:"uint256"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"address",name:"owner",type:"address"},{internalType:"uint256",name:"protocolId",type:"uint256"},{internalType:"bytes32",name:"salt",type:"bytes32"}],name:"create",outputs:[{internalType:"contract LinearPool",name:"",type:"address"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"disable",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCode",outputs:[{internalType:"bytes",name:"",type:"bytes"}],stateMutability:"view",type:"function"},{inputs:[],name:"getCreationCodeContracts",outputs:[{internalType:"address",name:"contractA",type:"address"},{internalType:"address",name:"contractB",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLastCreatedPool",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPauseConfiguration",outputs:[{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolVersion",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"getProtocolFeePercentagesProvider",outputs:[{internalType:"contract IProtocolFeePercentagesProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"isDisabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"pool",type:"address"}],name:"isPoolFromFactory",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"version",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"}];class Nt{static createInterface(){return new c.Interface(Ft)}static connect(e,t){return new y(e,Ft,t)}}Nt.abi=Ft;const Dt=[{inputs:[{components:[{components:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"contract IERC20",name:"token0",type:"address"},{internalType:"contract IERC20",name:"token1",type:"address"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"},{internalType:"uint256",name:"pauseWindowDuration",type:"uint256"},{internalType:"uint256",name:"bufferPeriodDuration",type:"uint256"},{internalType:"bool",name:"oracleEnabled",type:"bool"},{internalType:"address",name:"owner",type:"address"}],internalType:"struct ExtensibleWeightedPool2Tokens.NewPoolParams",name:"baseParams",type:"tuple"},{components:[{internalType:"int256",name:"alpha",type:"int256"},{internalType:"int256",name:"beta",type:"int256"},{internalType:"int256",name:"c",type:"int256"},{internalType:"int256",name:"s",type:"int256"},{internalType:"int256",name:"lambda",type:"int256"}],internalType:"struct GyroECLPMath.Params",name:"eclpParams",type:"tuple"},{components:[{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauAlpha",type:"tuple"},{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauBeta",type:"tuple"},{internalType:"int256",name:"u",type:"int256"},{internalType:"int256",name:"v",type:"int256"},{internalType:"int256",name:"w",type:"int256"},{internalType:"int256",name:"z",type:"int256"},{internalType:"int256",name:"dSq",type:"int256"}],internalType:"struct GyroECLPMath.DerivedParams",name:"derivedEclpParams",type:"tuple"},{internalType:"address",name:"rateProvider0",type:"address"},{internalType:"address",name:"rateProvider1",type:"address"},{internalType:"address",name:"capManager",type:"address"},{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],internalType:"struct ICappedLiquidity.CapParams",name:"capParams",type:"tuple"},{internalType:"address",name:"pauseManager",type:"address"}],internalType:"struct GyroECLPPool.GyroParams",name:"params",type:"tuple"},{internalType:"address",name:"configAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"capManager",type:"address"}],name:"CapManagerUpdated",type:"event"},{anonymous:!1,inputs:[{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],indexed:!1,internalType:"struct ICappedLiquidity.CapParams",name:"params",type:"tuple"}],name:"CapParamsUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"derivedParamsValidated",type:"bool"}],name:"ECLPDerivedParamsValidated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paramsValidated",type:"bool"}],name:"ECLPParamsValidated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"invariantAfterJoin",type:"uint256"}],name:"InvariantAterInitializeJoin",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oldInvariant",type:"uint256"},{indexed:!1,internalType:"uint256",name:"newInvariant",type:"uint256"}],name:"InvariantOldAndNew",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"enabled",type:"bool"}],name:"OracleEnabledChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"oracleUpdatedIndex",type:"uint256"}],name:"OracleIndexUpdated",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"address",name:"oldPauseManager",type:"address"},{indexed:!1,internalType:"address",name:"newPauseManager",type:"address"}],name:"PauseManagerChanged",type:"event"},{anonymous:!1,inputs:[],name:"PausedLocally",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"bool",name:"paused",type:"bool"}],name:"PausedStateChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"SwapFeePercentageChanged",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint256[]",name:"balances",type:"uint256[]"},{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],indexed:!1,internalType:"struct GyroECLPMath.Vector2",name:"invariant",type:"tuple"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"SwapParams",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{anonymous:!1,inputs:[],name:"UnpausedLocally",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"_dSq",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsAlpha",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsBeta",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsC",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsLambda",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_paramsS",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauAlphaX",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauAlphaY",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauBetaX",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_tauBetaY",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_u",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_v",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_w",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[],name:"_z",outputs:[{internalType:"int256",name:"",type:"int256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"account",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"capManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"capParams",outputs:[{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],internalType:"struct ICappedLiquidity.CapParams",name:"",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_pauseManager",type:"address"}],name:"changePauseManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"decreaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"startIndex",type:"uint256"},{internalType:"uint256",name:"endIndex",type:"uint256"}],name:"dirtyUninitializedOracleSamples",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"enableOracle",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getECLPParams",outputs:[{components:[{internalType:"int256",name:"alpha",type:"int256"},{internalType:"int256",name:"beta",type:"int256"},{internalType:"int256",name:"c",type:"int256"},{internalType:"int256",name:"s",type:"int256"},{internalType:"int256",name:"lambda",type:"int256"}],internalType:"struct GyroECLPMath.Params",name:"params",type:"tuple"},{components:[{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauAlpha",type:"tuple"},{components:[{internalType:"int256",name:"x",type:"int256"},{internalType:"int256",name:"y",type:"int256"}],internalType:"struct GyroECLPMath.Vector2",name:"tauBeta",type:"tuple"},{internalType:"int256",name:"u",type:"int256"},{internalType:"int256",name:"v",type:"int256"},{internalType:"int256",name:"w",type:"int256"},{internalType:"int256",name:"z",type:"int256"},{internalType:"int256",name:"dSq",type:"int256"}],internalType:"struct GyroECLPMath.DerivedParams",name:"d",type:"tuple"}],stateMutability:"view",type:"function"},{inputs:[],name:"getInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getLargestSafeQueryWindow",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getLastInvariant",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"enum IPriceOracle.Variable",name:"variable",type:"uint8"}],name:"getLatest",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getMiscData",outputs:[{internalType:"int256",name:"logInvariant",type:"int256"},{internalType:"int256",name:"logTotalSupply",type:"int256"},{internalType:"uint256",name:"oracleSampleCreationTimestamp",type:"uint256"},{internalType:"uint256",name:"oracleIndex",type:"uint256"},{internalType:"bool",name:"oracleEnabled",type:"bool"},{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getNormalizedWeights",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IPriceOracle.Variable",name:"variable",type:"uint8"},{internalType:"uint256",name:"ago",type:"uint256"}],internalType:"struct IPriceOracle.OracleAccumulatorQuery[]",name:"queries",type:"tuple[]"}],name:"getPastAccumulators",outputs:[{internalType:"int256[]",name:"results",type:"int256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPausedState",outputs:[{internalType:"bool",name:"paused",type:"bool"},{internalType:"uint256",name:"pauseWindowEndTime",type:"uint256"},{internalType:"uint256",name:"bufferPeriodEndTime",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPoolId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPrice",outputs:[{internalType:"uint256",name:"spotPrice",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getRate",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"index",type:"uint256"}],name:"getSample",outputs:[{internalType:"int256",name:"logPairPrice",type:"int256"},{internalType:"int256",name:"accLogPairPrice",type:"int256"},{internalType:"int256",name:"logBptPrice",type:"int256"},{internalType:"int256",name:"accLogBptPrice",type:"int256"},{internalType:"int256",name:"logInvariant",type:"int256"},{internalType:"int256",name:"accLogInvariant",type:"int256"},{internalType:"uint256",name:"timestamp",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getSwapFeePercentage",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"enum IPriceOracle.Variable",name:"variable",type:"uint8"},{internalType:"uint256",name:"secs",type:"uint256"},{internalType:"uint256",name:"ago",type:"uint256"}],internalType:"struct IPriceOracle.OracleAverageQuery[]",name:"queries",type:"tuple[]"}],name:"getTimeWeightedAverage",outputs:[{internalType:"uint256[]",name:"results",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTokenRates",outputs:[{internalType:"uint256",name:"rate0",type:"uint256"},{internalType:"uint256",name:"rate1",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"getTotalSamples",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"gyroConfig",outputs:[{internalType:"contract IGyroConfig",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"addedValue",type:"uint256"}],name:"increaseAllowance",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onExitPool",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"},{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"onJoinPool",outputs:[{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"},{internalType:"uint256[]",name:"dueProtocolFeeAmounts",type:"uint256[]"}],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"enum IVault.SwapKind",name:"kind",type:"uint8"},{internalType:"contract IERC20",name:"tokenIn",type:"address"},{internalType:"contract IERC20",name:"tokenOut",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"userData",type:"bytes"}],internalType:"struct IPoolSwapStructs.SwapRequest",name:"request",type:"tuple"},{internalType:"uint256",name:"balanceTokenIn",type:"uint256"},{internalType:"uint256",name:"balanceTokenOut",type:"uint256"}],name:"onSwap",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pause",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"pauseManager",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryExit",outputs:[{internalType:"uint256",name:"bptIn",type:"uint256"},{internalType:"uint256[]",name:"amountsOut",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes32",name:"poolId",type:"bytes32"},{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256[]",name:"balances",type:"uint256[]"},{internalType:"uint256",name:"lastChangeBlock",type:"uint256"},{internalType:"uint256",name:"protocolSwapFeePercentage",type:"uint256"},{internalType:"bytes",name:"userData",type:"bytes"}],name:"queryJoin",outputs:[{internalType:"uint256",name:"bptOut",type:"uint256"},{internalType:"uint256[]",name:"amountsIn",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"rateProvider0",outputs:[{internalType:"contract IRateProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"rateProvider1",outputs:[{internalType:"contract IRateProvider",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_capManager",type:"address"}],name:"setCapManager",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{components:[{internalType:"bool",name:"capEnabled",type:"bool"},{internalType:"uint120",name:"perAddressCap",type:"uint120"},{internalType:"uint128",name:"globalCap",type:"uint128"}],internalType:"struct ICappedLiquidity.CapParams",name:"params",type:"tuple"}],name:"setCapParams",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bool",name:"paused",type:"bool"}],name:"setPaused",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"swapFeePercentage",type:"uint256"}],name:"setSwapFeePercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"unpause",outputs:[],stateMutability:"nonpayable",type:"function"}];class Lt{static createInterface(){return new c.Interface(Dt)}static connect(e,t){return new y(e,Dt,t)}}Lt.abi=Dt;const Ut=[{name:"Deposit",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"locktime",type:"uint256",indexed:!0},{name:"type",type:"int128",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Withdraw",inputs:[{name:"provider",type:"address",indexed:!0},{name:"value",type:"uint256",indexed:!1},{name:"ts",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{name:"Supply",inputs:[{name:"prevSupply",type:"uint256",indexed:!1},{name:"supply",type:"uint256",indexed:!1}],anonymous:!1,type:"event"},{stateMutability:"nonpayable",type:"constructor",inputs:[{name:"token_addr",type:"address"},{name:"_name",type:"string"},{name:"_symbol",type:"string"},{name:"_authorizer_adaptor",type:"address"}],outputs:[]},{stateMutability:"view",type:"function",name:"token",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"name",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"symbol",inputs:[],outputs:[{name:"",type:"string"}]},{stateMutability:"view",type:"function",name:"decimals",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"admin",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"nonpayable",type:"function",name:"commit_smart_wallet_checker",inputs:[{name:"addr",type:"address"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"apply_smart_wallet_checker",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"get_last_user_slope",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"user_point_history__ts",inputs:[{name:"_addr",type:"address"},{name:"_idx",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked__end",inputs:[{name:"_addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"nonpayable",type:"function",name:"checkpoint",inputs:[],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"deposit_for",inputs:[{name:"_addr",type:"address"},{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"create_lock",inputs:[{name:"_value",type:"uint256"},{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_amount",inputs:[{name:"_value",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"increase_unlock_time",inputs:[{name:"_unlock_time",type:"uint256"}],outputs:[]},{stateMutability:"nonpayable",type:"function",name:"withdraw",inputs:[],outputs:[]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOf",inputs:[{name:"addr",type:"address"},{name:"_t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"balanceOfAt",inputs:[{name:"addr",type:"address"},{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupply",inputs:[{name:"t",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"totalSupplyAt",inputs:[{name:"_block",type:"uint256"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"supply",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"locked",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"tuple",components:[{name:"amount",type:"int128"},{name:"end",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"epoch",inputs:[],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"point_history",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_history",inputs:[{name:"arg0",type:"address"},{name:"arg1",type:"uint256"}],outputs:[{name:"",type:"tuple",components:[{name:"bias",type:"int128"},{name:"slope",type:"int128"},{name:"ts",type:"uint256"},{name:"blk",type:"uint256"}]}]},{stateMutability:"view",type:"function",name:"user_point_epoch",inputs:[{name:"arg0",type:"address"}],outputs:[{name:"",type:"uint256"}]},{stateMutability:"view",type:"function",name:"slope_changes",inputs:[{name:"arg0",type:"uint256"}],outputs:[{name:"",type:"int128"}]},{stateMutability:"view",type:"function",name:"future_smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]},{stateMutability:"view",type:"function",name:"smart_wallet_checker",inputs:[],outputs:[{name:"",type:"address"}]}];class Vt{static createInterface(){return new c.Interface(Ut)}static connect(e,t){return new y(e,Ut,t)}}Vt.abi=Ut;const Gt=[{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"contract IERC20",name:"votingEscrow",type:"address"},{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"newImplementation",type:"address"}],name:"DelegationImplementationUpdated",type:"event"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjustedBalanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"}],name:"adjusted_balance_of",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes4",name:"selector",type:"bytes4"}],name:"getActionId",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getAuthorizer",outputs:[{internalType:"contract IAuthorizer",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getDelegationImplementation",outputs:[{internalType:"contract IVeDelegation",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVotingEscrow",outputs:[{internalType:"contract IERC20",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"killDelegation",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IVeDelegation",name:"delegation",type:"address"}],name:"setDelegation",outputs:[],stateMutability:"nonpayable",type:"function"}];class qt{static createInterface(){return new c.Interface(Gt)}static connect(e,t){return new y(e,Gt,t)}}qt.abi=Gt;var Wt=Object.freeze({__proto__:null,AaveLinearPool__factory:Oe,AaveLinearPoolFactory__factory:Ce,AaveWrapping__factory:Be,BalancerHelpers__factory:Ne,BalancerMinter__factory:Le,BalancerPoolDataQueries__factory:Ve,BalancerRelayer__factory:qe,BatchRelayerLibrary__factory:$e,ComposableStablePool__factory:Xe,ComposableStablePoolFactory__factory:je,ConvergentCurvePool__factory:Je,ERC20__factory:Ze,ERC4626LinearPool__factory:et,ERC4626LinearPoolFactory__factory:nt,EulerLinearPool__factory:ot,EulerLinearPoolFactory__factory:st,FXPool__factory:pt,GaugeClaimHelper__factory:dt,GearboxLinearPool__factory:ct,GearboxLinearPoolFactory__factory:mt,LidoRelayer__factory:ft,LinearPool__factory:ht,LiquidityGaugeV5__factory:gt,Multicall__factory:wt,StablePool__factory:xt,StaticATokenRateProvider__factory:vt,Vault__factory:At,WeightedPool__factory:Ot,WeightedPoolFactory__factory:Ct,YearnLinearPool__factory:Bt,YearnLinearPoolFactory__factory:Nt,GyroEV2__factory:Lt,VeBal__factory:Vt,VeDelegationProxy__factory:qt});class $t{static async getRate(e,t){const n=new u(e,vt.createInterface(),t);return(await n.getRate()).toString()}}const Ht=e=>e[0].map(((t,n)=>e.map((e=>e[n]))));class Xt{constructor(e){this.ETH=o,this.isETH=e=>Xt.isEqual(e,this.ETH),this.isWETH=e=>Xt.isEqual(e,this.WETH),this.translateToERC20=e=>this.isETH(e)?this.WETH:e,this.WETH=d(e)}sortTokens(e,...t){t.forEach((t=>de(e.length===t.length,"array length mismatch")));const n=e.map(this.translateToERC20),a=Ht([n,...t]).sort((([e],[t])=>((e,t)=>e.toLowerCase()>t.toLowerCase()?1:-1)(e,t))),[o,...i]=Ht(a);return[e.includes(this.ETH)?o.map((e=>this.isWETH(e)?this.ETH:e)):o,...i]}}Xt.isEqual=(e,t)=>d(e)===d(t);const Yt={"000":"ADD_OVERFLOW","001":"SUB_OVERFLOW","002":"SUB_UNDERFLOW","003":"MUL_OVERFLOW","004":"ZERO_DIVISION","005":"DIV_INTERNAL","006":"X_OUT_OF_BOUNDS","007":"Y_OUT_OF_BOUNDS","008":"PRODUCT_OUT_OF_BOUNDS","009":"INVALID_EXPONENT",100:"OUT_OF_BOUNDS",101:"UNSORTED_ARRAY",102:"UNSORTED_TOKENS",103:"INPUT_LENGTH_MISMATCH",104:"ZERO_TOKEN",200:"MIN_TOKENS",201:"MAX_TOKENS",202:"MAX_SWAP_FEE_PERCENTAGE",203:"MIN_SWAP_FEE_PERCENTAGE",204:"MINIMUM_BPT",205:"CALLER_NOT_VAULT",206:"UNINITIALIZED",207:"BPT_IN_MAX_AMOUNT",208:"BPT_OUT_MIN_AMOUNT",209:"EXPIRED_PERMIT",210:"NOT_TWO_TOKENS",211:"DISABLED",300:"MIN_AMP",301:"MAX_AMP",302:"MIN_WEIGHT",303:"MAX_STABLE_TOKENS",304:"MAX_IN_RATIO",305:"MAX_OUT_RATIO",306:"MIN_BPT_IN_FOR_TOKEN_OUT",307:"MAX_OUT_BPT_FOR_TOKEN_IN",308:"NORMALIZED_WEIGHT_INVARIANT",309:"INVALID_TOKEN",310:"UNHANDLED_JOIN_KIND",311:"ZERO_INVARIANT",312:"ORACLE_INVALID_SECONDS_QUERY",313:"ORACLE_NOT_INITIALIZED",314:"ORACLE_QUERY_TOO_OLD",315:"ORACLE_INVALID_INDEX",316:"ORACLE_BAD_SECS",317:"AMP_END_TIME_TOO_CLOSE",318:"AMP_ONGOING_UPDATE",319:"AMP_RATE_TOO_HIGH",320:"AMP_NO_ONGOING_UPDATE",321:"STABLE_INVARIANT_DIDNT_CONVERGE",322:"STABLE_GET_BALANCE_DIDNT_CONVERGE",323:"RELAYER_NOT_CONTRACT",324:"BASE_POOL_RELAYER_NOT_CALLED",325:"REBALANCING_RELAYER_REENTERED",326:"GRADUAL_UPDATE_TIME_TRAVEL",327:"SWAPS_DISABLED",328:"CALLER_IS_NOT_LBP_OWNER",329:"PRICE_RATE_OVERFLOW",330:"INVALID_JOIN_EXIT_KIND_WHILE_SWAPS_DISABLED",331:"WEIGHT_CHANGE_TOO_FAST",332:"LOWER_GREATER_THAN_UPPER_TARGET",333:"UPPER_TARGET_TOO_HIGH",334:"UNHANDLED_BY_LINEAR_POOL",335:"OUT_OF_TARGET_RANGE",336:"UNHANDLED_EXIT_KIND ",337:"UNAUTHORIZED_EXIT",338:"MAX_MANAGEMENT_SWAP_FEE_PERCENTAGE",339:"UNHANDLED_BY_MANAGED_POOL",340:"UNHANDLED_BY_PHANTOM_POOL",341:"TOKEN_DOES_NOT_HAVE_RATE_PROVIDER",342:"INVALID_INITIALIZATION",343:"OUT_OF_NEW_TARGET_RANGE",344:"UNAUTHORIZED_OPERATION",345:"UNINITIALIZED_POOL_CONTROLLER",400:"REENTRANCY",401:"SENDER_NOT_ALLOWED",402:"PAUSED",403:"PAUSE_WINDOW_EXPIRED",404:"MAX_PAUSE_WINDOW_DURATION",405:"MAX_BUFFER_PERIOD_DURATION",406:"INSUFFICIENT_BALANCE",407:"INSUFFICIENT_ALLOWANCE",408:"ERC20_TRANSFER_FROM_ZERO_ADDRESS",409:"ERC20_TRANSFER_TO_ZERO_ADDRESS",410:"ERC20_MINT_TO_ZERO_ADDRESS",411:"ERC20_BURN_FROM_ZERO_ADDRESS",412:"ERC20_APPROVE_FROM_ZERO_ADDRESS",413:"ERC20_APPROVE_TO_ZERO_ADDRESS",414:"ERC20_TRANSFER_EXCEEDS_ALLOWANCE",415:"ERC20_DECREASED_ALLOWANCE_BELOW_ZERO",416:"ERC20_TRANSFER_EXCEEDS_BALANCE",417:"ERC20_BURN_EXCEEDS_ALLOWANCE",418:"SAFE_ERC20_CALL_FAILED",419:"ADDRESS_INSUFFICIENT_BALANCE",420:"ADDRESS_CANNOT_SEND_VALUE",421:"SAFE_CAST_VALUE_CANT_FIT_INT256",422:"GRANT_SENDER_NOT_ADMIN",423:"REVOKE_SENDER_NOT_ADMIN",424:"RENOUNCE_SENDER_NOT_ALLOWED",425:"BUFFER_PERIOD_EXPIRED",426:"CALLER_IS_NOT_OWNER",427:"NEW_OWNER_IS_ZERO",428:"CODE_DEPLOYMENT_FAILED",429:"CALL_TO_NON_CONTRACT",430:"LOW_LEVEL_CALL_FAILED",431:"NOT_PAUSED",432:"ADDRESS_ALREADY_ALLOWLISTED",433:"ADDRESS_NOT_ALLOWLISTED",434:"ERC20_BURN_EXCEEDS_BALANCE",500:"INVALID_POOL_ID",501:"CALLER_NOT_POOL",502:"SENDER_NOT_ASSET_MANAGER",503:"USER_DOESNT_ALLOW_RELAYER",504:"INVALID_SIGNATURE",505:"EXIT_BELOW_MIN",506:"JOIN_ABOVE_MAX",507:"SWAP_LIMIT",508:"SWAP_DEADLINE",509:"CANNOT_SWAP_SAME_TOKEN",510:"UNKNOWN_AMOUNT_IN_FIRST_SWAP",511:"MALCONSTRUCTED_MULTIHOP_SWAP",512:"INTERNAL_BALANCE_OVERFLOW",513:"INSUFFICIENT_INTERNAL_BALANCE",514:"INVALID_ETH_INTERNAL_BALANCE",515:"INVALID_POST_LOAN_BALANCE",516:"INSUFFICIENT_ETH",517:"UNALLOCATED_ETH",518:"ETH_TRANSFER",519:"CANNOT_USE_ETH_SENTINEL",520:"TOKENS_MISMATCH",521:"TOKEN_NOT_REGISTERED",522:"TOKEN_ALREADY_REGISTERED",523:"TOKENS_ALREADY_SET",524:"TOKENS_LENGTH_MUST_BE_2",525:"NONZERO_TOKEN_BALANCE",526:"BALANCE_TOTAL_OVERFLOW",527:"POOL_NO_TOKENS",528:"INSUFFICIENT_FLASH_LOAN_BALANCE",600:"SWAP_FEE_PERCENTAGE_TOO_HIGH",601:"FLASH_LOAN_FEE_PERCENTAGE_TOO_HIGH",602:"INSUFFICIENT_FLASH_LOAN_FEE_AMOUNT"};class jt{constructor(){}}async function Kt(e){if("string"==typeof e)return e;if(T.isSigner(e))return e.getAddress();if(e.address)return e.address;throw new Error("Could not read account address")}var Jt;jt.isErrorCode=e=>{if(!e.includes("BAL#"))return!1;const t=e.replace("BAL#","");return Object.keys(Yt).includes(t)},jt.parseErrorCode=e=>{if(!e.includes("BAL#"))throw new Error("Error code not found");const t=e.replace("BAL#",""),n=Yt[t];if(!n)throw new Error("Error code not found");return n},jt.tryParseErrorCode=e=>{try{return jt.parseErrorCode(e)}catch{return e}},jt.isBalancerError=e=>Object.values(Yt).includes(e),jt.encodeError=e=>{const t=Object.entries(Yt).find((([,t])=>t===e));if(!t)throw Error("Error message not found");return`BAL#${t[0]}`},function(e){e.JoinPool="JoinPool",e.ExitPool="ExitPool",e.Swap="Swap",e.BatchSwap="BatchSwap",e.SetRelayerApproval="SetRelayerApproval"}(Jt||(Jt={}));class zt{constructor(){}}zt.encodeCalldataAuthorization=(e,t,n)=>{const a=m(b(t),32).slice(2),{v:o,r:i,s:s}=f(n);return`${e}${a}${m(b(o),32).slice(2)}${i.slice(2)}${s.slice(2)}`},zt.signJoinAuthorization=(e,t,n,a,o,i)=>zt.signAuthorizationFor(Jt.JoinPool,e,t,n,a,o,i),zt.signExitAuthorization=(e,t,n,a,o,i)=>zt.signAuthorizationFor(Jt.ExitPool,e,t,n,a,o,i),zt.signSwapAuthorization=(e,t,n,a,o,i)=>zt.signAuthorizationFor(Jt.Swap,e,t,n,a,o,i),zt.signBatchSwapAuthorization=(e,t,n,a,o,i)=>zt.signAuthorizationFor(Jt.BatchSwap,e,t,n,a,o,i),zt.signSetRelayerApprovalAuthorization=(e,t,n,a,o,i)=>zt.signAuthorizationFor(Jt.SetRelayerApproval,e,t,n,a,o,i),zt.signAuthorizationFor=async(e,t,n,a,o,s=i,r)=>{const{chainId:p}=await t.provider.getNetwork();if(!r){const e=await n.getAddress();r=await t.getNextNonce(e)}const l={name:"Balancer V2 Vault",version:"1",chainId:p,verifyingContract:t.address},d={[e]:[{name:"calldata",type:"bytes"},{name:"sender",type:"address"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u={calldata:o,sender:await Kt(a),nonce:r.toString(),deadline:s.toString()};return n._signTypedData(l,d,u)};class Zt{constructor(){}}Zt.signSetMinterApproval=async(e,t,n,a,o=i,s)=>{const{chainId:p}=await e.provider.getNetwork();if(!s){const t=await a.getAddress();s=await e.getNextNonce(t)}const l={name:"Balancer Minter",version:"1",chainId:p,verifyingContract:e.address},d={minter:await Kt(t),approval:n,nonce:s.toString(),deadline:o.toString()},u=await a._signTypedData(l,{SetMinterApproval:[{name:"minter",type:"address"},{name:"approval",type:"bool"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},d);return{...f(u),deadline:r.from(o)}};const Qt=async(e,t,n,a,o=i,s)=>{const{chainId:p}=await e.provider.getNetwork(),l=await t.getAddress();s||(s=await e.nonces(l));const d={name:await e.name(),version:"1",chainId:p,verifyingContract:e.address},u={owner:l,spender:await Kt(n),value:a,nonce:s,deadline:o},c=await t._signTypedData(d,{Permit:[{name:"owner",type:"address"},{name:"spender",type:"address"},{name:"value",type:"uint256"},{name:"nonce",type:"uint256"},{name:"deadline",type:"uint256"}]},u);return{...f(c),deadline:r.from(o),nonce:r.from(s)}},en=BigInt(0),tn=BigInt(1),nn=BigInt("1000000000000000000"),an=(e,t)=>{if(!e)throw new Error(t)};function on(e){const t=BigInt(18)-e;return nn*BigInt(10)**t}function sn(e,t){return dn.mulDownFixed(e,t)}function rn(e,t){const n=new Array(e.length);for(let a=0;a<e.length;++a)n[a]=dn.mulDownFixed(e[a],t[a]);return n}function pn(e,t){return dn.divDownFixed(e,t)}function ln(e,t){const n=new Array(e.length);for(let a=0;a<e.length;++a)n[a]=dn.divDownFixed(e[a],t[a]);return n}class dn{static add(e,t){const n=e+t;return an(t>=0&&n>=e||t<0&&n<e,"Errors.ADD_OVERFLOW"),n}static sub(e,t){an(t<=e,"Errors.SUB_OVERFLOW");return e-t}static max(e){if(0===e.length)throw new Error("Errors.EMPTY_ARRAY");return 1===e.length?e[0]:e.reduce(((e,t)=>t>e?t:e))}static min(e,t){return e<t?e:t}static mul(e,t){const n=e*t;return an(e==en||n/e==t,"Errors.MUL_OVERFLOW"),n}static div(e,t,n){return n?this.divUp(e,t):this.divDown(e,t)}static divDown(e,t){return an(t!=en,"Errors.ZERO_DIVISION"),e/t}static divUp(e,t){return an(t!=en,"Errors.ZERO_DIVISION"),e==en?en:tn+(e-tn)/t}static mulUpFixed(e,t){const n=e*t;return an(e==en||n/e==t,"Errors.MUL_OVERFLOW"),n==en?en:(n-tn)/nn+tn}static divDownFixed(e,t){if(an(t!=en,"Errors.ZERO_DIVISION"),e==en)return en;return e*nn/t}static divUpFixed(e,t){if(an(t!=en,"Errors.ZERO_DIVISION"),e==en)return en;{const n=e*nn;return an(n/e==nn,"Errors.DIV_INTERNAL"),(n-tn)/t+tn}}static powUpFixed(e,t){const n=un.pow(e,t),a=this.add(this.mulUpFixed(n,this.MAX_POW_RELATIVE_ERROR),tn);return this.add(n,a)}static complementFixed(e){return e<nn?nn-e:en}static mulDownFixed(e,t){const n=e*t;return an(e==en||n/e==t,"Errors.MUL_OVERFLOW"),n/nn}}dn.MAX_POW_RELATIVE_ERROR=BigInt(1e4);class un{static pow(e,t){if(t===en)return this.ONE_18;if(e==en)return en;an(e<BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819968"),"Errors.X_OUT_OF_BOUNDS");const n=e;an(t<this.MILD_EXPONENT_BOUND,"Errors.Y_OUT_OF_BOUNDS");const a=t;let o;if(this.LN_36_LOWER_BOUND<n&&n<this.LN_36_UPPER_BOUND){const e=this._ln_36(n);o=e/this.ONE_18*a+e%this.ONE_18*a/this.ONE_18}else o=this._ln(n)*a;return o/=this.ONE_18,an(this.MIN_NATURAL_EXPONENT<=o&&o<=this.MAX_NATURAL_EXPONENT,"Errors.PRODUCT_OUT_OF_BOUNDS"),this.exp(o)}static exp(e){if(an(e>=this.MIN_NATURAL_EXPONENT&&e<=this.MAX_NATURAL_EXPONENT,"Errors.INVALID_EXPONENT"),e<0)return this.ONE_18*this.ONE_18/this.exp(BigInt(-1)*e);let t;e>=this.x0?(e-=this.x0,t=this.a0):e>=this.x1?(e-=this.x1,t=this.a1):t=BigInt(1),e*=BigInt(100);let n=this.ONE_20;e>=this.x2&&(e-=this.x2,n=n*this.a2/this.ONE_20),e>=this.x3&&(e-=this.x3,n=n*this.a3/this.ONE_20),e>=this.x4&&(e-=this.x4,n=n*this.a4/this.ONE_20),e>=this.x5&&(e-=this.x5,n=n*this.a5/this.ONE_20),e>=this.x6&&(e-=this.x6,n=n*this.a6/this.ONE_20),e>=this.x7&&(e-=this.x7,n=n*this.a7/this.ONE_20),e>=this.x8&&(e-=this.x8,n=n*this.a8/this.ONE_20),e>=this.x9&&(e-=this.x9,n=n*this.a9/this.ONE_20);let a,o=this.ONE_20;return a=e,o+=a,a=a*e/this.ONE_20/BigInt(2),o+=a,a=a*e/this.ONE_20/BigInt(3),o+=a,a=a*e/this.ONE_20/BigInt(4),o+=a,a=a*e/this.ONE_20/BigInt(5),o+=a,a=a*e/this.ONE_20/BigInt(6),o+=a,a=a*e/this.ONE_20/BigInt(7),o+=a,a=a*e/this.ONE_20/BigInt(8),o+=a,a=a*e/this.ONE_20/BigInt(9),o+=a,a=a*e/this.ONE_20/BigInt(10),o+=a,a=a*e/this.ONE_20/BigInt(11),o+=a,a=a*e/this.ONE_20/BigInt(12),o+=a,n*o/this.ONE_20*t/BigInt(100)}static _ln_36(e){const t=((e*=this.ONE_18)-this.ONE_36)*this.ONE_36/(e+this.ONE_36),n=t*t/this.ONE_36;let a=t,o=a;return a=a*n/this.ONE_36,o+=a/BigInt(3),a=a*n/this.ONE_36,o+=a/BigInt(5),a=a*n/this.ONE_36,o+=a/BigInt(7),a=a*n/this.ONE_36,o+=a/BigInt(9),a=a*n/this.ONE_36,o+=a/BigInt(11),a=a*n/this.ONE_36,o+=a/BigInt(13),a=a*n/this.ONE_36,o+=a/BigInt(15),o*BigInt(2)}static _ln(e){if(e<this.ONE_18)return BigInt(-1)*this._ln(this.ONE_18*this.ONE_18/e);let t=en;e>=this.a0*this.ONE_18&&(e/=this.a0,t+=this.x0),e>=this.a1*this.ONE_18&&(e/=this.a1,t+=this.x1),t*=BigInt(100),(e*=BigInt(100))>=this.a2&&(e=e*this.ONE_20/this.a2,t+=this.x2),e>=this.a3&&(e=e*this.ONE_20/this.a3,t+=this.x3),e>=this.a4&&(e=e*this.ONE_20/this.a4,t+=this.x4),e>=this.a5&&(e=e*this.ONE_20/this.a5,t+=this.x5),e>=this.a6&&(e=e*this.ONE_20/this.a6,t+=this.x6),e>=this.a7&&(e=e*this.ONE_20/this.a7,t+=this.x7),e>=this.a8&&(e=e*this.ONE_20/this.a8,t+=this.x8),e>=this.a9&&(e=e*this.ONE_20/this.a9,t+=this.x9),e>=this.a10&&(e=e*this.ONE_20/this.a10,t+=this.x10),e>=this.a11&&(e=e*this.ONE_20/this.a11,t+=this.x11);const n=(e-this.ONE_20)*this.ONE_20/(e+this.ONE_20),a=n*n/this.ONE_20;let o=n,i=o;return o=o*a/this.ONE_20,i+=o/BigInt(3),o=o*a/this.ONE_20,i+=o/BigInt(5),o=o*a/this.ONE_20,i+=o/BigInt(7),o=o*a/this.ONE_20,i+=o/BigInt(9),o=o*a/this.ONE_20,i+=o/BigInt(11),i*=BigInt(2),(t+i)/BigInt(100)}}un.ONE_18=BigInt("1000000000000000000"),un.ONE_20=BigInt("100000000000000000000"),un.ONE_36=BigInt("1000000000000000000000000000000000000"),un.MAX_NATURAL_EXPONENT=BigInt("130000000000000000000"),un.MIN_NATURAL_EXPONENT=BigInt("-41000000000000000000"),un.LN_36_LOWER_BOUND=BigInt(un.ONE_18)-BigInt("100000000000000000"),un.LN_36_UPPER_BOUND=BigInt(un.ONE_18)+BigInt("100000000000000000"),un.MILD_EXPONENT_BOUND=BigInt(2)**BigInt(254)/un.ONE_20,un.x0=BigInt("128000000000000000000"),un.a0=BigInt("38877084059945950922200000000000000000000000000000000000"),un.x1=BigInt("64000000000000000000"),un.a1=BigInt("6235149080811616882910000000"),un.x2=BigInt("3200000000000000000000"),un.a2=BigInt("7896296018268069516100000000000000"),un.x3=BigInt("1600000000000000000000"),un.a3=BigInt("888611052050787263676000000"),un.x4=BigInt("800000000000000000000"),un.a4=BigInt("298095798704172827474000"),un.x5=BigInt("400000000000000000000"),un.a5=BigInt("5459815003314423907810"),un.x6=BigInt("200000000000000000000"),un.a6=BigInt("738905609893065022723"),un.x7=BigInt("100000000000000000000"),un.a7=BigInt("271828182845904523536"),un.x8=BigInt("50000000000000000000"),un.a8=BigInt("164872127070012814685"),un.x9=BigInt("25000000000000000000"),un.a9=BigInt("128402541668774148407"),un.x10=BigInt("12500000000000000000"),un.a10=BigInt("113314845306682631683"),un.x11=BigInt("6250000000000000000"),un.a11=BigInt("106449445891785942956");const cn=3,yn=(e,t,n)=>{var a;let i=n?e.tokens.map((e=>e.address===t?o:e.address)):e.tokens.map((e=>e.address)),s=e.tokens.map((e=>{var t;return null!==(t=e.decimals)&&void 0!==t?t:18})),r=e.tokens.map((e=>p(e.balance,e.decimals).toBigInt())),l=e.tokens.map((e=>{var t;return p(null!==(t=e.weight)&&void 0!==t?t:"1",18).toBigInt()})),d=e.tokens.map((e=>{var t;return p(null!==(t=e.priceRate)&&void 0!==t?t:"1",18).toBigInt()})),u=s.map((e=>on(BigInt(e)))),c=u.map(((e,t)=>dn.mulDownFixed(e,d[t]))),y=rn(r,c);if(t){const e=new Xt(t);[i,s,c,u,r,y,l,d]=e.sortTokens(i,s,c,u,r,y,l,d)}const m=p(null!==(a=e.amp)&&void 0!==a?a:"1",3).toBigInt(),b=y.indexOf(dn.max(y)),f=[...c],T=[...u],h=[...i],I=[...r],g=[...d],_=[...y],w=i.indexOf(e.address);return-1!==w&&(f.splice(w,1),T.splice(w,1),h.splice(w,1),I.splice(w,1),g.splice(w,1),_.splice(w,1)),{bptIndex:w,higherBalanceTokenIndex:b,ampWithPrecision:m,balancesEvm:r,balancesEvmWithoutBpt:I,priceRates:d,priceRatesWithoutBpt:g,swapFeeEvm:p(e.swapFee,18).toBigInt(),poolTokens:i,poolTokensWithoutBpt:h,weights:l,scalingFactors:c,scalingFactorsWithoutBpt:f,scalingFactorsRaw:u,scalingFactorsRawWithoutBpt:T,upScaledBalances:y,upScaledBalancesWithoutBpt:_,totalSharesEvm:p(e.totalShares||"0",18).toBigInt()}},mn={Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",WETH:"0x0000000000000000000000000000000000000000",BAL:"0x0000000000000000000000000000000000000000"}},bn={[be.GOERLI]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","USDT","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",WETH:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1",BAL:"0xfA8449189744799aD2AcE7e0EBAC8BB7575eff47",bbaUSD:"0x13ACD41C585d7EbB4a9460f7C8f50BE60DC080Cd"},PriceChainMap:{"0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2","0x37f03a12241e9fd3658ad6777d289c3fb8512bc9":"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599","0xfa8449189744799ad2ace7e0ebac8bb7575eff47":"0xba100000625a3754423978a60c9317c58a424e3d","0xe0c9275e44ea80ef17579d33c55136b7da269aeb":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0x8c9e6c40d3402480ace624730524facc5482798c":"0x6b175474e89094c44da98b954eedeac495271d0f","0x1f1f156e0317167c11aa412e3d1435ea29dc3cce":"0xdac17f958d2ee523a2206206994597c13d831ec7","0x4cb1892fddf14f772b2e39e299f44b2e5da90d04":"0x3ed3b47dd13ec9a98b44e6204a523e766b225811","0x811151066392fd641fe74a9b55a712670572d161":"0xbcca60bb61934080951369a648fb03df4f96263c","0x89534a24450081aa267c79b07411e9617d984052":"0x028171bca77440897b824ca71d1c56cac55b68a3","0x829f35cebbcd47d3c120793c12f7a232c903138b":"0x956f47f50a910163d8bf957cf5846d573e7f87ca","0xff386a3d08f80ac38c77930d173fa56c6286dc8b":"0x6810e776880c02933d47db1b9fc05908e5386b96"}},[be.MAINNET]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",WETH:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",BAL:"0xba100000625a3754423978a60c9317c58a424e3d",bbaUSD:"0x7B50775383d3D6f0215A8F290f2C9e2eEBBEceb2",bbaUSDv2:"0xA13a9247ea42D743238089903570127DdA72fE44"}},[be.POLYGON]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",WETH:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",BAL:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3"}},[be.ARBITRUM]:{Popular:{Symbols:["WBTC","DAI","USDC","BAL","AAVE","WETH"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",WETH:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",BAL:"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8"}},[be.GNOSIS]:{Popular:{Symbols:["xDAI","WXDAI","WETH","BAL"]},Addresses:{nativeAsset:"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE",wNativeAsset:"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d",WETH:"0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1",BAL:"0x7eF541E2a22058048904fE5744f9c7E4C57AF717"}}};function fn(e){return bn[e]?bn[e]:mn}let Tn=!1,hn=!1;const In={debug:1,default:2,info:2,warning:3,error:4,off:5};let gn=In.default,_n=null;const wn=function(){try{const e=[];if(["NFD","NFC","NFKD","NFKC"].forEach((t=>{try{if("test"!=="test".normalize(t))throw new Error("bad normalize")}catch(n){e.push(t)}})),e.length)throw new Error("missing "+e.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(e){return e.message}return null}();var Pn,xn;!function(e){e.DEBUG="DEBUG",e.INFO="INFO",e.WARNING="WARNING",e.ERROR="ERROR",e.OFF="OFF"}(Pn||(Pn={})),function(e){e.UNKNOWN_ERROR="UNKNOWN_ERROR",e.NOT_IMPLEMENTED="NOT_IMPLEMENTED",e.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",e.NETWORK_ERROR="NETWORK_ERROR",e.SERVER_ERROR="SERVER_ERROR",e.TIMEOUT="TIMEOUT",e.BUFFER_OVERRUN="BUFFER_OVERRUN",e.NUMERIC_FAULT="NUMERIC_FAULT",e.MISSING_NEW="MISSING_NEW",e.INVALID_ARGUMENT="INVALID_ARGUMENT",e.MISSING_ARGUMENT="MISSING_ARGUMENT",e.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",e.CALL_EXCEPTION="CALL_EXCEPTION",e.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",e.NONCE_EXPIRED="NONCE_EXPIRED",e.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",e.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",e.TRANSACTION_REPLACED="TRANSACTION_REPLACED",e.ACTION_REJECTED="ACTION_REJECTED"}(xn||(xn={}));const En="0123456789abcdef";class vn{constructor(e){Object.defineProperty(this,"version",{enumerable:!0,value:e,writable:!1})}_log(e,t){const n=e.toLowerCase();null==In[n]&&this.throwArgumentError("invalid log level name","logLevel",e),gn>In[n]||console.log.apply(console,t)}debug(...e){this._log(vn.levels.DEBUG,e)}info(...e){this._log(vn.levels.INFO,e)}warn(...e){this._log(vn.levels.WARNING,e)}makeError(e,t,n){if(hn)return this.makeError("censored error",t,{});t||(t=vn.errors.UNKNOWN_ERROR),n||(n={});const a=[];Object.keys(n).forEach((e=>{const t=n[e];try{if(t instanceof Uint8Array){let n="";for(let e=0;e<t.length;e++)n+=En[t[e]>>4],n+=En[15&t[e]];a.push(e+"=Uint8Array(0x"+n+")")}else a.push(e+"="+JSON.stringify(t))}catch(t){a.push(e+"="+JSON.stringify(n[e].toString()))}})),a.push(`code=${t}`),a.push(`version=${this.version}`);const o=e;let i="";switch(t){case xn.NUMERIC_FAULT:{i="NUMERIC_FAULT";const t=e;switch(t){case"overflow":case"underflow":case"division-by-zero":i+="-"+t;break;case"negative-power":case"negative-width":i+="-unsupported";break;case"unbound-bitwise-result":i+="-unbound-result"}break}case xn.CALL_EXCEPTION:case xn.INSUFFICIENT_FUNDS:case xn.MISSING_NEW:case xn.NONCE_EXPIRED:case xn.REPLACEMENT_UNDERPRICED:case xn.TRANSACTION_REPLACED:case xn.UNPREDICTABLE_GAS_LIMIT:i=t}i&&(e+=" [ See: https://links.ethers.org/v5-errors-"+i+" ]"),a.length&&(e+=" ("+a.join(", ")+")");const s=new Error(e);return s.reason=o,s.code=t,Object.keys(n).forEach((function(e){s[e]=n[e]})),s}throwError(e,t,n){throw this.makeError(e,t,n)}throwArgumentError(e,t,n){return this.throwError(e,vn.errors.INVALID_ARGUMENT,{argument:t,value:n})}assert(e,t,n,a){e||this.throwError(t,n,a)}assertArgument(e,t,n,a){e||this.throwArgumentError(t,n,a)}checkNormalize(e){wn&&this.throwError("platform missing String.prototype.normalize",vn.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:wn})}checkSafeUint53(e,t){"number"==typeof e&&(null==t&&(t="value not safe"),(e<0||e>=9007199254740991)&&this.throwError(t,vn.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:e}),e%1&&this.throwError(t,vn.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:e}))}checkArgumentCount(e,t,n){n=n?": "+n:"",e<t&&this.throwError("missing argument"+n,vn.errors.MISSING_ARGUMENT,{count:e,expectedCount:t}),e>t&&this.throwError("too many arguments"+n,vn.errors.UNEXPECTED_ARGUMENT,{count:e,expectedCount:t})}checkNew(e,t){e!==Object&&null!=e||this.throwError("missing new",vn.errors.MISSING_NEW,{name:t.name})}checkAbstract(e,t){e===t?this.throwError("cannot instantiate abstract class "+JSON.stringify(t.name)+" directly; use a sub-class",vn.errors.UNSUPPORTED_OPERATION,{name:e.name,operation:"new"}):e!==Object&&null!=e||this.throwError("missing new",vn.errors.MISSING_NEW,{name:t.name})}static globalLogger(){return _n||(_n=new vn("logger/5.7.0")),_n}static setCensorship(e,t){if(!e&&t&&this.globalLogger().throwError("cannot permanently disable censorship",vn.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),Tn){if(!e)return;this.globalLogger().throwError("error censorship permanent",vn.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}hn=!!e,Tn=!!t}static setLogLevel(e){const t=In[e.toLowerCase()];null!=t?gn=t:vn.globalLogger().warn("invalid log level - "+e)}static from(e){return new vn(e)}}vn.errors=xn,vn.levels=Pn;const Sn=new vn("units/5.7.0"),An=["wei","kwei","mwei","gwei","szabo","finney","ether"];function kn(e,t){if("string"==typeof t){const e=An.indexOf(t);-1!==e&&(t=3*e)}return l(e,null!=t?t:18)}function On(e,t){if("string"!=typeof e&&Sn.throwArgumentError("value must be a string","value",e),"string"==typeof t){const e=An.indexOf(t);-1!==e&&(t=3*e)}return p(e,null!=t?t:18)}const Mn={[be.MAINNET]:{waUSDT:"0xf8fd466f12e236f4c96f7cce6c79eadb819abf58",waUSDC:"0xd093fa4fb80d09bb30817fdcd442d4d02ed3e5de",waDAI:"0x02d60b84491589974263d922d9cc7a3152618ef6"},[be.POLYGON]:{wamDAI:"0xee029120c72b0607344f35b17cdd90025e647b00",wamUSDC:"0x221836a597948dce8f3568e044ff123108acc42a",wamUSDT:"0x19c60a251e525fa88cd6f3768416a8024e98fc19"}},Cn={[be.MAINNET]:{[Mn[be.MAINNET].waUSDT]:{aToken:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",underlying:"0xdac17f958d2ee523a2206206994597c13d831ec7"},[Mn[be.MAINNET].waUSDC]:{aToken:"0xbcca60bb61934080951369a648fb03df4f96263c",underlying:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"},[Mn[be.MAINNET].waDAI]:{aToken:"0x028171bca77440897b824ca71d1c56cac55b68a3",underlying:"0x6b175474e89094c44da98b954eedeac495271d0f"}},[be.POLYGON]:{[Mn[be.POLYGON].wamUSDT]:{aToken:"0x60d55f02a771d515e077c9c2403a1ef324885cec",underlying:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f"},[Mn[be.POLYGON].wamUSDC]:{aToken:"0x1a13f4ca1d028320a707d99520abfefca3998b7f",underlying:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174"},[Mn[be.POLYGON].wamDAI]:{aToken:"0x27f8d03b3a2196956ed754badc28d73be8830a6e",underlying:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063"}}},Rn=new t(["function rate() view returns (uint256)"]);class Bn{constructor(e,t){this.multicall=e,this.network=t}async fetch(e){const t=Object.values(Mn[e]),n=t.map((e=>({target:e,callData:Rn.encodeFunctionData("rate",[])}))),[,a]=await this.multicall.callStatic.aggregate(n);return t.reduce(((e,t,n)=>(e[t]||(e[t]="0x"==a[n]?0:parseFloat(kn(a[n],27))),e)),{})}async getRate(e){return this.network!=be.MAINNET&&this.network!=be.POLYGON?1:Object.values(Mn[this.network]).includes(e)?(this.rates||(this.rates=this.fetch(this.network)),(await this.rates)[e]):1}}function Fn(e){const t={};return e.forEach((e=>{e.price&&(t[e.address]=e.price)})),t}function Nn(e,t){let n=e.toLowerCase();return n=Dn(n,t),n=Ln(n,t),n}const Dn=(e,t)=>{const n=fn(t).PriceChainMap;return n&&n[e.toLowerCase()]||e},Ln=(e,t)=>{const n=e.toLocaleLowerCase(),a=t;return null!=Cn[a]&&null!=Cn[a]&&Object.keys(Cn[a]).includes(n)?Cn[a][n].aToken:n},Un=(e,t)=>{const n=t.filter(((t,n)=>e[n]===o));return n[0]?r.from(n[0]):r.from(0)};class Vn{constructor(e,t=200,n=100){this.fn=e,this.wait=t,this.limit=n,this.requestSets=[],this.promisedCalls=[],this.promisedCount=0,this.debounceCancel=()=>{}}fetch(e){var t,n;return(t=this.requestSets)[n=this.promisedCount]||(t[n]=new Set),e&&this.requestSets[this.promisedCount].add(e),this.requestSets[this.promisedCount].size>=this.limit?this.execute(0):this.promisedCalls[this.promisedCount]?this.promisedCalls[this.promisedCount].promise:this.execute(this.wait)}execute(e=0){this.promisedCalls[this.promisedCount]||(this.promisedCalls[this.promisedCount]=(()=>{let e=()=>{},t=()=>{};return{promise:new Promise(((n,a)=>{[e,t]=[n,a]})),reject:t,resolve:e}})());const{promise:t,resolve:n,reject:a}=this.promisedCalls[this.promisedCount];this.timeout&&clearTimeout(this.timeout);const o=()=>{const e=[...this.requestSets[this.promisedCount]];this.promisedCount++,this.fn(e).then((e=>{n(e),this.debounceCancel=()=>{}})).catch((e=>{e.response&&e.response.data&&e.response.data.error&&(e=e.response.data.error),a(e)}))};return e>0?this.timeout=setTimeout(o.bind(this),e):o(),this.debounceCancel=()=>{this.timeout&&clearTimeout(this.timeout),a("Cancelled"),delete this.promisedCalls[this.promisedCount]},t}}function Gn(e,t){const n=new RegExp(`[0-9]+\\.?[0-9]{0,${t}}`),a=e.match(n);let o=e;return a&&(o=a[0]),p(o,t)}function qn(e,t){return l(e,t).replace(/(.0$)/,"")}function Wn(e){return Gn(e,18).toBigInt()}function $n(e){return l(r.from(e),18)}const Hn=e=>p(`${e}`,18),Xn=r.from("10000"),Yn=(e,t)=>e.mul(t).div(Xn),jn=(e,t)=>{const n=Yn(e,t);return e.sub(n)},Kn=(e,t)=>{const n=Yn(e,t);return e.add(n)},Jn=(e,t)=>d(e)===d(t);function zn(e,t,n){return t<0||t>e.length?e:[...e.slice(0,t),n,...e.slice(t)]}function Zn(e,t,n){return t<0||t>=e.length?e:[...e.slice(0,t),n,...e.slice(t+1)]}function Qn(e,t){const n=[...e];return t<0||t>=e.length||n.splice(t,1),n}function ea(e,t,...n){if(e.length!==t.length||n.some((e=>e.length!==t.length)))throw new Error("Array length mismatch");const a=e.map((e=>t.indexOf(e)));if(a.indexOf(-1)>=0)throw new Error("Invalid reference or original array");const o=[];return a.forEach(((e,t)=>{n.forEach(((n,a)=>{o[a]||(o[a]=[]),o[a][t]=n[e]}))})),o}function ta(e){const t=Object.values(Se);return!(!e.includes("Linear")||!t.includes(e))}function na(e){return e.map((e=>`${e.slice(0,6)}...${e.slice(38,42)}`))}const aa=({receipt:e,to:t,contractInterface:n,logName:a})=>{const o=e.logs.filter((e=>Jn(e.address,t))).map((e=>{try{return n.parseLog(e)}catch(e){return Ae.getInstance().warn(e),null}})).find((e=>(null==e?void 0:e.name)===a));if(!o)throw new Error("Event not found in logs");return o},oa=()=>`0x${Array(8).fill(null).map((()=>Math.random().toString(16).slice(2,10))).join("")}`;class ia{format(e){return e}}class sa{constructor(){this.operatorMap={gt:"_gt",lt:"_lt",eq:"",in:"_in",not_in:"_not_in",contains:"_contains"}}format(e){const t={};return e.where&&Object.entries(e.where).forEach((([e,n])=>{Object.entries(n).forEach((([n,a])=>{t[`${e}${this.operatorMap[n]}`]=a}))})),{...e,where:t}}}class ra{constructor(e){this.args=e}merge(e){const t=h(this.args,e.args,((e,t)=>{if(Array.isArray(e))return e.concat(t)}));return new ra(t)}format(e){return e.format(this.args)}}var pa;function la(e,t,o,i,s,p){const l=new Array(s.length).fill(a);return s.forEach(((a,s)=>{if(e.some((e=>Jn(a,e)))){const e=r.from(p).add(n);l[s]=o===pa.SwapExactOut?l[s].add(r.from(i[s]).mul(e).div(n)):l[s].add(i[s])}if(t.some((e=>Jn(a,e)))){const e=n.sub(r.from(p));l[s]=o===pa.SwapExactIn?l[s].add(r.from(i[s]).mul(e).div(n)):l[s].add(i[s])}})),l}!function(e){e[e.SwapExactIn=0]="SwapExactIn",e[e.SwapExactOut=1]="SwapExactOut"}(pa||(pa={}));var da={1:{contracts:{aaveLinearPoolFactory:"0x0b576c1245f479506e7c8bbc4db4db07c1cd31f9",arbitrumRootGauge:"0x6337949cbc4825bbd09242c811770f6f6fee9ffc",arbitrumRootGaugeFactory:"0x1c99324edc771c82a0dccb780cc7dda0045e50e7",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x8f42adbba1b16eaae3bb5754915e0d06059add75",authorizerAdaptorEntrypoint:"0xf5decdb1f3d1ee384908fbe16d2f0348ae43a9ea",authorizerWithAdaptorValidation:"0x6048a8c631fb7e77eca533cf9c29784e482391e7",avalancheRootGauge:"0xc57b4be50bf6bbe5f6a4fe379da342b32b37bf2f",avalancheRootGaugeFactory:"0x10f3e79911a490aa5b5d5cda6f111029c4eab5ac",bal:"0xba100000625a3754423978a60c9317c58a424e3d",balancerHelpers:"0x5addcca35b7a0d07c74063c48700c8590e87864e",balancerMinter:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0xfea793aa415061c483d2390414275ad314b3f621",balancerTokenAdmin:"0xf302f9f50958c5593770fdf4d4812309ff77414f",balTokenHolderFactory:"0xb848f50141f3d4255b37ac288c25c109104f2158",batchRelayerLibrary:"0xf77018c0d817da22cadbdf504c00c0d32ce1e5c2",circuitBreakerLib:"0x4967b3353cdf9e5c67421a3890d35f2f3bb50527",composableStablePoolFactory:"0xfada0f4547ab2de89d1304a668c39b3e09aa7c76",distributionScheduler:"0xbd35248f8325dd1cb2bbf9d01e80a6bb99a792dd",doubleEntrypointFixRelayer:"0xca96c4f198d343e251b1a01f3eba061ef3da73c1",erc4626LinearPoolFactory:"0x813ee7a840ce909e7fea2117a44a90b8063bd4fd",eulerLinearPoolFactory:"0x5f43fba61f63fa6bff101a0a0458cea917f6b347",externalWeightedMath:"0x3db89f0ca3b388f2bcdbccd2ff8e13c22459cf75",feeDistributor:"0xd3cf852898b21fc233251427c2dc93d3d604f3bb",gaugeAdder:"0x5dbad78818d4c8958eff2d5b95b28385a22113cd",gaugeController:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",gaugeWorkingBalanceHelper:"0xdab2583911e872a00a851fb80dcc78a4b46ba57c",gearboxLinearPoolFactory:"0x39a79eb449fc05c92c39aa6f0e9bfac03be8de5b",gnosisRootGauge:"0x05277ce7d1e365d660624612d8b8b9b55bfd4518",gnosisRootGaugeFactory:"0x2a18b396829bc29f66a1e59fadd7a0269a6605e8",l2GaugeCheckpointer:"0x343688c5cb92115a52ca485af7f62b4b7a2e9ccc",liquidityGaugeFactory:"0xf1665e19bc105be4edd3739f88315cc699cc5b65",liquidityGaugeV5:"0xe5f96070ca00cd54795416b1a4b4c2403231c548",managedPoolAddRemoveTokenLib:"0x4148bf5b0688ed0a87f317c6534cb841f503349e",managedPoolAmmLib:"0xb37646acbb1a91287721b2cdbe01ba0dba5e57a2",managedPoolFactory:"0xbf904f9f340745b4f0c4702c7b6ab1e808ea6b93",merkleOrchard:"0xe3881627b8deebccf9c23b291430a549fc0be5f7",mockAaveLendingPool:"0x28fa1e40011adf98898e8243b2a48bb21ebf0c29",mockAaveLinearPool:"0x4ce277df0feb5b4d07a0ca2adcf5326e4005239d",mockComposableStablePool:"0x5537f945d8c3fcfdc1b8deceebd220fad26afda8",mockErc4626LinearPool:"0x9516a2d25958edb8da246a320f2c7d94a0dbe25d",mockErc4626Token:"0xb99edc4b289b0f2284fcf3f66884191bdce29624",mockEulerLinearPool:"0xdec02e6642e2c999af429f5ce944653cad15e093",mockEulerToken:"0xc101dca301a4011c1f925e9622e749e550a1b667",mockGearboxDieselToken:"0xb7a32b67aadb3866cc5c2fabc6c6ab8a9027c3c1",mockGearboxLinearPool:"0x0d05aac44ac7dd3c7ba5d50be93eb884a057d234",mockGearboxVault:"0xc7b779ab638b7a59f490ac95199502343a81e006",mockManagedPool:"0xd0cbf6765997b7ca7be6440f5e305b2ec7b96065",mockShareToken:"0x192e67544694a7baa2dea94f9b1df58bb3395a12",mockSilo:"0x66c94ae8d795e98f69ca65ffac87b38b17be3ca2",mockSiloLinearPool:"0x74cbfaf94a3577c539a9dcee9870a6349a33b34f",mockSiloRepository:"0x8e2dfc5e111dbe14e9d725210b9342688dd51c6c",mockStaticAToken:"0x1f3c910c416ed2340150281c5eb93325c38817a1",mockWeightedPool:"0x8055b8c947de30130bc1ec750c8f345a50006b23",mockYearnLinearPool:"0xac5b4ef7ede2f2843a704e96dcaa637f4ba3dc3f",mockYearnTokenVault:"0x806e02dea8d4a0882cad9fa3fa75b212328692de",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",omniVotingEscrowAdaptor:"0x96484f2abf5e58b15176dbf1a799627b53f13b6d",optimismRootGauge:"0xbc230b1a66a138cd9cfc7b352390025978dfadde",optimismRootGaugeFactory:"0x866d4b65694c66fbfd15dd6fa933d0a6b3940a36",polygonRootGauge:"0xfeb1a24c2752e53576133cdb718f25bc64ebdd52",polygonRootGaugeFactory:"0xa98bce70c92ad2ef3288dbcd659bc0d6b62f8f13",polygonZkEvmRootGauge:"0x45bf48d996d22afc9bc150df7fb4d13a49088602",polygonZkEvmRootGaugeFactory:"0x9bf951848288ccd87d06fac426150262cd3447de",poolRecoveryHelper:"0x1b300c86980a5195bcf49bd419a068d98dc133db",preseededVotingEscrowDelegation:"0xb496ff44746a8693a060fafd984da41b253f6790",protocolFeePercentagesProvider:"0x97207b095e4d5c9a6e4cfbfcd2c3358e03b90c4a",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x5ef4c5352882b10893b70dbcaa0c000965bd23c5",protocolIdRegistry:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",recoveryModeHelper:"0x7827108af2fd9910ea7cf361d9b827941fa7d809",siloLinearPoolFactory:"0x4e11aeec21baf1660b1a46472963cb3da7811c89",singleRecipientGauge:"0xb2007b8b7e0260042517f635cfd8e6dd2dd7f007",singleRecipientGaugeFactory:"0x4fb47126fa83a8734991e41b942ac29a3266c968",smartWalletChecker:"0x7869296efd0a76872fee62a058c8fbca5c1c826c",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x67f8df125b796b05895a6dc8ecf944b9556ecb0b",votingEscrow:"0xc128a9954e6c874ea3d62ce62b468ba073093f25",votingEscrowDelegation:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",votingEscrowDelegationProxy:"0x6f5a2ee11e7a772aeb5114a20d0d7c0ff61eb8a0",votingEscrowRemapper:"0x83e443ef4f9963c77bd860f94500075556668cb8",weightedPoolFactory:"0x897888115ada5773e02aa29f775430bfb5f34c51",weth:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",wstEthRateProvider:"0x72d07d7dca67b8a406ad1ec34ce969c90bfee768",yearnLinearPoolFactory:"0x5f5222ffa40f2aed6380d022184d6ea67c776ee0"},tokens:{AAVE:"0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",aFEI:"0x683923db55fead99a79fa01a27eec3cb19679cc3",aFRAX:"0xd4937682df3c8aef4fe912a96a74121c0829e664",ALCX:"0xdbdb4d16eda451d0503b854cf79d55697f90c8df",alUSD:"0xbc6da0fe9ad5f3b0d58160288917aa56653660e9",ANGLE:"0x31429d1856ad1377a8a0079410b297e1a9e214c2",AURA:"0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",AURABAL:"0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",aUSDC:"0xbcca60bb61934080951369a648fb03df4f96263c",aUSDT:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",aWBTC:"0x9ff58f4ffb29fa2266ab25e75e2a8b3503311656",BADGER:"0x3472a5a71965499acd81997a54bba8d852c6e53d",BAL:"0xba100000625a3754423978a60c9317c58a424e3d",BalWeth8020:"0x5c6ee304399dbdb9c8ef030ab642b10820db8f56",bb_a_usd:"0xa13a9247ea42d743238089903570127dda72fe44",cDAI:"0x5d3a536e4d6dbd6114cc1ead35777bab948e3643",cETH:"0x4ddc2d193948926d02f9b1fe9e1daa0718270ed5",COMP:"0xc00e94cb662c3520282e6f5717214004a7f26888",CRV:"0xd533a949740bb3306d119cc777fa900ba034cd52",cUSDC:"0x39aa39c021dfbae8fac545936693ac917d5e7563",CVX:"0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b",cvxCRV:"0x62b9c7356a2dc64a1969e19c23e4f579f9810aa7",DAI:"0x6b175474e89094c44da98b954eedeac495271d0f",DIGG:"0x798d1be841a82a273720ce31c822c61a67a601c3",DUSD:"0x5bc25f649fc4e26069ddf4cf4010f9f706c23831",ENS:"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",EURS:"0xdb25f211ab05b1c97d595516f45794528a807ad8",FARM:"0xa0246c9032bc3a600820415ae600c6388619a14d",FEI:"0x956f47f50a910163d8bf957cf5846d573e7f87ca",FRAX:"0x853d955acef822db058eb8505911ed77f175b99e",FTM:"0x4e15361fd6b4bb609fa63c81a2be19d873717870",FXS:"0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",GEAR:"0xba3335588d9403515223f109edc4eb7269a9ab5d",GTC:"0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",LINK:"0x514910771af9ca656af840dff83e8264ecf986ca",MIM:"0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3",renBTC:"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",RETH:"0xae78736cd615f374d3085123a210448e74fc6393",sBTC:"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",SPELL:"0x090185f2135308bad17527004364ebcc2d37e5f6",stkAAVE:"0x4da27a545c0c5b758a6ba100e3a049001de870f5",SUSHI:"0x6b3595068778dd592e39a122f4f5a5cf09c90fe2",USDC:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",USDT:"0xdac17f958d2ee523a2206206994597c13d831ec7",WBTC:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",WETH:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",xSUSHI:"0x8798249c2e607446efb7ad49ec89dd1865ff4272"}},4:{contracts:{authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",balancerHelpers:"0x5addcca35b7a0d07c74063c48700c8590e87864e",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x41b953164995c11c81da73d212ed8af25741b7ac",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8"},tokens:{}},5:{contracts:{authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x5d90225de345ee24d1d2b6f45de90b056f5265a1",authorizerAdaptorEntrypoint:"0xacaac3e6d6df918bf3c809dfc7d42de0e4a72d4c",authorizerWithAdaptorValidation:"0x8ea89804145c007e7d226001a96955ad53836087",bal:"0xfa8449189744799ad2ace7e0ebac8bb7575eff47",balancerHelpers:"0x5addcca35b7a0d07c74063c48700c8590e87864e",balancerMinter:"0xdf0399539a72e2689b8b2dd53c3c2a0883879fdd",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0x03f1ab8b19bce21eb06c364aec9e40322572a1e9",balancerTokenAdmin:"0x0f32d7d830e20809bcb9071581a696135dd472b7",balTokenHolderFactory:"0x45e617b07021b97407367624648d1a0a358a751a",batchRelayerLibrary:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",childChainGauge:"0x6b5da774890db7b7b96c6f44e6a4b0f657399e2e",childChainGaugeFactory:"0x7ba29fe8e83dd6097a7298075c4affdbda3121cc",childChainGaugeRewardHelper:"0xc128a9954e6c874ea3d62ce62b468ba073093f25",childChainGaugeTokenAdder:"0x55b18f514d7f0c6c886d0c23ac72df5d3b5f8850",childChainLiquidityGaugeFactory:"0x393b918cc2ffa238732e83dd4ee52343f57d767b",childChainStreamer:"0x5b5b72d76b68f4bb1d2a10ef0fc77711f8ec7ed0",circuitBreakerLib:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",composableStablePoolFactory:"0x1802953277fd955f9a254b80aa0582f193cf1d77",distributionScheduler:"0x05a0bf0540f346b6dac25550738343beb51c0f65",doubleEntrypointFixRelayer:"0xbe9458ab5b6f289e524410141c8d5e20a6b035fe",eulerLinearPoolFactory:"0x813ee7a840ce909e7fea2117a44a90b8063bd4fd",externalWeightedMath:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",feeDistributor:"0x42b67611b208e2e9b4cc975f6d74c87b865ae066",gaugeAdder:"0x3f170631ed9821ca51a59d996ab095162438dc10",gaugeController:"0xbb1ce49b16d55a1f2c6e88102f32144c7334b116",gaugeWorkingBalanceHelper:"0xa7d524046ef89de9f8e4f2d7b029f66ccb738d48",l2BalancerPseudoMinter:"0x81cfae226343b24ba12ec6521db2c79e7aeeb310",l2LayerZeroBridgeForwarder:"0xef44d6786b2b4d544b7850fe67ce6381626bf2d6",liquidityGaugeFactory:"0x3b8ca519122cdd8efb272b0d3085453404b25bd0",liquidityGaugeV5:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",managedPoolAddRemoveTokenLib:"0xacf05be5134d64d150d153818f8c67ee36996650",managedPoolAmmLib:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",managedPoolFactory:"0x03f3fb107e74f2eac9358862e91ad3c692712054",merkleOrchard:"0x5cf4928a3205728bd12830e1840f7db85c62a4b9",mockComposableStablePool:"0x5d343d374a769d1ab102e0418a516dadb08a86e4",mockEulerLinearPool:"0x43fa2c00419f60e18966aa043debd4701cb91b6d",mockEulerToken:"0xb99edc4b289b0f2284fcf3f66884191bdce29624",mockManagedPool:"0xff79b51ec2934dd1810a8e0325e3b08708720b26",mockShareToken:"0xb8bdcbf8ccf443d055d5ffe1d8154fac8187fc94",mockSilo:"0xa7a7e22398622bf71ff31dae5355ec7843b13806",mockSiloLinearPool:"0xbbb66a4fff47701ec6c528db615f5e7bf1abdaaf",mockSiloRepository:"0x7153de1a6d71360f07017838c28deca0d6c03e2a",mockWeightedPool:"0x072ed560cc042d7ab1c080a9e4fa8c6f4858deb3",noProtocolFeeLiquidityBootstrappingPoolFactory:"0xb0c726778c3ae4b3454d85557a48e8fa502bdd6a",nullVotingEscrow:"0xa523f47a933d5020b23629ddf689695aa94612dc",omniVotingEscrowAdaptor:"0x83e443ef4f9963c77bd860f94500075556668cb8",poolRecoveryHelper:"0x1cbbe6cea5e4fe7d69c586b4e362a646deef105d",preseededVotingEscrowDelegation:"0x7af980bdbc36d21ce228efabcca35707566a2be5",protocolFeePercentagesProvider:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x85153b639a35d6e6cf8b291aca237fbe67377154",protocolIdRegistry:"0x4fb47126fa83a8734991e41b942ac29a3266c968",recoveryModeHelper:"0x300ab2038eac391f26d9f895dc61f8f66a548833",rewardsOnlyGauge:"0x40bd3faef4268ea40f4c372d7f0a44c3efaaa6b1",siloLinearPoolFactory:"0x30fd8a0f7009f50616afdab4af91a0a2ef4eae49",singleRecipientGauge:"0x0e9addc34f93bccb45d1f744b9f9301285c5b48f",singleRecipientGaugeFactory:"0xe3881627b8deebccf9c23b291430a549fc0be5f7",smartWalletChecker:"0x1b6df1ff5db99f8a8a04d38f7478bab056fa35a7",testBalancerToken:"0xfa8449189744799ad2ace7e0ebac8bb7575eff47",timelockAuthorizer:"0x70e26f740bad6a2cdd762e2478496268882c21d4",timelockAuthorizerMigrator:"0x7159c4b96bfcfca232355b55778e85cf9e245192",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0xd13afc362f619b840c8f4aac1d957ce219ef37ca",votingEscrow:"0x33a99dcc4c85c014cf12626959111d5898bbcabf",votingEscrowDelegation:"0xcff73979321788d59a6170ff012730db2087f31c",votingEscrowDelegationProxy:"0x6817149cb753bf529565b4d023d7507ed2ff4bc0",votingEscrowRemapper:"0x5dbad78818d4c8958eff2d5b95b28385a22113cd",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",weth:"0xdfcea9088c8a88a76ff74892c1457c17dfeef9c1",wstEthRateProvider:"0x80a94f458491ca88f09767e58a92fd23cbf1196f"},tokens:{}},10:{contracts:{aaveLinearPoolFactory:"0x7396f99b48e7436b152427bfa3dd6aa8c7c6d05b",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x8f42adbba1b16eaae3bb5754915e0d06059add75",authorizerAdaptorEntrypoint:"0xed86ff0c507d3af5f35d3523b77c17415fcffacb",authorizerWithAdaptorValidation:"0xacf05be5134d64d150d153818f8c67ee36996650",bal:"0xfe8b128ba8c78aabc59d4c64cee7ff28e9379921",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0x03f1ab8b19bce21eb06c364aec9e40322572a1e9",batchRelayerLibrary:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",childChainGauge:"0x81cfae226343b24ba12ec6521db2c79e7aeeb310",childChainGaugeFactory:"0xa523f47a933d5020b23629ddf689695aa94612dc",childChainGaugeRewardHelper:"0x8ab784368a1883da90d8513b48801e2db1cb2d5d",childChainGaugeTokenAdder:"0x6f5a2ee11e7a772aeb5114a20d0d7c0ff61eb8a0",childChainLiquidityGaugeFactory:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",childChainStreamer:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",circuitBreakerLib:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",composableStablePoolFactory:"0x1802953277fd955f9a254b80aa0582f193cf1d77",doubleEntrypointFixRelayer:"0x3b8ca519122cdd8efb272b0d3085453404b25bd0",erc4626LinearPoolFactory:"0x7adbdabaa80f654568421887c12f09e0c7bd9629",externalWeightedMath:"0x8df317a729fcaa260306d7de28888932cb579b88",gaugeWorkingBalanceHelper:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",l2BalancerPseudoMinter:"0x4fb47126fa83a8734991e41b942ac29a3266c968",l2LayerZeroBridgeForwarder:"0xbef13d1e54d0c79da8b0ad704883e1cea7eb2100",managedPoolAddRemoveTokenLib:"0x59562f93c447656f6e4799fc1fc7c3d977c3324f",managedPoolAmmLib:"0xded7fef7d8ecdcb74f22f0169e1a9ec696e6695d",managedPoolFactory:"0x4c32a8a8fda4e24139b51b456b42290f51d6a1c4",mockAaveLendingPool:"0x533a16f90e7d3ca31dbc608e5ec54967710f0d2a",mockAaveLinearPool:"0x45d37982784f022a9864748b4e8750e1e7019604",mockComposableStablePool:"0x11a4cf51bb0bb4d925cadfda61fcda952d64889c",mockErc4626LinearPool:"0x2da61ef3cdcb97efb0f7099c02527fabfe94dee5",mockErc4626Token:"0x4be0e4d6184348c5ba845a4010528cfc779610b8",mockManagedPool:"0xb4af4fdd49da2a2ba9522eadcf86d407a69f19c8",mockStaticAToken:"0x8b7854708c0c54f9d7d1ff351d4f84e6de0e134c",mockWeightedPool:"0x62f5f9a446d198e8e4c84ee56e5217416720edaf",mockYearnLinearPool:"0x34557ef500bfc060b8e3f2da58ef725bb7d32202",mockYearnTokenVault:"0xb15608d28eb43378a7e7780add3fe9bc132baf40",noProtocolFeeLiquidityBootstrappingPoolFactory:"0xf302f9f50958c5593770fdf4d4812309ff77414f",nullVotingEscrow:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",poolRecoveryHelper:"0x26743984e3357efc59f2fd6c1afdc310335a61c9",protocolFeePercentagesProvider:"0xacaac3e6d6df918bf3c809dfc7d42de0e4a72d4c",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0xc128a9954e6c874ea3d62ce62b468ba073093f25",protocolIdRegistry:"0x9805dcfd25e6de36bad8fe9d3fe2c9b44b764102",recoveryModeHelper:"0x3b1eb8eb7b43882b385ab30533d9a2bef9052a98",rewardsOnlyGauge:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x6817149cb753bf529565b4d023d7507ed2ff4bc0",votingEscrowDelegationProxy:"0x9da18982a33fd0c7051b19f0d7c76f2d5e7e017c",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",weth:"0x4200000000000000000000000000000000000006",yearnLinearPoolFactory:"0x19dfef0a828eec0c85fbb335aa65437417390b85"},tokens:{}},42:{contracts:{authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x97207b095e4d5c9a6e4cfbfcd2c3358e03b90c4a",balancerHelpers:"0x94905e703fead7f0fd0eee355d267ee909784e6d",balancerMinter:"0x1bbfa323155526f54eec458571bb5a75e0c41507",balancerTokenAdmin:"0xab093cd16e765b5b23d34030aafaf026558e0a19",balTokenHolderFactory:"0xa98bce70c92ad2ef3288dbcd659bc0d6b62f8f13",childChainLiquidityGaugeFactory:"0xf9ac7b9df2b3454e841110cce5550bd5ac6f875f",childChainStreamer:"0x4de578134995bea8480d7696946217f356339ab8",gaugeController:"0x35c425234dc42e7402f54cc54573f77842963a56",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x1b57f637ce3408f1f834b0b70f9a595b062daea7",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",rewardsOnlyGauge:"0x868543bb787317632f94fcfe8eb85406b123590c",testBalancerToken:"0xa2d801064652a269d92ee2a59f3261155ec66830",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",votingEscrow:"0x16ba924752ef283c7946db8a122a6742aa35c1dc",votingEscrowDelegation:"0xdc6d62ae091ea77331542042a72e5e38b188837c",votingEscrowDelegationProxy:"0x98d0d0a65cbeccaa647a5a95cf27cf2f00e1231c",wstEthRateProvider:"0xd7fad3bd59d6477cbe1be7f646f7f1ba25b230f8"},tokens:{}},100:{contracts:{aaveLinearPoolFactory:"0x62aab12865d7281048c337d53a4dde9d770321e6",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x5addcca35b7a0d07c74063c48700c8590e87864e",authorizerAdaptorEntrypoint:"0x8f42adbba1b16eaae3bb5754915e0d06059add75",authorizerWithAdaptorValidation:"0x03f3fb107e74f2eac9358862e91ad3c692712054",bal:"0x7ef541e2a22058048904fe5744f9c7e4c57af717",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerQueries:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",balancerRelayer:"0x3536fd480ca495ac91e698a703248a8915c137a3",batchRelayerLibrary:"0xb9ad3466cdd42015cc05d4804dc68d562b6a2065",childChainGauge:"0x96484f2abf5e58b15176dbf1a799627b53f13b6d",childChainGaugeFactory:"0x83e443ef4f9963c77bd860f94500075556668cb8",childChainGaugeRewardHelper:"0xf7d5dce55e6d47852f054697bab6a1b48a00ddbd",childChainGaugeTokenAdder:"0x1802953277fd955f9a254b80aa0582f193cf1d77",childChainLiquidityGaugeFactory:"0x809b79b53f18e9bc08a961ed4678b901ac93213a",childChainStreamer:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",circuitBreakerLib:"0x54f8f9d28e26fa5864cfa80f50a5df95fd85f46a",composableStablePoolFactory:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",externalWeightedMath:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",gaugeWorkingBalanceHelper:"0x682f0ddbfd41d1272982f64a499fb62d80e27589",l2BalancerPseudoMinter:"0xa8920455934da4d853faac1f94fe7bef72943ef1",l2LayerZeroBridgeForwarder:"0xeb151668006cd04dadd098afd0a82e78f77076c3",managedPoolAddRemoveTokenLib:"0x4c32a8a8fda4e24139b51b456b42290f51d6a1c4",managedPoolAmmLib:"0xacf05be5134d64d150d153818f8c67ee36996650",managedPoolFactory:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",mockAaveLendingPool:"0x040dba12bb3d5c0a73ddfe84c220be3ddba06966",mockAaveLinearPool:"0x1ac55c31dac78ca943cb8ebfca5945ce09e036e2",mockComposableStablePool:"0xf3678a0b54c61ccd88ce321c2e07f87ac75f08b9",mockManagedPool:"0xc061361fda32ff5b65f7d98acc9a87349d3f0768",mockStaticAToken:"0x35d8f4a4c0e95f3d925cb4cbbbf513a0172ed8a4",mockWeightedPool:"0xd8752f9b0a2c2813796abd2be212a32ffd656ef1",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x85a80afee867adf27b50bdb7b76da70f1e853062",nullVotingEscrow:"0x013d4382f291be5688afbcc741ee8a24c66b2c92",poolRecoveryHelper:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",protocolFeePercentagesProvider:"0x41b953164995c11c81da73d212ed8af25741b7ac",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0xdae7e32adc5d490a43ccba1f0c736033f2b4efca",protocolIdRegistry:"0x6b5da774890db7b7b96c6f44e6a4b0f657399e2e",recoveryModeHelper:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",rewardsOnlyGauge:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x5dbad78818d4c8958eff2d5b95b28385a22113cd",votingEscrowDelegationProxy:"0x7a2535f5fb47b8e44c02ef5d9990588313fe8f05",weightedPoolFactory:"0x6cad2ea22bfa7f4c14aae92e47f510cd5c509bc7",weth:"0xe91d153e0b41518a2ce8dd3d7944fa863463a97d"},tokens:{}},137:{contracts:{aaveLinearPoolFactory:"0xab2372275809e15198a7968c7f324053867cdb0c",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",authorizerAdaptorEntrypoint:"0xab093cd16e765b5b23d34030aafaf026558e0a19",authorizerWithAdaptorValidation:"0x020301b0a99efb6816b41007765fb577259ec418",bal:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",balancerHelpers:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0xd18d5d377eb23362e54fa496597d7e962d56c554",batchRelayerLibrary:"0x4271de2595c3d85d2d455c5778adf2d7ad54322c",childChainGauge:"0xc9b36096f5201ea332db35d6d195774ea0d5988f",childChainGaugeFactory:"0x22625eedd92c81a219a83e1dc48f88d54786b017",childChainGaugeRewardHelper:"0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33",childChainGaugeTokenAdder:"0x1554ee754707d5c93b7934af404747aba521aaf2",childChainLiquidityGaugeFactory:"0x3b8ca519122cdd8efb272b0d3085453404b25bd0",childChainStreamer:"0x6f5a2ee11e7a772aeb5114a20d0d7c0ff61eb8a0",circuitBreakerLib:"0xedfd0a7005a7c72c44ff13bea370c86a9d11bee1",composableStablePoolFactory:"0x6ab5549bbd766a43afb687776ad8466f8b42f777",doubleEntrypointFixRelayer:"0x79d0011892fe558fc5a4ec7d4ca5db59069f460f",erc4626LinearPoolFactory:"0x5c5fcf8fbd4cd563ced27e7d066b88ee20e1867a",externalWeightedMath:"0x72ebafddc4c7d3eb702c81295d90a8b29f008a03",gaugeWorkingBalanceHelper:"0x08fd003d8f1892d4ec684e6c3ee0128081be461b",l2BalancerPseudoMinter:"0x47b489bf5836f83abd928c316f8e39bc0587b020",l2LayerZeroBridgeForwarder:"0xb98f54a74590a6e681ff664b2fa22ebffe1a929e",managedPoolAddRemoveTokenLib:"0xf553bf40db86c35f3058434039d51aad29c6180b",managedPoolAmmLib:"0xcefd59eedafa9ee8ccda1aaf944088e68b5bd890",managedPoolFactory:"0xb8dfa4fd0f083de2b7edc0d5eed5e684e54ba45d",merkleOrchard:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",mockAaveLendingPool:"0x0df6bb26533eb86f371b1f70eecdd955420523c6",mockAaveLinearPool:"0x0889b240a5876aae745ac19f1771853671dc5d36",mockComposableStablePool:"0x0f25823cf786b78696b16536e2f2b9835289ab51",mockErc4626LinearPool:"0xc55ec796a4debe625d95436a3531f4950b11bdcf",mockErc4626Token:"0x19dfef0a828eec0c85fbb335aa65437417390b85",mockManagedPool:"0x074efd7806e6c28e8b6611075b1aa62c6c408090",mockStaticAToken:"0xe72b2780d3c57f781bd4e8572e200cd7e9a447c2",mockWeightedPool:"0xb77e03655ee894aade216a83d05511a9f9895126",mockYearnLinearPool:"0xdae301690004946424e41051ace1791083be42a1",mockYearnTokenVault:"0x28fa1e40011adf98898e8243b2a48bb21ebf0c29",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x41b953164995c11c81da73d212ed8af25741b7ac",nullVotingEscrow:"0x1311fbc9f60359639174c1e7cc2032dbdb5cc4d1",poolRecoveryHelper:"0x495f696430f4a51f7fcb98fbe68a9cb7a07fb1ba",protocolFeePercentagesProvider:"0x42ac0e6fa47385d55aff070d79ef0079868c48a6",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0xef44d6786b2b4d544b7850fe67ce6381626bf2d6",protocolIdRegistry:"0xa523f47a933d5020b23629ddf689695aa94612dc",recoveryModeHelper:"0x1eb79551ca0e83ec145608bc39a0c7f10ca21aa5",rewardsOnlyGauge:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0xd961e30156c2e0d0d925a0de45f931cb7815e970",votingEscrowDelegationProxy:"0x0f08eef2c785aa5e7539684af04755dec1347b7c",weightedPoolFactory:"0xfc8a407bba312ac761d8bfe04ce1201904842b76",weth:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",yearnLinearPoolFactory:"0x0b576c1245f479506e7c8bbc4db4db07c1cd31f9"},tokens:{BAL:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",USDC:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",WBTC:"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",WETH:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",WMATIC:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270"}},1101:{contracts:{aaveLinearPoolFactory:"0x4b7b369989e613ff2c65768b7cf930cc927f901e",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0xdcdbf71a870cc60c6f9b621e28a7d3ffd6dd4965",authorizerAdaptorEntrypoint:"0xb9ad3466cdd42015cc05d4804dc68d562b6a2065",authorizerWithAdaptorValidation:"0x8df317a729fcaa260306d7de28888932cb579b88",bal:"0x120ef59b80774f02211563834d8e3b72cb1649d6",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerQueries:"0x809b79b53f18e9bc08a961ed4678b901ac93213a",balancerRelayer:"0x4678731dc41142a902a114ac5b2f77b63f4a259d",batchRelayerLibrary:"0x54f8f9d28e26fa5864cfa80f50a5df95fd85f46a",childChainGauge:"0x59562f93c447656f6e4799fc1fc7c3d977c3324f",childChainGaugeFactory:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",circuitBreakerLib:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",composableStablePoolFactory:"0x8ea89804145c007e7d226001a96955ad53836087",erc4626LinearPoolFactory:"0x6b1da720be2d11d95177ccfc40a917c2688f396c",externalWeightedMath:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",gaugeWorkingBalanceHelper:"0xef454a7b3f965d3f6723e462405246f8cd865425",gearboxLinearPoolFactory:"0x687b8c9b41e01be8b591725fac5d5f52d0564d79",l2BalancerPseudoMinter:"0x475d18169be8a89357a9ee3ab00ca386d20fa229",l2LayerZeroBridgeForwarder:"0xded7fef7d8ecdcb74f22f0169e1a9ec696e6695d",managedPoolAddRemoveTokenLib:"0xacf05be5134d64d150d153818f8c67ee36996650",managedPoolAmmLib:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",managedPoolFactory:"0xaf779e58dafb4307b998c7b3c9d3f788dfc80632",mockAaveLendingPool:"0x161f4014c27773840ccb4ec1957113e6dd028846",mockAaveLinearPool:"0xbfd65c6160cfd638a85c645e6e6d8acac5dac935",mockComposableStablePool:"0x6f5f794a3cef904b8517c4c311de2fa837ff24a0",mockErc4626LinearPool:"0xac4b72c01072a52b73ca71105504f1372efcce0d",mockErc4626Token:"0x0c6052254551eae3ecac77b01dfcf1025418828f",mockGearboxDieselToken:"0x698caed853be9cea96c268f565e2b61d3b2bcda4",mockGearboxLinearPool:"0x32f03464fdf909fdf3798f87ff3712b10c59bd86",mockGearboxVault:"0x88ed12a90142fdbfe2a28f7d5b48927254c7e760",mockLiquidityBootstrappingPool:"0x3c87ff3e9307dbebfae720e04c6439e49f79bf9b",mockManagedPool:"0x522ee506a2f63d0ae1d79d6f5dbd9d0bca32c866",mockStaticAToken:"0x4638ab64022927c9bd5947607459d13f57f1551c",mockWeightedPool:"0x78385153d2f356c87001f09bb5424137c618d38b",mockYearnLinearPool:"0x02c9dcb975262719a61f9b40bdf0987ead9add3a",mockYearnTokenVault:"0xdbf7b9f1d2bfba14e42709f84dda3187ee410e38",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x3b1eb8eb7b43882b385ab30533d9a2bef9052a98",nullVotingEscrow:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",poolRecoveryHelper:"0xf7d5dce55e6d47852f054697bab6a1b48a00ddbd",protocolFeePercentagesProvider:"0x1802953277fd955f9a254b80aa0582f193cf1d77",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",protocolIdRegistry:"0x6cad2ea22bfa7f4c14aae92e47f510cd5c509bc7",recoveryModeHelper:"0x300ab2038eac391f26d9f895dc61f8f66a548833",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",votingEscrowDelegationProxy:"0xc7e5ed1054a24ef31d827e6f86caa58b3bc168d7",weightedPoolFactory:"0x03f3fb107e74f2eac9358862e91ad3c692712054",weth:"0x4f9a0e7fd2bf6067db6994cf12e4495df938e6e9",yearnLinearPoolFactory:"0x44d33798dddcdabc93fe6a40c80588033dc502d3"},tokens:{}},42161:{contracts:{aaveLinearPoolFactory:"0x7396f99b48e7436b152427bfa3dd6aa8c7c6d05b",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",authorizerAdaptorEntrypoint:"0x97207b095e4d5c9a6e4cfbfcd2c3358e03b90c4a",authorizerWithAdaptorValidation:"0x6b1da720be2d11d95177ccfc40a917c2688f396c",bal:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",balancerHelpers:"0x77d46184d22ca6a3726a2f500c776767b6a3d6ab",balancerQueries:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",balancerRelayer:"0x598ce0f1ab64b27256759ef99d883ee51138b9bd",batchRelayerLibrary:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",childChainGauge:"0xa523f47a933d5020b23629ddf689695aa94612dc",childChainGaugeFactory:"0x6817149cb753bf529565b4d023d7507ed2ff4bc0",childChainGaugeRewardHelper:"0xa0dabebaad1b243bbb243f933013d560819eb66f",childChainGaugeTokenAdder:"0xbfd9769b061e57e478690299011a028194d66e3c",childChainLiquidityGaugeFactory:"0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2",childChainStreamer:"0xd7fad3bd59d6477cbe1be7f646f7f1ba25b230f8",circuitBreakerLib:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",composableStablePoolFactory:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",doubleEntrypointFixRelayer:"0x8e5698dc4897dc12243c8642e77b4f21349db97c",erc4626LinearPoolFactory:"0x7adbdabaa80f654568421887c12f09e0c7bd9629",externalWeightedMath:"0x03f3fb107e74f2eac9358862e91ad3c692712054",gaugeWorkingBalanceHelper:"0xea924b45a3fcdaadf4e5cfb1665823b8f8f2039b",l2BalancerPseudoMinter:"0xc3ccace87f6d3a81724075adcb5ddd85a8a1bb68",l2LayerZeroBridgeForwarder:"0x12ca9de662a7bf5dc89e034a5083ef751b08ede7",managedPoolAddRemoveTokenLib:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",managedPoolAmmLib:"0x300ab2038eac391f26d9f895dc61f8f66a548833",managedPoolFactory:"0x8ea89804145c007e7d226001a96955ad53836087",merkleOrchard:"0x9805dcfd25e6de36bad8fe9d3fe2c9b44b764102",mockAaveLendingPool:"0x533a16f90e7d3ca31dbc608e5ec54967710f0d2a",mockAaveLinearPool:"0x19b1c92631405a0a9495ccba0becf4f2e8e908bd",mockComposableStablePool:"0xff7e6b102516e071dcda763ee9d02c1515481db5",mockErc4626LinearPool:"0x3f53a862919ccfa023cb6ace91378a79fb0f6bf5",mockErc4626Token:"0x4be0e4d6184348c5ba845a4010528cfc779610b8",mockManagedPool:"0xf5a71257b331c02da1eae52151c3d600f16b76f0",mockStaticAToken:"0x8b7854708c0c54f9d7d1ff351d4f84e6de0e134c",mockWeightedPool:"0x129c6402ff88611aa59bf2e14b39e091822e2c9c",mockYearnLinearPool:"0x1fa7f727934226aedab636d62a084931b97d366b",mockYearnTokenVault:"0xb15608d28eb43378a7e7780add3fe9bc132baf40",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x1802953277fd955f9a254b80aa0582f193cf1d77",nullVotingEscrow:"0x9da18982a33fd0c7051b19f0d7c76f2d5e7e017c",poolRecoveryHelper:"0xb5e56cc3d2e38e53b1166175c59e921a37cdc1e2",protocolFeePercentagesProvider:"0x5ef4c5352882b10893b70dbcaa0c000965bd23c5",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x70bbd023481788e443472e123ab963e5ebf58d06",protocolIdRegistry:"0x5cf4928a3205728bd12830e1840f7db85c62a4b9",recoveryModeHelper:"0x682f0ddbfd41d1272982f64a499fb62d80e27589",rewardsOnlyGauge:"0x41b953164995c11c81da73d212ed8af25741b7ac",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x6b5da774890db7b7b96c6f44e6a4b0f657399e2e",votingEscrowDelegationProxy:"0x81cfae226343b24ba12ec6521db2c79e7aeeb310",weightedPoolFactory:"0xc7e5ed1054a24ef31d827e6f86caa58b3bc168d7",weth:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",yearnLinearPoolFactory:"0x19dfef0a828eec0c85fbb335aa65437417390b85"},tokens:{BADGER:"0xbfa641051ba0a0ad1b0acf549a89536a0d76472e",CRV:"0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",LDO:"0x13ad51ed4f1b7e9dc168d8a00cb3f4ddd85efa60",renBTC:"0xdbf31df14b66535af65aac99c32e9ea844e14501",SUSHI:"0xd4d42f0b6def4ce0383636770ef773390d85c61a",USDC:"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",USDT:"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",WBTC:"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",WETH:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1"}},43114:{contracts:{aaveLinearPoolFactory:"0x6caf662b573f577de01165d2d38d1910bba41f8a",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0xdae7e32adc5d490a43ccba1f0c736033f2b4efca",authorizerAdaptorEntrypoint:"0x4e7bbd911cf1efa442bc1b2e9ea01ffe785412ec",authorizerWithAdaptorValidation:"0x8df317a729fcaa260306d7de28888932cb579b88",bal:"0xe15bcb9e0ea69e6ab9fa080c4c4a5632896298c3",balancerHelpers:"0x8e9aa87e45e92bad84d5f8dd1bff34fb92637de9",balancerQueries:"0xc128468b7ce63ea702c1f104d55a2566b13d3abd",balancerRelayer:"0x03f1ab8b19bce21eb06c364aec9e40322572a1e9",batchRelayerLibrary:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",childChainGauge:"0x4b7b369989e613ff2c65768b7cf930cc927f901e",childChainGaugeFactory:"0x161f4014c27773840ccb4ec1957113e6dd028846",childChainGaugeRewardHelper:"0x2e96068b3d5b5bae3d7515da4a1d2e52d08a2647",childChainGaugeTokenAdder:"0xf302f9f50958c5593770fdf4d4812309ff77414f",childChainLiquidityGaugeFactory:"0xb08e16cfc07c684daa2f93c70323badb2a6cbfd2",childChainStreamer:"0xd7fad3bd59d6477cbe1be7f646f7f1ba25b230f8",circuitBreakerLib:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",composableStablePoolFactory:"0x3b1eb8eb7b43882b385ab30533d9a2bef9052a98",distributionScheduler:"0xc128a9954e6c874ea3d62ce62b468ba073093f25",erc4626LinearPoolFactory:"0x4507d91cd2c0d51d9b4f30bf0b93afc938a70ba5",externalWeightedMath:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",gaugeWorkingBalanceHelper:"0x687b8c9b41e01be8b591725fac5d5f52d0564d79",l2BalancerPseudoMinter:"0xea924b45a3fcdaadf4e5cfb1665823b8f8f2039b",l2LayerZeroBridgeForwarder:"0x4638ab64022927c9bd5947607459d13f57f1551c",managedPoolAddRemoveTokenLib:"0xacf05be5134d64d150d153818f8c67ee36996650",managedPoolAmmLib:"0xa69e0ccf150a29369d8bbc0b3f510849db7e8eee",managedPoolFactory:"0x03f3fb107e74f2eac9358862e91ad3c692712054",mockAaveLendingPool:"0x57ea28a99394978d060e483477c0fd9fb9afa96c",mockAaveLinearPool:"0xa826a114b0c7db4d1ff4a4be845a78998c64564c",mockComposableStablePool:"0xea4643102dfc03d5e382e7827bf767f6587e9965",mockErc4626LinearPool:"0xed3e2f496cbcd8e212192fb8d1499842f04a0d19",mockErc4626Token:"0x2ebe41e1aa44d61c206a94474932dadc7d3fd9e3",mockManagedPool:"0x3fb81f6fb0dd94c6fc7e138887f1ca4cdb5e2999",mockStaticAToken:"0xd8b6b96c88ad626eb6209c4876e3b14f45f8803a",mockWeightedPool:"0xb2b5b452d53401391155ea48c4451f6e9b0dd058",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x0f3e0c4218b7b0108a3643cfe9d3ec0d4f57c54e",nullVotingEscrow:"0x6b1da720be2d11d95177ccfc40a917c2688f396c",poolRecoveryHelper:"0x3b8ca519122cdd8efb272b0d3085453404b25bd0",protocolFeePercentagesProvider:"0x239e55f427d44c3cc793f49bfb507ebe76638a2b",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x8f42adbba1b16eaae3bb5754915e0d06059add75",recoveryModeHelper:"0x300ab2038eac391f26d9f895dc61f8f66a548833",rewardsOnlyGauge:"0x41b953164995c11c81da73d212ed8af25741b7ac",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",votingEscrowDelegationProxy:"0x0c6052254551eae3ecac77b01dfcf1025418828f",weightedPoolFactory:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",weth:"0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7"},tokens:{}},11155111:{contracts:{aaveLinearPoolFactory:"0xdf9b5b00ef9bca66e9902bd813db14e4343be025",authorizer:"0xa331d84ec860bf466b4cdccfb4ac09a1b43f3ae6",authorizerAdaptor:"0xdcdbf71a870cc60c6f9b621e28a7d3ffd6dd4965",authorizerAdaptorEntrypoint:"0xb9ad3466cdd42015cc05d4804dc68d562b6a2065",authorizerWithAdaptorValidation:"0xb521dd5c8e13fe202626cac98873fea2b7760ce4",bal:"0xb19382073c7a0addbb56ac6af1808fa49e377b75",balancerHelpers:"0xdae7e32adc5d490a43ccba1f0c736033f2b4efca",balancerMinter:"0x1783cd84b3d01854a96b4ed5843753c2ccbd574a",balancerQueries:"0x1802953277fd955f9a254b80aa0582f193cf1d77",balancerRelayer:"0x6d5342d716c13d9a3f072a2b11498624ade27f90",balancerTokenAdmin:"0x7d2248f194755dca9a1887099394f39476d28c9a",balTokenHolderFactory:"0xef454a7b3f965d3f6723e462405246f8cd865425",batchRelayerLibrary:"0x5f6848976c2914403b425f18b589a65772f082e3",childChainGauge:"0xc49ca921c4cd1117162eaeec0ee969649997950c",childChainGaugeFactory:"0xc370cd86d5488c1788b62f11b09adb0c47f47440",circuitBreakerLib:"0x4c0c450bedb9282a7a54fcb316c285e85a8c0265",composableStablePoolFactory:"0xa3fd20e29358c056b727657e83dfd139abbc9924",erc4626LinearPoolFactory:"0x59562f93c447656f6e4799fc1fc7c3d977c3324f",externalWeightedMath:"0x8246e571d88acd1346179cc3641de87fe3544d7a",feeDistributor:"0xa6971317fb06c76ef731601c64433a4846fca707",gaugeAdder:"0xe42ffa682a26ef8f25891db4882932711d42e467",gaugeController:"0x577e5993b9cc480f07f98b5ebd055604bd9071c4",gaugeWorkingBalanceHelper:"0x2e4abed3362a622c5f712bb183005a476b146bd3",gearboxLinearPoolFactory:"0x8df317a729fcaa260306d7de28888932cb579b88",l2BalancerPseudoMinter:"0xb51f7ffc97cedfb6922e8b9bbf3ef7575fafd630",l2LayerZeroBridgeForwarder:"0xc7e5ed1054a24ef31d827e6f86caa58b3bc168d7",liquidityGaugeFactory:"0x2ff226cd12c80511a641a6101f071d853a4e5363",liquidityGaugeV5:"0x82416ce6ea7dd4923d4a3ed70a79b4a432a382c4",managedPoolAddRemoveTokenLib:"0xc7416e4f3715467ddcf28dc409a9483b2e4d4f43",managedPoolAmmLib:"0xa30ade89e6af5b0ca515cd78e44f9ad0c63989b2",managedPoolFactory:"0x63e179c5b6d54b2c2e36b9ce4085ef5a8c86d50c",mockAaveLendingPool:"0x300ab2038eac391f26d9f895dc61f8f66a548833",mockAaveLinearPool:"0xe4efd99f3c03778ba913eb578c599329634e2bd7",mockComposableStablePool:"0xa8d865fe1d68a405b29f884358468c9b52d4841d",mockErc4626LinearPool:"0x0c2ead6f2dc2a9385187023f4cec5925337b330f",mockErc4626Token:"0x2498a2b0d6462d2260eac50ae1c3e03f4829ba95",mockGearboxDieselToken:"0x4c32a8a8fda4e24139b51b456b42290f51d6a1c4",mockGearboxLinearPool:"0x112a7b7ca66e6963c49bc523a415f7d8cdb806b9",mockGearboxVault:"0x3b1eb8eb7b43882b385ab30533d9a2bef9052a98",mockLiquidityBootstrappingPool:"0xe90472ffc41d7ddf8e3b456bba748e3f22c59c6f",mockManagedPool:"0xe458224ca8d6605c87b73e92aa5cb7a4e77770f3",mockShareToken:"0x0c6052254551eae3ecac77b01dfcf1025418828f",mockSilo:"0x6b1da720be2d11d95177ccfc40a917c2688f396c",mockSiloLinearPool:"0xa149cf2d795aab83a15673f5beade9361e4e3f65",mockSiloRepository:"0xa7d524046ef89de9f8e4f2d7b029f66ccb738d48",mockStaticAToken:"0x03f3fb107e74f2eac9358862e91ad3c692712054",mockWeightedPool:"0xf7a7e1f48fa43cb7919ff4eb362c5be78092df4a",mockYearnLinearPool:"0x016b7366f76aa2794097798b90cf239796aeff8d",mockYearnTokenVault:"0x9129e834e15ea19b6069e8f08a8ecfc13686b8dc",noProtocolFeeLiquidityBootstrappingPoolFactory:"0x45ffd460cc6642b8d8fb12373dfd77ceb0f4932b",nullVotingEscrow:"0x475d18169be8a89357a9ee3ab00ca386d20fa229",omniVotingEscrowAdaptor:"0xe39b5e3b6d74016b2f6a9673d7d7493b6df549d5",poolRecoveryHelper:"0x1b6f057520b4e826271d47b8bdab98e35af17e59",preseededVotingEscrowDelegation:"0xb1a4fe1c6d25a0ddab47431a92a723dd71d9021f",protocolFeePercentagesProvider:"0xf7d5dce55e6d47852f054697bab6a1b48a00ddbd",protocolFeesCollector:"0xce88686553686da562ce7cea497ce749da109f9f",protocolFeesWithdrawer:"0x809b79b53f18e9bc08a961ed4678b901ac93213a",protocolIdRegistry:"0x6cad2ea22bfa7f4c14aae92e47f510cd5c509bc7",recoveryModeHelper:"0x5419e785b83ad3539d3a8741c0abb77d90d8784e",siloLinearPoolFactory:"0x8ea89804145c007e7d226001a96955ad53836087",singleRecipientGauge:"0x9a5ddde7056ceffb03d9962c4549ac1c4ad1f985",singleRecipientGaugeFactory:"0x7ee4d172ae50c627a1bfa9a99e1260c54da26fdf",smartWalletChecker:"0x230a59f4d9adc147480f03b0d3fffecd56c3289a",testBalancerToken:"0xb19382073c7a0addbb56ac6af1808fa49e377b75",vault:"0xba12222222228d8ba445958a75a0704d566bf2c8",veBoostV2:"0x927906bbac747c13c75f6447fe8abb490eab456c",votingEscrow:"0x150a72e4d4d81bbf045565e232c50ed0931ad795",votingEscrowDelegation:"0x0c5538098ebe88175078972f514c9e101d325d4f",votingEscrowDelegationProxy:"0xd87f44df0159dc78029ab9ca7d7e57e7249f5acd",votingEscrowRemapper:"0xf24917fb88261a37cc57f686ebc831a5c0b9fd39",weightedPoolFactory:"0x7920bfa1b2041911b354747ca7a6cdd2dfc50cfd",weth:"0x7b79995e5f793a07bc00c21412e50ecae098e7f9",yearnLinearPoolFactory:"0xacf05be5134d64d150d153818f8c67ee36996650"},tokens:{}}};const ua="0xBA12222222228d8Ba445958a75a0704d566BF2C8",ca={[be.MAINNET]:{chainId:be.MAINNET,addresses:{contracts:{multicall:"0xeefba1e63905ef1d7acba5a8513c70307c1ce441",poolDataQueries:"0xf5CDdF6feD9C589f1Be04899F48f9738531daD59",lidoRelayer:"0xdcdbf71A870cc60C6F9B621E28a7D3Ffd6Dd4965",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",veBalProxy:"0x6f5a2eE11E7a772AeB5114A20d0D7c0ff61EB8A0",...da[be.MAINNET].contracts},tokens:{bal:da[be.MAINNET].contracts.bal,wrappedNativeAsset:da[be.MAINNET].contracts.weth,bbaUsd:da[be.MAINNET].tokens.bb_a_usd,lbpRaisingTokens:["0x6b175474e89094c44da98b954eedeac495271d0f","0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48","0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"],stETH:"0xae7ab96520de3a18e5e111b5eaab095312d7fe84",wstETH:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",veBal:"0xC128a9954e6c874eA3d62ce62B468bA073093F25",...da[be.MAINNET].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/ethereum-blocks"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"ethereum"}},pools:{wETHwstETH:{id:"0x32296969ef14eb0c6d29669c550d4a0449130230000200000000000000000080",address:"0x32296969ef14eb0c6d29669c550d4a0449130230"}},poolsToIgnore:["0xbd482ffb3e6e50dc1c437557c3bea2b68f3683ee","0x0afbd58beca09545e4fb67772faf3858e610bcd0","0xf22ff21e17157340575158ad7394e068048dd98b","0xf71d0774b214c4cf51e33eb3d30ef98132e4dbaa","0xe0e8ac08de6708603cfd3d23b613d2f80e3b7afb"],sorConnectingTokens:[{symbol:"wEth",address:"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2"},{symbol:"wstEth",address:"0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"},{symbol:"DOLA",address:"0x865377367054516e17014CcdED1e7d814EDC9ce4"}]},[be.POLYGON]:{chainId:be.POLYGON,addresses:{contracts:{multicall:"0xa1B2b503959aedD81512C37e9dce48164ec6a94d",poolDataQueries:"0x84813aA3e079A665C0B80F944427eE83cBA63617",gaugeClaimHelper:"0xaeb406b0e430bf5ea2dc0b9fe62e4e53f74b3a33",...da[be.POLYGON].contracts},tokens:{bal:da[be.POLYGON].contracts.bal,wrappedNativeAsset:da[be.POLYGON].contracts.weth,lbpRaisingTokens:["0x8f3cf7ad23cd3cadbd9735aff958023239c6a063","0x2791bca1f2de4661ed88a30c99a7a9449aa84174","0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"],...da[be.POLYGON].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-polygon-prune-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-polygon",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/polygon-blocks"},thirdParty:{coingecko:{nativeAssetId:"",platformId:"polygon-pos"}},pools:{},poolsToIgnore:["0x600bd01b6526611079e12e1ff93aba7a3e34226f","0xc31a37105b94ab4efca1954a14f059af11fcd9bb"],sorConnectingTokens:[{symbol:"weth",address:"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270"},{symbol:"bbrz2",address:"0xe22483774bd8611be2ad2f4194078dac9159f4ba"}]},[be.ARBITRUM]:{chainId:be.ARBITRUM,addresses:{contracts:{multicall:"0x269ff446d9892c9e19082564df3f5e8741e190a1",poolDataQueries:"0x7Ba29fE8E83dd6097A7298075C4AFfdBda3121cC",gaugeClaimHelper:"0xa0dabebaad1b243bbb243f933013d560819eb66f",...da[be.ARBITRUM].contracts},tokens:{bal:da[be.ARBITRUM].contracts.bal,wrappedNativeAsset:da[be.ARBITRUM].contracts.weth,lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0xff970a61a04b1ca14834a43f5de4533ebddb5cc8","0x82af49447d8a07e3bd95bd0d56f35241523fbab1"],...da[be.ARBITRUM].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-arbitrum-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-arbitrum",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/ianlapham/arbitrum-one-blocks"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"arbitrum-one"}},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"}]},[be.GOERLI]:{chainId:be.GOERLI,addresses:{contracts:{multicall:"0x77dCa2C955b15e9dE4dbBCf1246B4B85b651e50e",poolDataQueries:"0x6d3197d069F8F9f1Fe7e23665Bc64CB77ED8b089",veBal:"0x33A99Dcc4C85C014cf12626959111D5898bbCAbF",veBalProxy:"0xA1F107D1cD709514AE8A914eCB757E95f9cedB31",erc4626LinearPoolFactory:"0xba240c856498e2d7a70af4911aafae0d6b565a5b",aaveLinearPoolFactory:"0x76578ecf9a141296ec657847fb45b0585bcda3a6",...da[be.GOERLI].contracts},tokens:{bal:da[be.GOERLI].contracts.bal,wrappedNativeAsset:da[be.GOERLI].contracts.weth}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-goerli-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-goerli",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/blocklytics/goerli-blocks"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"ethereum"}},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xdFCeA9088c8A88A76FF74892C1457C17dfeef9C1"}]},[be.OPTIMISM]:{chainId:be.OPTIMISM,addresses:{contracts:{multicall:"0x2dc0e2aa608532da689e89e237df582b783e552c",poolDataQueries:"0x6B5dA774890Db7B7b96C6f44e6a4b0F657399E2e",...da[be.OPTIMISM].contracts},tokens:{bal:"0xfe8b128ba8c78aabc59d4c64cee7ff28e9379921",wrappedNativeAsset:da[be.OPTIMISM].contracts.weth,lbpRaisingTokens:["0xda10009cbd5d07dd0cecc66161fc93d7c9000da1","0x7f5c764cbc14f9669b88837ca1490cca17c31607","0x4200000000000000000000000000000000000006"],...da[be.OPTIMISM].tokens}},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"optimistic-ethereum"}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-optimism",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-optimism",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/lyra-finance/optimism-mainnet-blocks"},pools:{},sorConnectingTokens:[{symbol:"weth",address:"0x4200000000000000000000000000000000000006"}]},[be.GNOSIS]:{chainId:be.GNOSIS,addresses:{contracts:{multicall:"0xbb6fab6b627947dae0a75808250d8b2652952cb5",poolDataQueries:"0x3f170631ed9821Ca51A59D996aB095162438DC10",...da[be.GNOSIS].contracts},tokens:{wrappedNativeAsset:da[be.GNOSIS].contracts.weth,bal:da[be.GNOSIS].contracts.bal,...da[be.GNOSIS].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gnosis-chain-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-gnosis-chain"},thirdParty:{coingecko:{nativeAssetId:"xdai",platformId:"xdai"}},averageBlockTime:5,pools:{},sorConnectingTokens:[{symbol:"weth",address:"0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d"},{symbol:"wsEth",address:"0x6C76971f98945AE98dD7d4DFcA8711ebea946eA6"}]},[be.FANTOM]:{chainId:be.FANTOM,addresses:{contracts:{vault:"0x20dd72Ed959b6147912C2e529F0a0C651c33c9ce",multicall:"0x66335d7ad8011f6aa3f48aadcb523b62b38ed961",poolDataQueries:"0xb132F1E145DcC085980C531e2dA81f2b84efc14F",gaugeClaimHelper:"0x0000000000000000000000000000000000000000",balancerRelayer:"0x419f7925b8c9e409b6ee8792242556fa210a7a09",balancerHelpers:"0xfE18C7C70b0a2c6541bEde0367124278BC345Dc8",weightedPoolFactory:"0x60467cb225092cE0c989361934311175f437Cf53",composableStablePoolFactory:"0x44814E3A603bb7F1198617995c5696C232F6e8Ed",yearnLinearPoolFactory:"0x1f73ae6ed391a2b1e84ff988a1bb5394b78a4a71"},tokens:{bal:"0xF24Bcf4d1e507740041C9cFd2DddB29585aDCe1e",wrappedNativeAsset:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83",lbpRaisingTokens:["0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83","0x04068DA6C83AFCFA0e13ba15A6696662335D5B75","0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E"]}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/beethovenx-v2-fantom",gaugesSubgraph:"",blockNumberSubgraph:"https://api.thegraph.com/subgraphs/name/beethovenxfi/fantom-blocks"},thirdParty:{coingecko:{nativeAssetId:"ftm",platformId:"fantom"}},pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"wftm",address:"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83"}]},[be.SEPOLIA]:{chainId:be.SEPOLIA,addresses:{contracts:{multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0x9805dcfD25e6De36bad8fe9D3Fe2c9b44B764102",...da[be.SEPOLIA].contracts},tokens:{bal:da[be.SEPOLIA].contracts.bal,wrappedNativeAsset:da[be.SEPOLIA].contracts.weth,...da[be.SEPOLIA].tokens}},urls:{subgraph:"https://api.studio.thegraph.com/query/24660/balancer-sepolia-v2/version/latest"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"ethereum"}},pools:{},poolsToIgnore:[],sorConnectingTokens:[]},[be.ZKEVM]:{chainId:be.ZKEVM,addresses:{contracts:{balancerMinter:"0x475D18169BE8a89357A9ee3Ab00ca386d20fA229",multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0xF24917fB88261a37Cc57F686eBC831a5c0B9fD39",...da[be.ZKEVM].contracts},tokens:{bal:da[be.ZKEVM].contracts.bal,wrappedNativeAsset:da[be.ZKEVM].contracts.weth,...da[be.ZKEVM].tokens}},urls:{subgraph:"https://api.studio.thegraph.com/query/24660/balancer-polygon-zk-v2/version/latest",gaugesSubgraph:"https://api.studio.thegraph.com/query/24660/balancer-gauges-polygon-zk/version/latest"},thirdParty:{coingecko:{nativeAssetId:"eth",platformId:"polygon-zkevm"}},averageBlockTime:4,pools:{},poolsToIgnore:[],sorConnectingTokens:[{symbol:"weth",address:"0x4F9A0e7FD2Bf6067db6994CF12E4495Df938E6e9"},{symbol:"wsEth",address:"0x5D8cfF95D7A57c0BF50B30b43c7CC0D52825D4a9"}]},[be.AVALANCHE]:{chainId:be.AVALANCHE,addresses:{contracts:{balancerMinter:"0xEa924b45a3fcDAAdf4E5cFB1665823B8F8F2039B",multicall:"0xcA11bde05977b3631167028862bE2a173976CA11",poolDataQueries:"0x67af5D428d38C5176a286a2371Df691cDD914Fb8",...da[be.AVALANCHE].contracts},tokens:{bal:da[be.AVALANCHE].contracts.bal,wrappedNativeAsset:da[be.AVALANCHE].contracts.weth,...da[be.AVALANCHE].tokens}},urls:{subgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-avalanche-v2",gaugesSubgraph:"https://api.thegraph.com/subgraphs/name/balancer-labs/balancer-gauges-avalanche"},thirdParty:{coingecko:{nativeAssetId:"avalanche-2",platformId:"avalanche"}},pools:{},poolsToIgnore:[],sorConnectingTokens:[]}},ya=e=>ca[e].addresses;var ma;!function(e){e.ABOVE_MAX_TOKENS="ABOVE_MAX_TOKENS",e.BELOW_MIN_TOKENS="BELOW_MIN_TOKENS",e.EXIT_DELTA_AMOUNTS="EXIT_DELTA_AMOUNTS",e.FEE_PROVIDER_NOT_PROVIDED="FEE_PROVIDER_NOT_PROVIDED",e.GAUGES_HELPER_ADDRESS_NOT_PROVIDED="GAUGES_HELPER_ADDRESS_NOT_PROVIDED",e.GAUGES_NOT_FOUND="GAUGES_NOT_FOUND",e.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED="GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED",e.GAUGES_REWARD_TOKEN_EMPTY="GAUGES_REWARD_TOKEN_EMPTY",e.ILLEGAL_PARAMETER="ILLEGAL_PARAMETER",e.INTERNAL_ERROR_INVALID_ABI="INTERNAL_ERROR_INVALID_ABI",e.INPUT_LENGTH_MISMATCH="INPUT_LENGTH_MISMATCH",e.INPUT_OUT_OF_BOUNDS="INPUT_OUT_OF_BOUNDS",e.INPUT_TOKEN_INVALID="INPUT_TOKEN_INVALID",e.INVALID_PROTOCOL_ID="INVALID_PROTOCOL_ID",e.INVALID_SWAP_FEE_PERCENTAGE="INVALID_SWAP_FEE_PERCENTAGE",e.INVALID_WEIGHTS="INVALID_WEIGHTS",e.JOIN_DELTA_AMOUNTS="JOIN_DELTA_AMOUNTS",e.JOIN_WITH_ZERO_AMOUNT="JOIN_WITH_ZERO_AMOUNT",e.MISSING_AMP="MISSING_AMP",e.MISSING_DECIMALS="MISSING_DECIMALS",e.MISSING_PRICE_RATE="MISSING_PRICE_RATE",e.MISSING_TOKENS="MISSING_TOKENS",e.MISSING_WEIGHT="MISSING_WEIGHT",e.NO_POOL_DATA="NO_POOL_DATA",e.NO_VALUE_PARAMETER="NO_VALUE_PARAMETER",e.POOL_DOESNT_EXIST="POOL_DOESNT_EXIST",e.QUERY_BATCH_SWAP="QUERY_BATCH_SWAP",e.RELAY_SWAP_AMOUNTS="RELAY_SWAP_AMOUNTS",e.REWARD_TOKEN_ZERO="REWARD_TOKEN_ZERO",e.TIMESTAMP_IN_THE_FUTURE="TIMESTAMP_IN_THE_FUTURE",e.TOKEN_MISMATCH="TOKEN_MISMATCH",e.UNSUPPORTED_PAIR="UNSUPPORTED_PAIR",e.UNSUPPORTED_POOL_TYPE="UNSUPPORTED_POOL_TYPE",e.UNSUPPORTED_POOL_TYPE_VERSION="UNSUPPORTED_POOL_TYPE_VERSION"}(ma||(ma={}));class ba extends Error{constructor(e){super(ba.getMessage(e)),this.code=e,this.name="BalancerError"}static getMessage(e){switch(e){case ma.ABOVE_MAX_TOKENS:return"the array contains more tokens than the maximum allowed";case ma.BELOW_MIN_TOKENS:return"the array does not contain the minimum quantity of tokens";case ma.EXIT_DELTA_AMOUNTS:return"Error when checking exit call deltas";case ma.FEE_PROVIDER_NOT_PROVIDED:return"Fee Provider Repository has not been provided";case ma.GAUGES_HELPER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Helper Contract address has not been provided";case ma.GAUGES_NOT_FOUND:return"Liquidity Gauges not found with given addresses";case ma.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED:return"Liquidity Gauges Reward Minter Contract address has not been provided";case ma.GAUGES_REWARD_TOKEN_EMPTY:return"No Reward Tokens for Liquidity Gauges provided";case ma.INPUT_LENGTH_MISMATCH:return"input length mismatch";case ma.INPUT_OUT_OF_BOUNDS:return"input out of bounds";case ma.INPUT_TOKEN_INVALID:return"input token invalid";case ma.INVALID_PROTOCOL_ID:return"The provided protocol id does not correspond to a protocol";case ma.INVALID_SWAP_FEE_PERCENTAGE:return"The swap fee needs to be greater than zero and less than 1e17(10%)";case ma.INVALID_WEIGHTS:return"The sum of the weights needs to be equal to 1e18(100%)";case ma.JOIN_DELTA_AMOUNTS:return"Error when checking join call deltas";case ma.JOIN_WITH_ZERO_AMOUNT:return"Cant join pool with 0 amount of token in";case ma.MISSING_AMP:return"missing amp";case ma.MISSING_DECIMALS:return"missing decimals";case ma.MISSING_PRICE_RATE:return"missing price rate";case ma.MISSING_TOKENS:return"missing tokens";case ma.MISSING_WEIGHT:return"missing weight";case ma.NO_POOL_DATA:return"no pool data";case ma.NO_VALUE_PARAMETER:return"Illegal value passed as parameter";case ma.POOL_DOESNT_EXIST:return"balancer pool does not exist";case ma.RELAY_SWAP_AMOUNTS:return"Error when checking swap amounts";case ma.REWARD_TOKEN_ZERO:return"All Zero Values for Reward Tokens";case ma.TIMESTAMP_IN_THE_FUTURE:return"Timestamp cannot be in the future";case ma.TOKEN_MISMATCH:return"token mismatch";case ma.UNSUPPORTED_PAIR:return"unsupported token pair";case ma.UNSUPPORTED_POOL_TYPE:return"unsupported pool type";default:return"Unknown error"}}}function fa(e,t,n){return n?function(e,t){const n=nn-dn.divDownFixed(e,t);return n<0?BigInt(0):n}(e,t):function(e,t){const n=dn.divDownFixed(e,t)-nn;return n<0?BigInt(0):n}(e,t)}const Ta=BigInt(1e3);function ha(e,t,n,a){const o=t.length,i=function(e,t,n){let a=en;const o=t.length;for(let e=0;e<o;e++)a+=t[e];if(a==en)return en;let i=en,s=a;const r=e*BigInt(o);for(let e=0;e<255;e++){let e=t[0]*BigInt(o);for(let a=1;a<o;a++)e=dn.div(dn.mul(dn.mul(e,t[a]),BigInt(o)),s,n);if(i=s,s=dn.div(dn.mul(dn.mul(BigInt(o),s),s)+dn.div(dn.mul(dn.mul(r,a),e),Ta,n),dn.mul(BigInt(o+1),s)+dn.div(dn.mul(r-Ta,e),Ta,!n),n),s>i){if(s-i<=1)return s}else if(i-s<=1)return s}throw new Error("Errors.STABLE_INVARIANT_DIDNT_CONVERGE")}(e,t,!0);let s=en,r=i/BigInt(o);for(let e=0;e<o;e++)e!=a&&(s+=t[e],r=r*i/(BigInt(o)*t[e]));const p=t[a],l=e*BigInt(o),d=l*s,u=BigInt(Ta)-l,c=BigInt(2)*l*p+d+u*i,y=r*BigInt(o+1)*Ta-u*p;return dn.divUpFixed(c*n/y,i)}class Ia{bptZeroPriceImpact(e,t){const{ampWithPrecision:n,scalingFactorsWithoutBpt:a,totalSharesEvm:o,upScaledBalancesWithoutBpt:i}=yn(e);if(t.length!==i.length)throw new ba(ma.INPUT_LENGTH_MISMATCH);let s=en;for(let e=0;e<i.length;e++){s+=ha(n,i,o,e)*sn(t[e],a[e])/nn}return s}calcPriceImpact(e,t,n,a){return fa(n,this.bptZeroPriceImpact(e,t),a).toString()}}class ga{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const p=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:l,expectedAmountsOut:d}=p.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...p,bptIn:n,slippage:a}):this.calcTokensOutGivenExactBptIn({...p,bptIn:n,slippage:a}),u=p.singleTokenOutIndex>=0?ee.exitExactBPTInForOneTokenOut(n,p.singleTokenOutIndex):ee.exitExactBPTInForTokensOut(n),c=this.encodeExitPool({poolTokens:p.poolTokens,poolId:t.id,exiter:e,minAmountsOut:l,userData:u,toInternalBalance:r}),y=(new Ia).calcPriceImpact(t,d.map(BigInt),BigInt(n),!1);return{...c,expectedAmountsOut:d,minAmountsOut:l,priceImpact:y}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{this.checkInputsExactTokensOut(a,n,t);const r=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:a,tokensOut:n}),{expectedBPTIn:p,maxBPTIn:l}=this.calcBptInGivenExactTokensOut({...r,slippage:o}),{downScaledAmountsOut:d,poolTokens:u}=r,c=ee.exitBPTInForExactTokensOut(d,l);return{...this.encodeExitPool({poolId:t.id,userData:c,poolTokens:u,minAmountsOut:d,exiter:e,toInternalBalance:s}),expectedBPTIn:p,maxBPTIn:l,priceImpact:(new Ia).calcPriceImpact(t,d.map(BigInt),BigInt(p),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const i=yn(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,singleTokenOutIndex:-1,bptIn:n,slippage:a}),p=Q.recoveryModeExit(n),l=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,minAmountsOut:s,userData:p,toInternalBalance:o}),d=(new Ia).calcPriceImpact(t,r.map(BigInt),BigInt(n),!1);return{...l,expectedAmountsOut:r,minAmountsOut:s,priceImpact:d}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:t,pool:n,shouldUnwrapNativeAsset:a})=>{if(!e.length||p(e,18).isNegative())throw new ba(ma.INPUT_OUT_OF_BOUNDS);if(t&&t!==o&&!n.tokens.map((e=>e.address)).some((e=>Jn(e,t))))throw new ba(ma.TOKEN_MISMATCH);if(!a&&t===o)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(n.tokens.some((e=>void 0===e.decimals)))throw new ba(ma.MISSING_DECIMALS);if(!n.amp)throw new ba(ma.MISSING_AMP)},this.checkInputsExactTokensOut=(e,t,n)=>{if(t.length!=e.length||t.length!=n.tokensList.length)throw new ba(ma.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>void 0===e.decimals)))throw new ba(ma.MISSING_DECIMALS);if(!n.amp)throw new ba(ma.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:n,singleTokenOut:a})=>{const o=yn(e,t,n),{poolTokens:i}=o;let s=-1;return a&&(s=i.indexOf(a)),{...o,singleTokenOutIndex:s}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:t,amountsOut:n,tokensOut:a})=>{const i=a.some((e=>e===o)),s=yn(e,t,i),{scalingFactors:r}=s,p=new Xt(t),[,l]=p.sortTokens(a,n),d=rn(l.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...s,upScaledAmountsOut:d,downScaledAmountsOut:l}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,ampWithPrecision:t,upScaledBalances:n,totalSharesEvm:a,swapFeeEvm:o,singleTokenOutIndex:i,bptIn:s,slippage:p,scalingFactors:l})=>{const d=S.StableMathBigInt._calcTokenOutGivenExactBptIn(t,n,i,BigInt(s),a,o).toString(),u=pn(BigInt(d)-BigInt(1),l[i]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[i]=u,y[i]=jn(r.from(u),r.from(p)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:n,bptIn:a,slippage:o})=>{const i=ln(S.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(a),t),n),s=i.map((e=>e.toString()));return{minAmountsOut:i.map((e=>jn(r.from(e),r.from(o)).toString())),expectedAmountsOut:s}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsOut:n,totalSharesEvm:a,swapFeeEvm:o,slippage:i})=>{const s=S.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,n,a,o).toString();return{maxBPTIn:Kn(r.from(s),r.from(i)).toString(),expectedBPTIn:s}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:n,minAmountsOut:a,userData:o,toInternalBalance:i})=>{const s=ua,r="exitPool",p={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:n,minAmountsOut:a,userData:o,toInternalBalance:i}};return{data:At.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest]),to:s,functionName:r,attributes:p}}}}class _a{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(n,a,t);const s=this.sortValues({pool:t,wrappedNativeAsset:i,tokensIn:n,amountsIn:a}),{expectedBPTOut:r,minBPTOut:p}=this.calcBptOutGivenExactTokensIn({...s,slippage:o});return{...this.encodeJoinPool({joiner:e,amountsIn:a,tokensIn:n,poolId:t.id,minBPTOut:p,...s}),minBPTOut:p,expectedBPTOut:r,priceImpact:(new Ia).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r),!0)}},this.checkInputs=(e,t,n)=>{if(t.length!=e.length||t.length!=n.tokensList.length)throw new ba(ma.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>void 0===e.decimals)))throw new ba(ma.MISSING_DECIMALS);if(!n.amp)throw new ba(ma.MISSING_AMP)},this.sortValues=({pool:e,wrappedNativeAsset:t,amountsIn:n,tokensIn:a})=>{const{poolTokens:i,ampWithPrecision:s,totalSharesEvm:r,swapFeeEvm:p,scalingFactors:l,upScaledBalances:d}=yn(e,t,a.includes(o)),u=new Xt(t),[,c]=u.sortTokens(a,n);return{poolTokens:i,ampWithPrecision:s,totalSharesEvm:r,swapFeeEvm:p,upScaledBalances:d,upScaledAmountsIn:rn(c.map((e=>BigInt(e))),l.map((e=>BigInt(e)))),sortedAmountsIn:c}},this.calcBptOutGivenExactTokensIn=({ampWithPrecision:e,upScaledBalances:t,upScaledAmountsIn:n,totalSharesEvm:a,swapFeeEvm:o,slippage:i})=>{const s=S.StableMathBigInt._calcBptOutGivenExactTokensIn(e,t,n,a,o).toString();return{expectedBPTOut:s,minBPTOut:jn(r.from(s),r.from(i)).toString()}},this.encodeJoinPool=({poolId:e,joiner:t,poolTokens:n,sortedAmountsIn:a,amountsIn:o,tokensIn:i,minBPTOut:s})=>{const r=ee.joinExactTokensInForBPTOut(a,s),p=ua,l="joinPool",d={poolId:e,sender:t,recipient:t,joinPoolRequest:{assets:n,maxAmountsIn:a,userData:r,fromInternalBalance:!1}};return{attributes:d,data:At.createInterface().encodeFunctionData(l,[d.poolId,d.sender,d.recipient,d.joinPoolRequest]),functionName:l,to:p,value:Un(i,o)}}}}class wa{calcTotal(e){var t,n;let a=r.from(0),o=r.from(0);for(let n=0;n<e.length;n++){const i=e[n];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;const s=Gn(i.price.usd.toString(),18),r=Gn(i.balance,18),p=r.mul(s);o=o.add(p),a=a.add(r)}if(a.gt(0)){const t=o.div(a);for(let i=0;i<e.length;i++){const s=e[i];if(null===(n=s.price)||void 0===n?void 0:n.usd)continue;const r=Gn(s.balance,18),p=r.mul(t);o=o.add(p),a=a.add(r)}}return l(o,36).toString()}}class Pa{calcPoolSpotPrice(e,t,n){const a=A.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,k).toString()}}class xa{constructor(e=new ga,t=new _a,n=new wa,a=new Pa,o=new Ia){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class Ea{calcPoolSpotPrice(e,t,n){const a=O.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,k).toString()}}class va{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(n,a,t.tokensList);const s=this.sortValuesBasedOnPoolVersion({pool:t,wrappedNativeAsset:i,amountsIn:a,tokensIn:n}),r=this.buildExactTokensInForBPTOut({...s,slippage:o,joiner:e,poolId:t.id}),p=Un(n,a),l=(new Ia).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r.expectedBPTOut),!0);return{...r,to:ua,value:p,priceImpact:l}}}sortValuesBasedOnPoolVersion({pool:e,wrappedNativeAsset:t,amountsIn:n,tokensIn:a}){return this.sortV1(t,a,n,e)}checkInputs(e,t,n){if(e.length!=t.length||e.length!=n.length-1)throw new ba(ma.INPUT_LENGTH_MISMATCH)}encodeUserDataExactTokensInForBPTOut(e,t,n){const a=jn(r.from(e),r.from(t)).toString();return{userData:re.joinExactTokensInForBPTOut(n,a),minBPTOut:a}}encodeJoinPool(e,t,n,a,o,i){const s="joinPool",r={poolId:e,sender:t,recipient:n,joinPoolRequest:{assets:a,maxAmountsIn:i,userData:o,fromInternalBalance:!1}};return{functionName:s,attributes:r,data:At.createInterface().encodeFunctionData(s,[r.poolId,r.sender,r.recipient,r.joinPoolRequest])}}sortV1(e,t,n,a){const i=new Xt(e),[,s]=i.sortTokens(t,n),{poolTokens:r,ampWithPrecision:p,swapFeeEvm:l,totalSharesEvm:d,bptIndex:u,scalingFactorsWithoutBpt:c,upScaledBalancesWithoutBpt:y}=yn(a,e,t.includes(o));return{sortedAmountsIn:s,scalingFactorsWithoutBpt:c,upScaledBalancesWithoutBpt:y,ampWithPrecision:p,totalSharesEvm:d,swapFeeEvm:l,bptIndex:u,poolTokens:r}}buildExactTokensInForBPTOut(e){const{sortedAmountsIn:t,scalingFactorsWithoutBpt:n,upScaledBalancesWithoutBpt:a,ampWithPrecision:o,totalSharesEvm:i,swapFeeEvm:s,bptIndex:r,poolTokens:p,slippage:l,poolId:d,joiner:u}=e,c=this.calcBptOutGivenExactTokensIn(t,n,a,o,i,s),y=this.encodeUserDataExactTokensInForBPTOut(c,l,t),{functionName:m,data:b,attributes:f}=this.encodeJoinPool(d,u,u,p,y.userData,zn(t,r,"0"));return{functionName:m,data:b,attributes:f,minBPTOut:y.minBPTOut,expectedBPTOut:c.toString()}}calcBptOutGivenExactTokensIn(e,t,n,a,o,i){const s=rn(e.map(BigInt),t.map(BigInt));return M._calcBptOutGivenExactTokensIn(a,n,s,o,i)}sortV4(e,t,n){const{poolTokens:a,poolTokensWithoutBpt:o,ampWithPrecision:i,swapFeeEvm:s,totalSharesEvm:r,scalingFactorsWithoutBpt:p,upScaledBalancesWithoutBpt:l}=yn(n),[d]=ea(o,e,t);return{sortedAmountsIn:d,scalingFactorsWithoutBpt:p,upScaledBalancesWithoutBpt:l,ampWithPrecision:i,totalSharesEvm:r,swapFeeEvm:s,bptIndex:0,poolTokens:a}}}class Sa{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const p=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:l,expectedAmountsOut:d}=p.singleTokenOutIndexWithoutBpt>=0?this.calcTokenOutGivenExactBptIn({...p,bptIn:n,slippage:a}):this.calcTokensOutGivenExactBptIn({...p,bptIn:n,slippage:a}),u=p.singleTokenOutIndexWithoutBpt>=0?re.exitExactBPTInForOneTokenOut(n,p.singleTokenOutIndexWithoutBpt):re.exitExactBPTInForAllTokensOut(n),c=zn(l,p.bptIndex,"0"),y=this.encodeExitPool({poolTokens:p.poolTokens,poolId:t.id,exiter:e,userData:u,minAmountsOut:c,toInternalBalance:r}),m=(new Ia).calcPriceImpact(t,d.map(BigInt),BigInt(n),!1);return{...y,expectedAmountsOut:d,minAmountsOut:l,priceImpact:m}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{this.checkInputsExactTokensOut(n,a,t);const r=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:a,tokensOut:n}),{bptIn:p,maxBPTIn:l}=this.calcBptInGivenExactTokensOut({...r,slippage:o}),d=re.exitBPTInForExactTokensOut(r.downscaledAmountsOutWithoutBpt,l);return{...this.encodeExitPool({poolTokens:r.poolTokens,minAmountsOut:r.downscaledAmountsOutWithBpt,userData:d,exiter:e,poolId:t.id,toInternalBalance:s}),maxBPTIn:l,expectedBPTIn:p,priceImpact:(new Ia).calcPriceImpact(t,r.downscaledAmountsOutWithoutBpt.map(BigInt),BigInt(p),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{this.checkInputsRecoveryExit({bptIn:n,pool:t});const i=yn(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,bptIn:n,slippage:a}),p=Q.recoveryModeExit(n),l=zn(s,i.bptIndex,"0"),d=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,userData:p,minAmountsOut:l,toInternalBalance:o}),u=(new Ia).calcPriceImpact(t,r.map(BigInt),BigInt(n),!1);return{...d,expectedAmountsOut:r,minAmountsOut:s,priceImpact:u}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:t,pool:n,shouldUnwrapNativeAsset:a})=>{if(r.from(e).lte(0))throw new ba(ma.INPUT_OUT_OF_BOUNDS);if(!t&&n.poolTypeVersion<2)throw new Error("Unsupported Exit Type For Pool");if(t&&t!==o&&!n.tokens.map((e=>e.address)).some((e=>Jn(e,t))))throw new ba(ma.TOKEN_MISMATCH);if(!a&&t===o)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(n.tokens.some((e=>void 0===e.decimals)))throw new ba(ma.MISSING_DECIMALS);if(!n.amp)throw new ba(ma.MISSING_AMP)},this.checkInputsExactTokensOut=(e,t,n)=>{if(e.length!=t.length||e.length!=n.tokensList.length-1)throw new ba(ma.INPUT_LENGTH_MISMATCH)},this.checkInputsRecoveryExit=({bptIn:e,pool:t})=>{if(r.from(e).lte(0))throw new ba(ma.INPUT_OUT_OF_BOUNDS);if(!t.isInRecoveryMode)throw new Error("Exit type not supported because pool is not in Recovery Mode");if(t.tokens.some((e=>void 0===e.decimals)))throw new ba(ma.MISSING_DECIMALS);if(!t.amp)throw new ba(ma.MISSING_AMP)},this.sortValuesExitExactBptIn=({pool:e,singleTokenOut:t,wrappedNativeAsset:n,shouldUnwrapNativeAsset:a})=>{const o=yn(e,n,a);let i=-1;return t&&(i=o.poolTokensWithoutBpt.indexOf(t)),{...o,singleTokenOutIndexWithoutBpt:i}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:t,amountsOut:n,tokensOut:a})=>{const i=a.some((e=>e===o)),s=yn(e,t,i),p=new Xt(t),[,l]=p.sortTokens(a,n),d=zn(l,s.bptIndex,"0").map((e=>{const t=r.from(e);return t.isZero()?e:t.sub(1).toString()})),u=rn(l.map((e=>BigInt(e))),s.scalingFactorsWithoutBpt);return{...s,upScaledAmountsOutWithoutBpt:u,downscaledAmountsOutWithBpt:d,downscaledAmountsOutWithoutBpt:l}},this.calcTokenOutGivenExactBptIn=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,singleTokenOutIndexWithoutBpt:n,scalingFactorsWithoutBpt:a,totalSharesEvm:o,swapFeeEvm:i,bptIn:s,slippage:p})=>{const l=S.StableMathBigInt._calcTokenOutGivenExactBptIn(e,t,n,BigInt(s),o,i),d=Array(t.length).fill("0"),u=Array(t.length).fill("0"),c=pn(l,a[n]);return d[n]=c.toString(),u[n]=jn(r.from(c),r.from(p)).toString(),{minAmountsOut:u,expectedAmountsOut:d}},this.calcTokensOutGivenExactBptIn=({upScaledBalancesWithoutBpt:e,totalSharesEvm:t,scalingFactorsWithoutBpt:n,bptIn:a,slippage:o})=>{const i=ln(S.StableMathBigInt._calcTokensOutGivenExactBptIn(e,BigInt(a),t),n),s=i.map((e=>e.toString()));return{minAmountsOut:i.map((e=>jn(r.from(e),r.from(o)).toString())),expectedAmountsOut:s}},this.calcBptInGivenExactTokensOut=({ampWithPrecision:e,upScaledBalancesWithoutBpt:t,upScaledAmountsOutWithoutBpt:n,totalSharesEvm:a,swapFeeEvm:o,slippage:i})=>{const s=S.StableMathBigInt._calcBptInGivenExactTokensOut(e,t,n,a,o).toString();return{bptIn:s,maxBPTIn:Kn(r.from(s),r.from(i)).toString()}},this.encodeExitPool=e=>{const{exiter:t,poolId:n,minAmountsOut:a,userData:o,poolTokens:i,toInternalBalance:s}=e,r="exitPool",p={poolId:n,sender:t,recipient:t,exitPoolRequest:{assets:i,minAmountsOut:a,userData:o,toInternalBalance:s}};return{to:ua,functionName:r,attributes:p,data:At.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest])}}}}class Aa{constructor(e=new Sa,t=new wa,n=new Ea,a=new Ia,o=new va){this.exit=e,this.liquidity=t,this.spotPriceCalculator=n,this.priceImpactCalculator=a,this.join=o}}class ka{bptZeroPriceImpact(e,t){if(t.length!==e.tokensList.length)throw new ba(ma.INPUT_LENGTH_MISMATCH);const{scalingFactorsRaw:n,totalSharesEvm:a,upScaledBalances:o,weights:i}=yn(e);let s=en;for(let e=0;e<t.length;e++){s+=i[e]*a/o[e]*sn(t[e],n[e])/nn}return s}calcPriceImpact(e,t,n,a){return fa(n,this.bptZeroPriceImpact(e,t),a).toString()}}class Oa{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:s,pool:t,shouldUnwrapNativeAsset:o});const p=this.sortValuesExitExactBptIn({pool:t,wrappedNativeAsset:i,shouldUnwrapNativeAsset:o,singleTokenOut:s}),{minAmountsOut:l,expectedAmountsOut:d}=p.singleTokenOutIndex>=0?this.calcTokenOutGivenExactBptIn({...p,bptIn:n,slippage:a}):this.calcTokensOutGivenExactBptIn({...p,bptIn:n,slippage:a}),u=p.singleTokenOutIndex>=0?te.exitExactBPTInForOneTokenOut(n,p.singleTokenOutIndex):te.exitExactBPTInForTokensOut(n),c=this.encodeExitPool({poolTokens:p.poolTokens,poolId:t.id,exiter:e,minAmountsOut:l,userData:u,toInternalBalance:r}),y=(new ka).calcPriceImpact(t,d.map(BigInt),BigInt(n),!1);return{...c,expectedAmountsOut:d,minAmountsOut:l,priceImpact:y}},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{this.checkInputsExactTokensOut(a,n,t);const r=this.sortValuesExitExactTokensOut({pool:t,wrappedNativeAsset:i,amountsOut:a,tokensOut:n}),{expectedBPTIn:p,maxBPTIn:l}=this.calcBptInGivenExactTokensOut({...r,slippage:o}),{downScaledAmountsOut:d,poolTokens:u}=r,c=te.exitBPTInForExactTokensOut(d,l);return{...this.encodeExitPool({poolId:t.id,userData:c,poolTokens:u,minAmountsOut:d,exiter:e,toInternalBalance:s}),expectedBPTIn:p,maxBPTIn:l,priceImpact:(new ka).calcPriceImpact(t,d.map(BigInt),BigInt(p),!1)}},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const i=yn(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,bptIn:n,slippage:a,singleTokenOutIndex:-1}),p=Q.recoveryModeExit(n),l=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,minAmountsOut:s,userData:p,toInternalBalance:o}),d=(new ka).calcPriceImpact(t,r.map(BigInt),BigInt(n),!1);return{...l,expectedAmountsOut:r,minAmountsOut:s,priceImpact:d}},this.checkInputsExactBPTIn=({bptIn:e,singleTokenOut:t,pool:n,shouldUnwrapNativeAsset:a})=>{if(!e.length||p(e,18).isNegative())throw new ba(ma.INPUT_OUT_OF_BOUNDS);if(t&&t!==o&&!n.tokens.map((e=>e.address)).some((e=>Jn(e,t))))throw new ba(ma.TOKEN_MISMATCH);if(!a&&t===o)throw new Error("shouldUnwrapNativeAsset and singleTokenOut should not have conflicting values");if(n.tokens.some((e=>void 0===e.decimals)))throw new ba(ma.MISSING_DECIMALS)},this.checkInputsExactTokensOut=(e,t,n)=>{if(t.length!=e.length||t.length!=n.tokensList.length)throw new ba(ma.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>void 0===e.decimals)))throw new ba(ma.MISSING_DECIMALS)},this.sortValuesExitExactBptIn=({pool:e,wrappedNativeAsset:t,shouldUnwrapNativeAsset:n,singleTokenOut:a})=>{const o=yn(e,t,n),{poolTokens:i}=o;let s=-1;return a&&(s=i.indexOf(a.toLowerCase())),{...o,singleTokenOutIndex:s}},this.sortValuesExitExactTokensOut=({pool:e,wrappedNativeAsset:t,amountsOut:n,tokensOut:a})=>{const i=a.some((e=>e===o)),s=yn(e,t,i),{scalingFactors:r}=s,p=new Xt(t),[,l]=p.sortTokens(a,n),d=rn(l.map((e=>BigInt(e))),r.map((e=>BigInt(e))));return{...s,upScaledAmountsOut:d,downScaledAmountsOut:l}},this.calcTokenOutGivenExactBptIn=({poolTokens:e,weights:t,upScaledBalances:n,totalSharesEvm:a,swapFeeEvm:o,singleTokenOutIndex:i,bptIn:s,slippage:p,scalingFactors:l})=>{const d=S.WeightedMaths._calcTokenOutGivenExactBptIn(n[i],t[i],BigInt(s),a,o).toString(),u=pn(BigInt(d)-BigInt(1),l[i]).toString(),c=Array(e.length).fill("0"),y=Array(e.length).fill("0");return c[i]=u,y[i]=jn(r.from(u),r.from(p)).toString(),{minAmountsOut:y,expectedAmountsOut:c}},this.calcTokensOutGivenExactBptIn=({upScaledBalances:e,totalSharesEvm:t,scalingFactors:n,bptIn:a,slippage:o})=>{const i=ln(S.WeightedMaths._calcTokensOutGivenExactBptIn(e,BigInt(a),t).map((e=>e.toString())).map((e=>BigInt(e))),n),s=i.map((e=>e.toString()));return{minAmountsOut:i.map((e=>jn(r.from(e),r.from(o)).toString())),expectedAmountsOut:s}},this.calcBptInGivenExactTokensOut=({weights:e,upScaledBalances:t,upScaledAmountsOut:n,totalSharesEvm:a,swapFeeEvm:o,slippage:i})=>{const s=S.WeightedMaths._calcBptInGivenExactTokensOut(t,e,n,a,o).toString();return{maxBPTIn:Kn(r.from(s),r.from(i)).toString(),expectedBPTIn:s}},this.encodeExitPool=({poolId:e,exiter:t,poolTokens:n,minAmountsOut:a,userData:o,toInternalBalance:i})=>{const s=ua,r="exitPool",p={poolId:e,sender:t,recipient:t,exitPoolRequest:{assets:n,minAmountsOut:a,userData:o,toInternalBalance:i}};return{data:At.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest]),to:s,functionName:r,attributes:p}}}}class Ma{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{this.checkInputs(a,n,t);const s=this.sortValues({pool:t,wrappedNativeAsset:i,tokensIn:n,amountsIn:a}),{expectedBPTOut:r,minBPTOut:p}=this.calcBptOutGivenExactTokensIn({...s,slippage:o});return{...this.encodeJoinPool({...s,poolId:t.id,joiner:e,minBPTOut:p,tokensIn:n,amountsIn:a}),minBPTOut:p,expectedBPTOut:r,priceImpact:(new ka).calcPriceImpact(t,s.sortedAmountsIn.map(BigInt),BigInt(r),!0)}},this.checkInputs=(e,t,n)=>{if(e.length!=t.length||e.length!=n.tokensList.length)throw new ba(ma.INPUT_LENGTH_MISMATCH);if(n.tokens.some((e=>void 0===e.decimals)))throw new ba(ma.MISSING_DECIMALS);if(n.tokens.some((e=>!e.weight)))throw new ba(ma.MISSING_WEIGHT)},this.sortValues=({pool:e,tokensIn:t,amountsIn:n,wrappedNativeAsset:a})=>{const i=t.some((e=>e===o)),s=yn(e,a,i),r=new Xt(a),[,p]=r.sortTokens(t,n),l=rn(p.map(BigInt),s.scalingFactors);return{...s,sortedAmountsIn:p,upScaledAmountsIn:l}},this.calcBptOutGivenExactTokensIn=({upScaledBalances:e,weights:t,upScaledAmountsIn:n,totalSharesEvm:a,swapFeeEvm:o,slippage:i})=>{const s=C._calcBptOutGivenExactTokensIn(e,t,n,a,o).toString();return{expectedBPTOut:s,minBPTOut:jn(r.from(s),r.from(i)).toString()}},this.encodeJoinPool=({sortedAmountsIn:e,poolTokens:t,poolId:n,joiner:a,minBPTOut:o,amountsIn:i,tokensIn:s})=>{const r="joinPool",p={poolId:n,sender:a,recipient:a,joinPoolRequest:{assets:t,maxAmountsIn:e,userData:te.joinExactTokensInForBPTOut(e,o),fromInternalBalance:!1}};return{to:ua,functionName:r,data:At.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.joinPoolRequest]),attributes:p,value:Un(s,i)}}}}class Ca{calcTotal(e){var t;let n=r.from(0),a=r.from(0);for(let o=0;o<e.length;o++){const i=e[o];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;let s;s=parseFloat(i.price.usd)<1?Gn(parseFloat(i.price.usd).toFixed(10),10).mul(1e8):Gn(i.price.usd,18);const r=Gn(i.balance,18),p=Gn(i.weight||"0",18),l=r.mul(s);a=a.add(l),n=n.add(p)}const o=e.reduce(((e,t)=>e.add(Gn(t.weight||"0",18))),r.from(0));if(n.gt(0)){return qn(a.mul(o).div(n),36)}return"0"}}class Ra{calcPoolSpotPrice(e,t,n){const a=e===n.address||t===n.address;if(a){const e={address:n.address,balance:n.totalShares,decimals:18,priceRate:"1",weight:"0"};n.tokens.push(e),n.tokensList.push(n.address)}const o=R.fromPool(n),i=o.parsePoolPairData(e,t),s=o._spotPriceAfterSwapExactTokenInForTokenOut(i,k).toString();return a&&(n.tokens.pop(),n.tokensList.pop()),s}}class Ba{constructor(e=new Oa,t=new Ma,n=new Ca,a=new Ra,o=new ka){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class Fa{calcTotal(e){var t,n;let o=a,i=a;for(let n=0;n<e.length;n++){const a=e[n];if(!(null===(t=a.price)||void 0===t?void 0:t.usd))continue;const s=Gn(a.price.usd.toString(),18),r=Gn(a.balance,18),p=r.mul(s);i=i.add(p),o=o.add(r)}if(o.gt(0)){const t=i.div(o);for(let a=0;a<e.length;a++){const s=e[a];if(null===(n=s.price)||void 0===n?void 0:n.usd)continue;const r=Gn(s.balance,18),p=r.mul(t);i=i.add(p),o=o.add(r)}}return l(i,36).toString()}}class Na{calcPoolSpotPrice(e,t,n){const a=B.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,k).toString()}}class Da{constructor(e=new ga,t=new _a,n=new Fa,a=new Na,o=new Ia){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class La{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{throw new Error("Exit type not supported")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{throw new Error("Exit type not supported")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{throw new Error("Exit type not supported")}}}class Ua{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Join type not supported")}}}class Va{constructor(e=new La,t=new Ua,n=new wa,a=new Ea,o=new Ia){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class Ga{bptZeroPriceImpact(e,t){throw new Error("Linear Pool bptZeroPriceImpact Not Implented")}calcPriceImpact(e,t,n,a){return"0"}}class qa{constructor(){this.buildExitExactBPTIn=({exiter:e,pool:t,bptIn:n,slippage:a,shouldUnwrapNativeAsset:o,wrappedNativeAsset:i,singleTokenOut:s,toInternalBalance:r})=>{throw new Error("Exit type not supported")},this.buildExitExactTokensOut=({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i,toInternalBalance:s})=>{throw new Error("Exit type not supported")},this.buildRecoveryExit=({exiter:e,pool:t,bptIn:n,slippage:a,toInternalBalance:o})=>{this.checkInputsExactBPTIn({bptIn:n,singleTokenOut:void 0,pool:t,shouldUnwrapNativeAsset:!1});const i=yn(t),{minAmountsOut:s,expectedAmountsOut:r}=this.calcTokensOutGivenExactBptIn({...i,bptIn:n,slippage:a}),p=Q.recoveryModeExit(n),l=zn(s,i.bptIndex,"0"),d=this.encodeExitPool({poolTokens:i.poolTokens,poolId:t.id,exiter:e,minAmountsOut:l,userData:p,toInternalBalance:o}),u=(new Ga).calcPriceImpact(t,r.map(BigInt),BigInt(n),!1);return{...d,expectedAmountsOut:r,minAmountsOut:s,priceImpact:u}},this.checkInputsExactBPTIn=({bptIn:e,pool:t})=>{if(r.from(e).lte(0))throw new ba(ma.INPUT_OUT_OF_BOUNDS);if(t.tokens.some((e=>void 0===e.decimals)))throw new ba(ma.MISSING_DECIMALS)},this.calcTokensOutGivenExactBptIn=({bptIndex:e,upScaledBalances:t,totalSharesEvm:n,scalingFactors:a,bptIn:o,slippage:i})=>{const s=Qn(ln(S.LinearMaths._calcTokensOutGivenExactBptIn(t,BigInt(o),n,e),a),e).map((e=>e.toString()));return{minAmountsOut:s.map((e=>jn(r.from(e),r.from(i)).toString())),expectedAmountsOut:s}},this.encodeExitPool=e=>{const{exiter:t,poolId:n,minAmountsOut:a,userData:o,poolTokens:i,toInternalBalance:s}=e,r="exitPool",p={poolId:n,sender:t,recipient:t,exitPoolRequest:{assets:i,minAmountsOut:a,userData:o,toInternalBalance:s}};return{to:ua,functionName:r,attributes:p,data:At.createInterface().encodeFunctionData(r,[p.poolId,p.sender,p.recipient,p.exitPoolRequest])}}}}class Wa{constructor(){this.buildJoin=({joiner:e,pool:t,tokensIn:n,amountsIn:a,slippage:o,wrappedNativeAsset:i})=>{throw new Error("Join type not supported")}}}const $a=18,Ha=Gn("1",$a);class Xa{calcTotal(e){var t,n;let o=a,i=a;for(let n=0;n<e.length;n++){const a=e[n];if(!(null===(t=a.price)||void 0===t?void 0:t.usd))continue;const s=Gn(a.price.usd.toString(),$a),r=Gn(a.balance,$a),p=r.mul(s);i=i.add(p),o=o.add(r)}if(o.gt(0)){const t=i.div(o);for(let a=0;a<e.length;a++){const s=e[a];if(null===(n=s.price)||void 0===n?void 0:n.usd)continue;const r=Gn(s.priceRate||"1",$a),p=Gn(s.balance,$a).mul(r).div(Ha),l=p.mul(t);i=i.add(l),o=o.add(p)}}return qn(i,36)}}class Ya{calcPoolSpotPrice(e,t,n){const a=F.fromPool(n),o=a.parsePoolPairData(e,t);return a._spotPriceAfterSwapExactTokenInForTokenOut(o,k).toString()}}class ja{constructor(e=new qa,t=new Wa,n=new Xa,a=new Ya,o=new Ga){this.exit=e,this.join=t,this.liquidity=n,this.spotPriceCalculator=a,this.priceImpactCalculator=o}}class Ka{buildExitExactTokensOut(){throw new Error("FXExitConcern Not implemented")}buildRecoveryExit(){throw new Error("FXExitConcern Not implemented")}}class Ja{calcTotal(e){var t,n;let a=BigInt(0),o=BigInt(0);for(let n=0;n<e.length;n++){const i=e[n];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;const s=Gn(i.price.usd.toString(),18).toBigInt(),r=Gn(i.balance,18).toBigInt(),p=dn.mulDownFixed(r,s);o=dn.add(o,p),a=dn.add(a,r)}if(a>BigInt(0)){const t=dn.divDownFixed(o,a);for(let i=0;i<e.length;i++){const s=e[i];if(null===(n=s.price)||void 0===n?void 0:n.usd)continue;const r=Gn(s.balance,18).toBigInt(),p=dn.mulDownFixed(r,t);o=dn.add(o,p),a=dn.add(a,r)}}return l(o.toString(),18).toString()}}class za{calcPoolSpotPrice(){throw new Error("FXSpotPriceConcern Not implemented")}}class Za{bptZeroPriceImpact(e,t){throw new Error("Not implemented")}calcPriceImpact(e,t,n,a){throw new Error("Not implemented")}}class Qa{buildJoin(){throw new Error("FXJoinConcern Not implemented")}}class eo{constructor(e=new Ka,t=new Ja,n=new za,a=new Za,o=new Qa){this.exit=e,this.liquidity=t,this.spotPriceCalculator=n,this.priceImpactCalculator=a,this.join=o}}class to{buildExitExactTokensOut({exiter:e,pool:t,tokensOut:n,amountsOut:a,slippage:o,wrappedNativeAsset:i}){throw new Error("Not implemented")}buildRecoveryExit({exiter:e,pool:t,bptIn:n,slippage:a}){throw new Error("Not implemented")}}class no{calcTotal(e){var t,n;let a=BigInt(0),o=BigInt(0);for(let n=0;n<e.length;n++){const i=e[n];if(!(null===(t=i.price)||void 0===t?void 0:t.usd))continue;const s=Gn(i.price.usd.toString(),18).toBigInt(),r=Gn(i.balance,18).toBigInt(),p=dn.mulDownFixed(r,s);o=dn.add(o,p),a=dn.add(a,r)}if(a>BigInt(0)){const t=dn.divDownFixed(o,a);for(let i=0;i<e.length;i++){const s=e[i];if(null===(n=s.price)||void 0===n?void 0:n.usd)continue;const r=Gn(s.balance,18).toBigInt(),p=dn.mulDownFixed(r,t);o=dn.add(o,p),a=dn.add(a,r)}}return l(o.toString(),18).toString()}}class ao{calcPoolSpotPrice(){throw new Error("GyroSpotPriceConcern Not implemented")}}class oo{bptZeroPriceImpact(e,t){throw new Error("Not implemented")}calcPriceImpact(e,t,n,a){throw new Error("Not implemented")}}class io{buildJoin(){throw new Error("GyroJoinConcern Not implemented")}}class so{constructor(e=new to,t=new no,n=new ao,a=new oo,o=new io){this.exit=e,this.liquidity=t,this.spotPriceCalculator=n,this.priceImpactCalculator=a,this.join=o}}class ro{constructor(e,t=new Ba,n=new xa,a=new Aa,o=new Da,i=new Va,s=new ja){this.weighted=t,this.stable=n,this.composableStable=a,this.metaStable=o,this.stablePhantom=i,this.linear=s}static from(e){switch(e){case"ComposableStable":return new Aa;case"FX":return new eo;case"GyroE":case"Gyro2":case"Gyro3":return new so;case"MetaStable":return new Da;case"Stable":return new xa;case"StablePhantom":return new Va;case"Investment":case"LiquidityBootstrapping":case"Weighted":return new Ba;default:if(ta(e))return new ja;throw new ba(ma.UNSUPPORTED_POOL_TYPE)}}}class po{constructor(e,t){this.pools=e,this.tokenPrices=t}async getLiquidity(e){const t=e.tokens.filter((t=>t.address!==e.address)),n=await Promise.all(t.map((async e=>{const t=await this.pools.findBy("address",e.address);if(!t)return;const n=Gn(await this.getLiquidity(t),18),a=Gn(t.totalShares,18),o=Gn(e.balance,18),i=a.eq(0)?0:n.mul(o).div(a);return{address:t.address,liquidity:i.toString()}}))),a=n.reduce(((e,t)=>e.add(t?t.liquidity:r.from(0))),r.from(0)),o=t.filter((e=>!n.find((t=>(null==t?void 0:t.address)===e.address)))),i=await Promise.all(o.map((async e=>{var t;const n=await this.tokenPrices.find(e.address);return{address:e.address,decimals:e.decimals,priceRate:e.priceRate,price:(null==n?void 0:n.usd)&&n||{usd:null===(t=e.token)||void 0===t?void 0:t.latestUSDPrice},balance:e.balance,weight:e.weight}}))),s=Gn(ro.from(e.poolType).liquidity.calcTotal(i),18);return qn(a.add(s),18)}async getBptPrice(e){const t=await this.getLiquidity(e);return(parseFloat(t)/parseFloat(e.totalShares)).toString()}}const lo=r.from("0"),uo=e=>e?Object.keys(e).filter((t=>e[t].gt(lo))).reduce(((t,n)=>(t[n]=e[n],t)),{}):{},co=(e,t,n)=>e.map((e=>((e,t,n)=>{if(!t[e.address]&&!n[e.address])return e;const a=uo(t[e.address]),o=uo(n[e.address]);return e.claimableTokens||(e.claimableTokens={...a,...o}),e})(e,t,n))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),yo=(e,t)=>{var n;if(t.rewardTokens)for(const a of Object.keys(t.rewardTokens))e[n=t.id]||(e[n]=[]),e[t.id].push(a);return e},mo=new t(["function claim_rewards(address sender, address receiver) returns (uint256)","function claimable_tokens(address addr) view returns (uint256)","function claimable_reward(address addr, address token) view returns (uint256)"]),bo=new t(["function mintMany(address[] gauges) returns (uint256)"]),fo=new t(["function getPendingRewards(address gauge, address user, address token) view returns (uint256)","function claimRewardsFromGauges(address[] gauges, address user)"]);class To{constructor(e,t,n,a,o,i){this.multicall=a,this.liquidityGauges=e,this.feeDistributor=t,this.chainId=n,this.gaugeClaimHelperAddress=o,this.balancerMinterAddress=i}async getClaimableRewardTokens(e){const t=await this.getGauges();if(!t.length)throw new ba(ma.GAUGES_NOT_FOUND);const n=t.map((e=>e.address)),a=this.getRewardTokens(t),o=await this.retrieveClaimableTokens(n,e),i=await this.retrieveClaimableRewards(a,e);return co(t,i,o)}async buildClaimRewardTokensRequest(e,t){if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new ba(ma.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED)}else if(!this.gaugeClaimHelperAddress)throw new ba(ma.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const n=(await this.getClaimableRewardTokens(t)).filter((t=>e.map((e=>e.toLowerCase())).includes(t.address.toLowerCase()))).filter((e=>e.claimableTokens&&Object.keys(e.claimableTokens).length)),a=Array.from(new Set(n.map((e=>e.claimableTokens)).map((e=>Object.keys(e||{}))).flatMap((e=>e))));if(!a.length)throw new ba(ma.GAUGES_REWARD_TOKEN_EMPTY);const o=a.map((e=>n.reduce(((t,n)=>(n.claimableTokens&&n.claimableTokens[e]&&n.claimableTokens[e]!==lo&&(t=n.claimableTokens[e].add(t)),t)),r.from(0))));if(!o.length||o.every((e=>e.eq(lo))))throw new ba(ma.REWARD_TOKEN_ZERO);if(1===this.chainId||5===this.chainId){if(!this.balancerMinterAddress)throw new ba(ma.GAUGES_REWARD_MINTER_ADDRESS_NOT_PROVIDED);const n=bo.encodeFunctionData("mintMany",[e]);return{to:this.balancerMinterAddress,from:t,callData:n,tokensOut:a,expectedTokensValue:o,functionName:"mintMany"}}{if(!this.gaugeClaimHelperAddress)throw new ba(ma.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);const n=fo.encodeFunctionData("claimRewardsFromGauges",[e,t]);return{to:this.gaugeClaimHelperAddress,from:t,callData:n,tokensOut:a,expectedTokensValue:o,functionName:"claimRewardsFromGauges"}}}async getClaimableVeBalTokens(e,t){var n;if(!this.feeDistributor)throw new ba(ma.FEE_PROVIDER_NOT_PROVIDED);return null===(n=this.feeDistributor)||void 0===n?void 0:n.getClaimableBalances(e,t)}async buildClaimVeBalTokensRequest(e,t){if(!this.feeDistributor)throw new ba(ma.FEE_PROVIDER_NOT_PROVIDED);const n=await this.feeDistributor.getClaimableBalances(e,t),a=t.map((e=>{var t;return null!==(t=n[e])&&void 0!==t?t:lo}));if(a.every((e=>e.eq(lo))))throw new ba(ma.REWARD_TOKEN_ZERO);const o=this.feeDistributor.claimBalances(e,t);return{to:this.feeDistributor.feeDistributor.address,from:e,callData:o,tokensOut:t,expectedTokensValue:a,functionName:"claimTokens"}}async getGauges(){return await this.liquidityGauges.fetch()}getRewardTokens(e){return e.reduce(yo,{})}async retrieveClaimableRewards(e,t){const n=Object.keys(e),{payload:a,paths:o}=this.getPayload(n,e,t),[,i]=await this.multicall.callStatic.aggregate(a),s=i.map((e=>"0x"==e?"0x0":e));return o.reduce((e=>(t,n,a)=>{var o;const i=r.from(`${e[a]}`);return i.gt(lo)&&(t[o=n.gauge]||(t[o]={}),t[n.gauge][n.token]=i),t})(s),{})}getPayload(e,t,n){const a=[],o=[];for(const i of e)for(const e of t[i])o.push({gauge:i,token:e}),a.push(this.getArguments(n,i,e));return{payload:a,paths:o}}getArguments(e,t,n){if(1===this.chainId||5===this.chainId)return{target:t,callData:mo.encodeFunctionData("claimable_reward",[e,n])};if(!this.gaugeClaimHelperAddress)throw new ba(ma.GAUGES_HELPER_ADDRESS_NOT_PROVIDED);return{target:this.gaugeClaimHelperAddress,callData:fo.encodeFunctionData("getPendingRewards",[t,e,n])}}async retrieveClaimableTokens(e,t){if(this.chainId===be.MAINNET||this.chainId===be.GOERLI){const n=ca[this.chainId].addresses.tokens.bal,a=e.map((e=>({target:e,callData:mo.encodeFunctionData("claimable_tokens",[t])}))),[,o]=await this.multicall.callStatic.aggregate(a),i=o.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t)=>(n,a,o)=>{const i=r.from(`${e[o]}`);return i.gt(lo)&&(n[a]||(n[a]={}),n[a][t]=i),n})(i,n),{})}return{}}}async function ho(e,t,n,a){const i={sender:o,recipient:o,fromInternalBalance:!1,toInternalBalance:!1};try{return(await e.callStatic.queryBatchSwap(t,n,a,i)).map((e=>e.toString()))}catch(e){throw`queryBatchSwap call error: ${e}`}}var Io=function(){return Io=Object.assign||function(e){for(var t,n=1,a=arguments.length;n<a;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},Io.apply(this,arguments)},go=new Map,_o=new Map,wo=!0,Po=!1;function xo(e){return e.replace(/[\s,]+/g," ").trim()}function Eo(e){var t=new Set,n=[];return e.definitions.forEach((function(e){if("FragmentDefinition"===e.kind){var a=e.name.value,o=xo((s=e.loc).source.body.substring(s.start,s.end)),i=_o.get(a);i&&!i.has(o)?wo&&console.warn("Warning: fragment with name "+a+" already exists.\ngraphql-tag enforces all fragment names across your application to be unique; read more about\nthis in the docs: http://dev.apollodata.com/core/fragments.html#unique-names"):i||_o.set(a,i=new Set),i.add(o),t.has(o)||(t.add(o),n.push(e))}else n.push(e);var s})),Io(Io({},e),{definitions:n})}function vo(e){var t=xo(e);if(!go.has(t)){var n=$(e,{experimentalFragmentVariables:Po,allowLegacyFragmentVariables:Po});if(!n||"Document"!==n.kind)throw new Error("Not a valid GraphQL document.");go.set(t,function(e){var t=new Set(e.definitions);t.forEach((function(e){e.loc&&delete e.loc,Object.keys(e).forEach((function(n){var a=e[n];a&&"object"==typeof a&&t.add(a)}))}));var n=e.loc;return n&&(delete n.startToken,delete n.endToken),e}(Eo(n)))}return go.get(t)}function So(e){for(var t=[],n=1;n<arguments.length;n++)t[n-1]=arguments[n];"string"==typeof e&&(e=[e]);var a=e[0];return t.forEach((function(t,n){t&&"Document"===t.kind?a+=t.loc.source.body:a+=t,a+=e[n+1]})),vo(a)}var Ao,ko=So,Oo=function(){go.clear(),_o.clear()},Mo=function(){wo=!1},Co=function(){Po=!0},Ro=function(){Po=!1};(Ao=So||(So={})).gql=ko,Ao.resetCaches=Oo,Ao.disableFragmentWarnings=Mo,Ao.enableExperimentalFragmentVariables=Co,Ao.disableExperimentalFragmentVariables=Ro,So.default=So;var Bo,Fo,No,Do,Lo,Uo,Vo,Go,qo,Wo,$o,Ho,Xo,Yo,jo,Ko,Jo,zo,Zo,Qo,ei,ti,ni,ai,oi,ii,si,ri,pi=So;!function(e){e.EndAmp="endAmp",e.EndTimestamp="endTimestamp",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartAmp="startAmp",e.StartTimestamp="startTimestamp"}(Bo||(Bo={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Timestamp="timestamp",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.Vault="vault",e.VaultId="vault__id",e.VaultPoolCount="vault__poolCount",e.VaultTotalLiquidity="vault__totalLiquidity",e.VaultTotalSwapCount="vault__totalSwapCount",e.VaultTotalSwapFee="vault__totalSwapFee",e.VaultTotalSwapVolume="vault__totalSwapVolume"}(Fo||(Fo={})),function(e){e.Id="id",e.PoolCount="poolCount",e.Pools="pools",e.TotalLiquidity="totalLiquidity",e.TotalSwapCount="totalSwapCount",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(No||(No={})),function(e){e.EndTimestamp="endTimestamp",e.EndWeights="endWeights",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartTimestamp="startTimestamp",e.StartWeights="startWeights"}(Do||(Do={})),function(e){e.Exit="Exit",e.Join="Join"}(Lo||(Lo={})),function(e){e.Amounts="amounts",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Sender="sender",e.Timestamp="timestamp",e.Tx="tx",e.Type="type",e.User="user",e.UserId="user__id",e.ValueUsd="valueUSD"}(Uo||(Uo={})),function(e){e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset"}(Vo||(Vo={})),function(e){e.CashDelta="cashDelta",e.Id="id",e.ManagedDelta="managedDelta",e.PoolTokenId="poolTokenId",e.PoolTokenIdAddress="poolTokenId__address",e.PoolTokenIdAssetManager="poolTokenId__assetManager",e.PoolTokenIdBalance="poolTokenId__balance",e.PoolTokenIdCashBalance="poolTokenId__cashBalance",e.PoolTokenIdDecimals="poolTokenId__decimals",e.PoolTokenIdId="poolTokenId__id",e.PoolTokenIdIndex="poolTokenId__index",e.PoolTokenIdIsExemptFromYieldProtocolFee="poolTokenId__isExemptFromYieldProtocolFee",e.PoolTokenIdManagedBalance="poolTokenId__managedBalance",e.PoolTokenIdName="poolTokenId__name",e.PoolTokenIdOldPriceRate="poolTokenId__oldPriceRate",e.PoolTokenIdPriceRate="poolTokenId__priceRate",e.PoolTokenIdSymbol="poolTokenId__symbol",e.PoolTokenIdWeight="poolTokenId__weight",e.Timestamp="timestamp",e.Type="type"}(Go||(Go={})),function(e){e.Deposit="Deposit",e.Update="Update",e.Withdraw="Withdraw"}(qo||(qo={})),function(e){e.Asc="asc",e.Desc="desc"}(Wo||(Wo={})),function(e){e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z"}($o||($o={})),function(e){e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PoolLiquidity="poolLiquidity",e.PoolShareValue="poolShareValue",e.PoolTotalShares="poolTotalShares",e.PricingAsset="pricingAsset"}(Ho||(Ho={})),function(e){e.Balance="balance",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(Xo||(Xo={})),function(e){e.Amounts="amounts",e.HoldersCount="holdersCount",e.Id="id",e.Liquidity="liquidity",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.SwapFees="swapFees",e.SwapVolume="swapVolume",e.SwapsCount="swapsCount",e.Timestamp="timestamp",e.TotalShares="totalShares"}(Yo||(Yo={})),function(e){e.Address="address",e.AssetManager="assetManager",e.Balance="balance",e.CashBalance="cashBalance",e.Decimals="decimals",e.Id="id",e.Index="index",e.IsExemptFromYieldProtocolFee="isExemptFromYieldProtocolFee",e.ManagedBalance="managedBalance",e.Managements="managements",e.Name="name",e.OldPriceRate="oldPriceRate",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.PriceRate="priceRate",e.Symbol="symbol",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenLatestUsdPriceTimestamp="token__latestUSDPriceTimestamp",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.Weight="weight"}(jo||(jo={})),function(e){e.Address="address",e.Alpha="alpha",e.Amp="amp",e.BaseToken="baseToken",e.Beta="beta",e.C="c",e.CreateTime="createTime",e.DSq="dSq",e.Delta="delta",e.Epsilon="epsilon",e.ExpiryTime="expiryTime",e.Factory="factory",e.HistoricalValues="historicalValues",e.HoldersCount="holdersCount",e.Id="id",e.IsInRecoveryMode="isInRecoveryMode",e.IsPaused="isPaused",e.Lambda="lambda",e.LastPostJoinExitInvariant="lastPostJoinExitInvariant",e.LowerTarget="lowerTarget",e.MainIndex="mainIndex",e.ManagementFee="managementFee",e.Name="name",e.OracleEnabled="oracleEnabled",e.Owner="owner",e.PoolType="poolType",e.PoolTypeVersion="poolTypeVersion",e.PriceRateProviders="priceRateProviders",e.PrincipalToken="principalToken",e.ProtocolAumFeeCache="protocolAumFeeCache",e.ProtocolId="protocolId",e.ProtocolIdData="protocolIdData",e.ProtocolIdDataId="protocolIdData__id",e.ProtocolIdDataName="protocolIdData__name",e.ProtocolSwapFeeCache="protocolSwapFeeCache",e.ProtocolYieldFeeCache="protocolYieldFeeCache",e.Root3Alpha="root3Alpha",e.S="s",e.Shares="shares",e.Snapshots="snapshots",e.SqrtAlpha="sqrtAlpha",e.SqrtBeta="sqrtBeta",e.StrategyType="strategyType",e.SwapEnabled="swapEnabled",e.SwapFee="swapFee",e.Swaps="swaps",e.SwapsCount="swapsCount",e.Symbol="symbol",e.TauAlphaX="tauAlphaX",e.TauAlphaY="tauAlphaY",e.TauBetaX="tauBetaX",e.TauBetaY="tauBetaY",e.Tokens="tokens",e.TokensList="tokensList",e.TotalLiquidity="totalLiquidity",e.TotalShares="totalShares",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume",e.TotalWeight="totalWeight",e.Tx="tx",e.U="u",e.UnitSeconds="unitSeconds",e.UpperTarget="upperTarget",e.V="v",e.VaultId="vaultID",e.VaultIdId="vaultID__id",e.VaultIdPoolCount="vaultID__poolCount",e.VaultIdTotalLiquidity="vaultID__totalLiquidity",e.VaultIdTotalSwapCount="vaultID__totalSwapCount",e.VaultIdTotalSwapFee="vaultID__totalSwapFee",e.VaultIdTotalSwapVolume="vaultID__totalSwapVolume",e.W="w",e.WeightUpdates="weightUpdates",e.WrappedIndex="wrappedIndex",e.Z="z"}(Ko||(Ko={})),function(e){e.Address="address",e.CacheDuration="cacheDuration",e.CacheExpiry="cacheExpiry",e.Id="id",e.LastCached="lastCached",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Rate="rate",e.Token="token",e.TokenAddress="token__address",e.TokenAssetManager="token__assetManager",e.TokenBalance="token__balance",e.TokenCashBalance="token__cashBalance",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenIndex="token__index",e.TokenIsExemptFromYieldProtocolFee="token__isExemptFromYieldProtocolFee",e.TokenManagedBalance="token__managedBalance",e.TokenName="token__name",e.TokenOldPriceRate="token__oldPriceRate",e.TokenPriceRate="token__priceRate",e.TokenSymbol="token__symbol",e.TokenWeight="token__weight"}(Jo||(Jo={})),function(e){e.Id="id",e.Name="name"}(zo||(zo={})),function(e){e.EndSwapFeePercentage="endSwapFeePercentage",e.EndTimestamp="endTimestamp",e.Id="id",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.ScheduledTimestamp="scheduledTimestamp",e.StartSwapFeePercentage="startSwapFeePercentage",e.StartTimestamp="startTimestamp"}(Zo||(Zo={})),function(e){e.Caller="caller",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Timestamp="timestamp",e.TokenAmountIn="tokenAmountIn",e.TokenAmountOut="tokenAmountOut",e.TokenIn="tokenIn",e.TokenInSym="tokenInSym",e.TokenOut="tokenOut",e.TokenOutSym="tokenOutSym",e.Tx="tx",e.UserAddress="userAddress",e.UserAddressId="userAddress__id",e.ValueUsd="valueUSD"}(Qo||(Qo={})),function(e){e.Amount="amount",e.Asset="asset",e.Block="block",e.Id="id",e.PoolId="poolId",e.PoolIdAddress="poolId__address",e.PoolIdAlpha="poolId__alpha",e.PoolIdAmp="poolId__amp",e.PoolIdBaseToken="poolId__baseToken",e.PoolIdBeta="poolId__beta",e.PoolIdC="poolId__c",e.PoolIdCreateTime="poolId__createTime",e.PoolIdDSq="poolId__dSq",e.PoolIdDelta="poolId__delta",e.PoolIdEpsilon="poolId__epsilon",e.PoolIdExpiryTime="poolId__expiryTime",e.PoolIdFactory="poolId__factory",e.PoolIdHoldersCount="poolId__holdersCount",e.PoolIdId="poolId__id",e.PoolIdIsInRecoveryMode="poolId__isInRecoveryMode",e.PoolIdIsPaused="poolId__isPaused",e.PoolIdLambda="poolId__lambda",e.PoolIdLastPostJoinExitInvariant="poolId__lastPostJoinExitInvariant",e.PoolIdLowerTarget="poolId__lowerTarget",e.PoolIdMainIndex="poolId__mainIndex",e.PoolIdManagementFee="poolId__managementFee",e.PoolIdName="poolId__name",e.PoolIdOracleEnabled="poolId__oracleEnabled",e.PoolIdOwner="poolId__owner",e.PoolIdPoolType="poolId__poolType",e.PoolIdPoolTypeVersion="poolId__poolTypeVersion",e.PoolIdPrincipalToken="poolId__principalToken",e.PoolIdProtocolAumFeeCache="poolId__protocolAumFeeCache",e.PoolIdProtocolId="poolId__protocolId",e.PoolIdProtocolSwapFeeCache="poolId__protocolSwapFeeCache",e.PoolIdProtocolYieldFeeCache="poolId__protocolYieldFeeCache",e.PoolIdRoot3Alpha="poolId__root3Alpha",e.PoolIdS="poolId__s",e.PoolIdSqrtAlpha="poolId__sqrtAlpha",e.PoolIdSqrtBeta="poolId__sqrtBeta",e.PoolIdStrategyType="poolId__strategyType",e.PoolIdSwapEnabled="poolId__swapEnabled",e.PoolIdSwapFee="poolId__swapFee",e.PoolIdSwapsCount="poolId__swapsCount",e.PoolIdSymbol="poolId__symbol",e.PoolIdTauAlphaX="poolId__tauAlphaX",e.PoolIdTauAlphaY="poolId__tauAlphaY",e.PoolIdTauBetaX="poolId__tauBetaX",e.PoolIdTauBetaY="poolId__tauBetaY",e.PoolIdTotalLiquidity="poolId__totalLiquidity",e.PoolIdTotalShares="poolId__totalShares",e.PoolIdTotalSwapFee="poolId__totalSwapFee",e.PoolIdTotalSwapVolume="poolId__totalSwapVolume",e.PoolIdTotalWeight="poolId__totalWeight",e.PoolIdTx="poolId__tx",e.PoolIdU="poolId__u",e.PoolIdUnitSeconds="poolId__unitSeconds",e.PoolIdUpperTarget="poolId__upperTarget",e.PoolIdV="poolId__v",e.PoolIdW="poolId__w",e.PoolIdWrappedIndex="poolId__wrappedIndex",e.PoolIdZ="poolId__z",e.Price="price",e.PricingAsset="pricingAsset",e.Timestamp="timestamp"}(ei||(ei={})),function(e){e.Id="id",e.Timestamp="timestamp",e.Token="token",e.TokenAddress="token__address",e.TokenDecimals="token__decimals",e.TokenId="token__id",e.TokenLatestFxPrice="token__latestFXPrice",e.TokenLatestUsdPrice="token__latestUSDPrice",e.TokenLatestUsdPriceTimestamp="token__latestUSDPriceTimestamp",e.TokenName="token__name",e.TokenSymbol="token__symbol",e.TokenTotalBalanceNotional="token__totalBalanceNotional",e.TokenTotalBalanceUsd="token__totalBalanceUSD",e.TokenTotalSwapCount="token__totalSwapCount",e.TokenTotalVolumeNotional="token__totalVolumeNotional",e.TokenTotalVolumeUsd="token__totalVolumeUSD",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(ti||(ti={})),function(e){e.Address="address",e.Decimals="decimals",e.Id="id",e.LatestFxPrice="latestFXPrice",e.LatestPrice="latestPrice",e.LatestPriceAsset="latestPrice__asset",e.LatestPriceBlock="latestPrice__block",e.LatestPriceId="latestPrice__id",e.LatestPricePrice="latestPrice__price",e.LatestPricePricingAsset="latestPrice__pricingAsset",e.LatestUsdPrice="latestUSDPrice",e.LatestUsdPriceTimestamp="latestUSDPriceTimestamp",e.Name="name",e.Pool="pool",e.PoolAddress="pool__address",e.PoolAlpha="pool__alpha",e.PoolAmp="pool__amp",e.PoolBaseToken="pool__baseToken",e.PoolBeta="pool__beta",e.PoolC="pool__c",e.PoolCreateTime="pool__createTime",e.PoolDSq="pool__dSq",e.PoolDelta="pool__delta",e.PoolEpsilon="pool__epsilon",e.PoolExpiryTime="pool__expiryTime",e.PoolFactory="pool__factory",e.PoolHoldersCount="pool__holdersCount",e.PoolId="pool__id",e.PoolIsInRecoveryMode="pool__isInRecoveryMode",e.PoolIsPaused="pool__isPaused",e.PoolLambda="pool__lambda",e.PoolLastPostJoinExitInvariant="pool__lastPostJoinExitInvariant",e.PoolLowerTarget="pool__lowerTarget",e.PoolMainIndex="pool__mainIndex",e.PoolManagementFee="pool__managementFee",e.PoolName="pool__name",e.PoolOracleEnabled="pool__oracleEnabled",e.PoolOwner="pool__owner",e.PoolPoolType="pool__poolType",e.PoolPoolTypeVersion="pool__poolTypeVersion",e.PoolPrincipalToken="pool__principalToken",e.PoolProtocolAumFeeCache="pool__protocolAumFeeCache",e.PoolProtocolId="pool__protocolId",e.PoolProtocolSwapFeeCache="pool__protocolSwapFeeCache",e.PoolProtocolYieldFeeCache="pool__protocolYieldFeeCache",e.PoolRoot3Alpha="pool__root3Alpha",e.PoolS="pool__s",e.PoolSqrtAlpha="pool__sqrtAlpha",e.PoolSqrtBeta="pool__sqrtBeta",e.PoolStrategyType="pool__strategyType",e.PoolSwapEnabled="pool__swapEnabled",e.PoolSwapFee="pool__swapFee",e.PoolSwapsCount="pool__swapsCount",e.PoolSymbol="pool__symbol",e.PoolTauAlphaX="pool__tauAlphaX",e.PoolTauAlphaY="pool__tauAlphaY",e.PoolTauBetaX="pool__tauBetaX",e.PoolTauBetaY="pool__tauBetaY",e.PoolTotalLiquidity="pool__totalLiquidity",e.PoolTotalShares="pool__totalShares",e.PoolTotalSwapFee="pool__totalSwapFee",e.PoolTotalSwapVolume="pool__totalSwapVolume",e.PoolTotalWeight="pool__totalWeight",e.PoolTx="pool__tx",e.PoolU="pool__u",e.PoolUnitSeconds="pool__unitSeconds",e.PoolUpperTarget="pool__upperTarget",e.PoolV="pool__v",e.PoolW="pool__w",e.PoolWrappedIndex="pool__wrappedIndex",e.PoolZ="pool__z",e.Symbol="symbol",e.TotalBalanceNotional="totalBalanceNotional",e.TotalBalanceUsd="totalBalanceUSD",e.TotalSwapCount="totalSwapCount",e.TotalVolumeNotional="totalVolumeNotional",e.TotalVolumeUsd="totalVolumeUSD"}(ni||(ni={})),function(e){e.Id="id",e.Pair="pair",e.PairId="pair__id",e.PairTotalSwapFee="pair__totalSwapFee",e.PairTotalSwapVolume="pair__totalSwapVolume",e.Timestamp="timestamp",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(ai||(ai={})),function(e){e.Id="id",e.Token0="token0",e.Token0Address="token0__address",e.Token0Decimals="token0__decimals",e.Token0Id="token0__id",e.Token0LatestFxPrice="token0__latestFXPrice",e.Token0LatestUsdPrice="token0__latestUSDPrice",e.Token0LatestUsdPriceTimestamp="token0__latestUSDPriceTimestamp",e.Token0Name="token0__name",e.Token0Symbol="token0__symbol",e.Token0TotalBalanceNotional="token0__totalBalanceNotional",e.Token0TotalBalanceUsd="token0__totalBalanceUSD",e.Token0TotalSwapCount="token0__totalSwapCount",e.Token0TotalVolumeNotional="token0__totalVolumeNotional",e.Token0TotalVolumeUsd="token0__totalVolumeUSD",e.Token1="token1",e.Token1Address="token1__address",e.Token1Decimals="token1__decimals",e.Token1Id="token1__id",e.Token1LatestFxPrice="token1__latestFXPrice",e.Token1LatestUsdPrice="token1__latestUSDPrice",e.Token1LatestUsdPriceTimestamp="token1__latestUSDPriceTimestamp",e.Token1Name="token1__name",e.Token1Symbol="token1__symbol",e.Token1TotalBalanceNotional="token1__totalBalanceNotional",e.Token1TotalBalanceUsd="token1__totalBalanceUSD",e.Token1TotalSwapCount="token1__totalSwapCount",e.Token1TotalVolumeNotional="token1__totalVolumeNotional",e.Token1TotalVolumeUsd="token1__totalVolumeUSD",e.TotalSwapFee="totalSwapFee",e.TotalSwapVolume="totalSwapVolume"}(oi||(oi={})),function(e){e.Balance="balance",e.Id="id",e.Token="token",e.UserAddress="userAddress",e.UserAddressId="userAddress__id"}(ii||(ii={})),function(e){e.Id="id",e.SharesOwned="sharesOwned",e.Swaps="swaps",e.UserInternalBalances="userInternalBalances"}(si||(si={})),function(e){e.Allow="allow",e.Deny="deny"}(ri||(ri={}));const li=pi`
    fragment SubgraphPoolShare on PoolShare {
  id
  balance
  userAddress {
    id
  }
  poolId {
    id
    address
  }
}
    `,di=pi`
    fragment SubgraphPool on Pool {
  id
  address
  poolType
  poolTypeVersion
  factory
  strategyType
  symbol
  name
  swapEnabled
  swapFee
  protocolYieldFeeCache
  protocolSwapFeeCache
  owner
  totalWeight
  totalSwapVolume
  totalSwapFee
  totalLiquidity
  totalShares
  tokens(first: 100, orderBy: index) {
    ...SubgraphPoolToken
  }
  swapsCount
  holdersCount
  tokensList
  amp
  priceRateProviders(first: 100) {
    ...SubgraphPriceRateProvider
  }
  expiryTime
  unitSeconds
  createTime
  principalToken
  baseToken
  wrappedIndex
  mainIndex
  lowerTarget
  upperTarget
  sqrtAlpha
  sqrtBeta
  root3Alpha
  isInRecoveryMode
  isPaused
  alpha
  beta
  c
  s
  lambda
  tauAlphaX
  tauAlphaY
  tauBetaX
  tauBetaY
  u
  v
  w
  z
  dSq
  delta
  epsilon
}
    ${pi`
    fragment SubgraphPoolToken on PoolToken {
  id
  symbol
  name
  decimals
  address
  balance
  managedBalance
  weight
  priceRate
  isExemptFromYieldProtocolFee
  token {
    ...TokenTree
  }
}
    ${pi`
    fragment TokenTree on Token {
  latestUSDPrice
  latestFXPrice
  pool {
    ...SubgraphSubPool
    tokens(first: 100, orderBy: index) {
      ...SubgraphSubPoolToken
      token {
        latestUSDPrice
        pool {
          ...SubgraphSubPool
          tokens(first: 100, orderBy: index) {
            ...SubgraphSubPoolToken
            token {
              latestUSDPrice
              pool {
                ...SubgraphSubPool
              }
            }
          }
        }
      }
    }
  }
}
    ${pi`
    fragment SubgraphSubPool on Pool {
  id
  totalShares
  address
  poolType
  mainIndex
}
    `}
${pi`
    fragment SubgraphSubPoolToken on PoolToken {
  address
  balance
  weight
  priceRate
  symbol
  decimals
  isExemptFromYieldProtocolFee
}
    `}`}`}
${pi`
    fragment SubgraphPriceRateProvider on PriceRateProvider {
  address
  token {
    address
  }
}
    `}`;pi`
    fragment TokenAttrs on Token {
  address
  symbol
  decimals
}
    `;const ui=pi`
    fragment SubgraphPoolSnapshot on PoolSnapshot {
  id
  pool {
    id
  }
  totalShares
  swapVolume
  swapFees
  timestamp
}
    `,ci=pi`
    fragment SubgraphJoinExit on JoinExit {
  amounts
  id
  sender
  timestamp
  tx
  type
  user {
    id
  }
  pool {
    id
    tokensList
  }
}
    `,yi=pi`
    fragment SubgraphBalancer on Balancer {
  id
  totalLiquidity
  totalSwapVolume
  totalSwapFee
  totalSwapCount
  poolCount
}
    `,mi=pi`
    fragment SubgraphTokenPrice on TokenPrice {
  id
  poolId {
    id
  }
  asset
  amount
  pricingAsset
  price
  block
  timestamp
}
    `,bi=pi`
    fragment SubgraphTokenLatestPrice on LatestPrice {
  id
  asset
  price
  poolId {
    id
  }
  pricingAsset
}
    `,fi=pi`
    fragment SubgraphUser on User {
  id
  sharesOwned(first: 1000) {
    balance
    poolId {
      id
    }
  }
}
    `,Ti=pi`
    query PoolShare($id: ID!, $block: Block_height) {
  poolShare(id: $id, block: $block) {
    ...SubgraphPoolShare
  }
}
    ${li}`,hi=pi`
    query PoolShares($first: Int, $orderBy: PoolShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: PoolShare_filter, $block: Block_height) {
  poolShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphPoolShare
  }
}
    ${li}`,Ii=pi`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${di}`,gi=pi`
    query AllPools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pool0: pools(
    first: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool1000: pools(
    first: 1000
    skip: 1000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
  pool2000: pools(
    first: 1000
    skip: 2000
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPool
  }
}
    ${di}`,_i=pi`
    query Pool($id: ID!, $block: Block_height) {
  pool(id: $id, block: $block) {
    ...SubgraphPool
  }
}
    ${di}`,wi=pi`
    query PoolHistoricalLiquidities($skip: Int, $first: Int, $orderBy: PoolHistoricalLiquidity_orderBy, $orderDirection: OrderDirection, $where: PoolHistoricalLiquidity_filter, $block: Block_height) {
  poolHistoricalLiquidities(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    id
    poolId {
      id
    }
    poolTotalShares
    poolLiquidity
    poolShareValue
    pricingAsset
    block
  }
}
    `,Pi=pi`
    query PoolSnapshots($skip: Int, $first: Int, $orderBy: PoolSnapshot_orderBy, $orderDirection: OrderDirection, $where: PoolSnapshot_filter, $block: Block_height) {
  poolSnapshots(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolSnapshot
  }
}
    ${ui}`,xi=pi`
    query JoinExits($skip: Int, $first: Int, $orderBy: JoinExit_orderBy, $orderDirection: OrderDirection, $where: JoinExit_filter, $block: Block_height) {
  joinExits(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphJoinExit
  }
}
    ${ci}`,Ei=pi`
    query Balancers($skip: Int, $first: Int, $orderBy: Balancer_orderBy, $orderDirection: OrderDirection, $where: Balancer_filter, $block: Block_height) {
  balancers(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphBalancer
  }
}
    ${yi}`,vi=pi`
    query TokenPrices($skip: Int, $first: Int, $orderBy: TokenPrice_orderBy, $orderDirection: OrderDirection, $where: TokenPrice_filter, $block: Block_height) {
  tokenPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenPrice
  }
}
    ${mi}`,Si=pi`
    query TokenLatestPrices($skip: Int, $first: Int, $orderBy: LatestPrice_orderBy, $orderDirection: OrderDirection, $where: LatestPrice_filter, $block: Block_height) {
  latestPrices(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphTokenLatestPrice
  }
}
    ${bi}`,Ai=pi`
    query TokenLatestPrice($id: ID!) {
  latestPrice(id: $id) {
    ...SubgraphTokenLatestPrice
  }
}
    ${bi}`,ki=pi`
    query User($id: ID!, $block: Block_height) {
  user(id: $id, block: $block) {
    ...SubgraphUser
  }
}
    ${fi}`,Oi=pi`
    query Users($skip: Int, $first: Int, $orderBy: User_orderBy, $orderDirection: OrderDirection, $where: User_filter, $block: Block_height) {
  users(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphUser
  }
}
    ${fi}`,Mi=(e,t,n)=>e();function Ci(e,t=Mi){return{PoolShare:(n,a)=>t((t=>e.request(Ti,n,{...a,...t})),"PoolShare","query"),PoolShares:(n,a)=>t((t=>e.request(hi,n,{...a,...t})),"PoolShares","query"),Pools:(n,a)=>t((t=>e.request(Ii,n,{...a,...t})),"Pools","query"),AllPools:(n,a)=>t((t=>e.request(gi,n,{...a,...t})),"AllPools","query"),Pool:(n,a)=>t((t=>e.request(_i,n,{...a,...t})),"Pool","query"),PoolHistoricalLiquidities:(n,a)=>t((t=>e.request(wi,n,{...a,...t})),"PoolHistoricalLiquidities","query"),PoolSnapshots:(n,a)=>t((t=>e.request(Pi,n,{...a,...t})),"PoolSnapshots","query"),JoinExits:(n,a)=>t((t=>e.request(xi,n,{...a,...t})),"JoinExits","query"),Balancers:(n,a)=>t((t=>e.request(Ei,n,{...a,...t})),"Balancers","query"),TokenPrices:(n,a)=>t((t=>e.request(vi,n,{...a,...t})),"TokenPrices","query"),TokenLatestPrices:(n,a)=>t((t=>e.request(Si,n,{...a,...t})),"TokenLatestPrices","query"),TokenLatestPrice:(n,a)=>t((t=>e.request(Ai,n,{...a,...t})),"TokenLatestPrice","query"),User:(n,a)=>t((t=>e.request(ki,n,{...a,...t})),"User","query"),Users:(n,a)=>t((t=>e.request(Oi,n,{...a,...t})),"Users","query")}}var Ri,Bi,Fi,Ni,Di,Li,Ui,Vi,Gi,qi,Wi,$i,Hi,Xi,Yi;!function(e){e.Arbitrum="Arbitrum",e.Gnosis="Gnosis",e.Optimism="Optimism",e.Polygon="Polygon"}(Ri||(Ri={})),function(e){e.gauges="gauges",e.id="id",e.numGauges="numGauges"}(Bi||(Bi={})),function(e){e.balance="balance",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.user="user",e.user__id="user__id"}(Fi||(Fi={})),function(e){e.id="id",e.name="name"}(Ni||(Ni={})),function(e){e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.timestamp="timestamp",e.user="user",e.user__id="user__id",e.weight="weight"}(Di||(Di={})),function(e){e.addedTimestamp="addedTimestamp",e.address="address",e.id="id",e.liquidityGauge="liquidityGauge",e.liquidityGauge__id="liquidityGauge__id",e.liquidityGauge__isKilled="liquidityGauge__isKilled",e.liquidityGauge__isPreferentialGauge="liquidityGauge__isPreferentialGauge",e.liquidityGauge__poolAddress="liquidityGauge__poolAddress",e.liquidityGauge__poolId="liquidityGauge__poolId",e.liquidityGauge__relativeWeightCap="liquidityGauge__relativeWeightCap",e.liquidityGauge__streamer="liquidityGauge__streamer",e.liquidityGauge__symbol="liquidityGauge__symbol",e.liquidityGauge__totalSupply="liquidityGauge__totalSupply",e.rootGauge="rootGauge",e.rootGauge__chain="rootGauge__chain",e.rootGauge__id="rootGauge__id",e.rootGauge__isKilled="rootGauge__isKilled",e.rootGauge__recipient="rootGauge__recipient",e.rootGauge__relativeWeightCap="rootGauge__relativeWeightCap",e.type="type",e.type__id="type__id",e.type__name="type__name"}(Li||(Li={})),function(e){e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.isPreferentialGauge="isPreferentialGauge",e.pool="pool",e.poolAddress="poolAddress",e.poolId="poolId",e.pool__address="pool__address",e.pool__id="pool__id",e.pool__poolId="pool__poolId",e.relativeWeightCap="relativeWeightCap",e.shares="shares",e.streamer="streamer",e.symbol="symbol",e.tokens="tokens",e.totalSupply="totalSupply"}(Ui||(Ui={})),function(e){e.asc="asc",e.desc="desc"}(Vi||(Vi={})),function(e){e.address="address",e.gauges="gauges",e.gaugesList="gaugesList",e.id="id",e.poolId="poolId",e.preferentialGauge="preferentialGauge",e.preferentialGauge__id="preferentialGauge__id",e.preferentialGauge__isKilled="preferentialGauge__isKilled",e.preferentialGauge__isPreferentialGauge="preferentialGauge__isPreferentialGauge",e.preferentialGauge__poolAddress="preferentialGauge__poolAddress",e.preferentialGauge__poolId="preferentialGauge__poolId",e.preferentialGauge__relativeWeightCap="preferentialGauge__relativeWeightCap",e.preferentialGauge__streamer="preferentialGauge__streamer",e.preferentialGauge__symbol="preferentialGauge__symbol",e.preferentialGauge__totalSupply="preferentialGauge__totalSupply"}(Gi||(Gi={})),function(e){e.decimals="decimals",e.gauge="gauge",e.gauge__id="gauge__id",e.gauge__isKilled="gauge__isKilled",e.gauge__isPreferentialGauge="gauge__isPreferentialGauge",e.gauge__poolAddress="gauge__poolAddress",e.gauge__poolId="gauge__poolId",e.gauge__relativeWeightCap="gauge__relativeWeightCap",e.gauge__streamer="gauge__streamer",e.gauge__symbol="gauge__symbol",e.gauge__totalSupply="gauge__totalSupply",e.id="id",e.periodFinish="periodFinish",e.rate="rate",e.symbol="symbol",e.totalDeposited="totalDeposited"}(qi||(qi={})),function(e){e.chain="chain",e.factory="factory",e.factory__id="factory__id",e.factory__numGauges="factory__numGauges",e.gauge="gauge",e.gauge__addedTimestamp="gauge__addedTimestamp",e.gauge__address="gauge__address",e.gauge__id="gauge__id",e.id="id",e.isKilled="isKilled",e.recipient="recipient",e.relativeWeightCap="relativeWeightCap"}(Wi||(Wi={})),function(e){e.gaugeShares="gaugeShares",e.gaugeVotes="gaugeVotes",e.id="id",e.votingLocks="votingLocks"}($i||($i={})),function(e){e.id="id",e.lockedBalance="lockedBalance",e.unlockTime="unlockTime",e.updatedAt="updatedAt",e.user="user",e.user__id="user__id",e.votingEscrowID="votingEscrowID",e.votingEscrowID__id="votingEscrowID__id",e.votingEscrowID__stakedSupply="votingEscrowID__stakedSupply"}(Hi||(Hi={})),function(e){e.id="id",e.locks="locks",e.stakedSupply="stakedSupply"}(Xi||(Xi={})),function(e){e.allow="allow",e.deny="deny"}(Yi||(Yi={}));const ji=pi`
    fragment SubgraphGaugeShare on GaugeShare {
  id
  balance
  user {
    id
  }
  gauge {
    id
    isKilled
    poolId
    poolAddress
    totalSupply
  }
}
    `,Ki=pi`
    fragment SubgraphLiquidityGauge on LiquidityGauge {
  id
  symbol
  poolAddress
  poolId
  streamer
  factory {
    id
    numGauges
  }
  totalSupply
  tokens {
    id
    symbol
    decimals
    totalDeposited
    rate
    periodFinish
  }
}
    `,Ji=pi`
    fragment SubgraphPoolWithPreferentialGauge on Pool {
  id
  poolId
  preferentialGauge {
    ...SubgraphLiquidityGauge
  }
}
    ${Ki}`,zi=pi`
    query GaugeShare($id: ID!, $block: Block_height) {
  gaugeShare(id: $id, block: $block) {
    ...SubgraphGaugeShare
  }
}
    ${ji}`,Zi=pi`
    query GaugeShares($first: Int, $orderBy: GaugeShare_orderBy, $orderDirection: OrderDirection, $skip: Int, $where: GaugeShare_filter, $block: Block_height) {
  gaugeShares(
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    where: $where
    block: $block
  ) {
    ...SubgraphGaugeShare
  }
}
    ${ji}`,Qi=pi`
    query LiquidityGauges($skip: Int, $first: Int, $orderBy: LiquidityGauge_orderBy, $orderDirection: OrderDirection, $where: LiquidityGauge_filter, $block: Block_height) {
  liquidityGauges(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphLiquidityGauge
  }
}
    ${Ki}`,es=pi`
    query Pools($skip: Int, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $where: Pool_filter, $block: Block_height) {
  pools(
    skip: $skip
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    where: $where
    block: $block
  ) {
    ...SubgraphPoolWithPreferentialGauge
  }
}
    ${Ji}`,ts=pi`
    query PoolGauges($where: Pool_filter, $first: Int, $orderBy: Pool_orderBy, $orderDirection: OrderDirection, $skip: Int, $block: Block_height) {
  pools(
    where: $where
    first: $first
    orderBy: $orderBy
    orderDirection: $orderDirection
    skip: $skip
    block: $block
  ) {
    gauges {
      id
      relativeWeightCap
    }
    preferentialGauge {
      id
    }
  }
}
    `,ns=(e,t,n)=>e();function as(e){return Ci(new W(e))}function os(e){return function(e,t=ns){return{GaugeShare:(n,a)=>t((t=>e.request(zi,n,{...a,...t})),"GaugeShare","query"),GaugeShares:(n,a)=>t((t=>e.request(Zi,n,{...a,...t})),"GaugeShares","query"),LiquidityGauges:(n,a)=>t((t=>e.request(Qi,n,{...a,...t})),"LiquidityGauges","query"),Pools:(n,a)=>t((t=>e.request(es,n,{...a,...t})),"Pools","query"),PoolGauges:(n,a)=>t((t=>e.request(ts,n,{...a,...t})),"PoolGauges","query")}}(new W(e))}class is{constructor(e,n,a={}){this.multicall=e,this.options=a,this.calls=[],this.paths=[],this.interface=new t(n)}call(e,t,n,a){return this.calls.push([t,n,a]),this.paths.push(e),this}async execute(e={}){const t=e;return(await this.executeMulticall()).forEach(((e,n)=>I(t,this.paths[n],e.length>1?e:e[0]))),this.calls=[],this.paths=[],t}async executeMulticall(){const[,e]=await this.multicall.callStatic.aggregate(this.calls.map((([e,t,n])=>({target:e,callData:this.interface.encodeFunctionData(t,n)}))),this.options);return e.map(((e,t)=>this.interface.decodeFunctionResult(this.calls[t][1],e)))}}var ss,rs;async function ps(e,t,n,a){if(0===e.length)return e;const o=Object.values(Object.fromEntries([...At.abi,...vt.abi,...Ot.abi,...xt.abi,...Je.abi,...ht.abi,...Xe.abi,...Lt.abi].map((e=>[e.name,e])))),i=wt.connect(t,a),s=new is(i,o),r=Object.values(Se),p=[];e.forEach((e=>{if(r.includes(e.poolType)&&"Managed"!==e.poolType)switch(p.push(e),s.call(`${e.id}.poolTokens`,n,"getPoolTokens",[e.id]),s.call(`${e.id}.totalSupply`,e.address,"totalSupply"),e.poolType){case"LiquidityBootstrapping":case"Investment":case"Weighted":s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage"),s.call(`${e.id}.weights`,e.address,"getNormalizedWeights");break;case"StablePhantom":s.call(`${e.id}.virtualSupply`,e.address,"getVirtualSupply"),s.call(`${e.id}.amp`,e.address,"getAmplificationParameter"),s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage");break;case"MetaStable":case"Stable":s.call(`${e.id}.amp`,e.address,"getAmplificationParameter"),s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage");break;case"ComposableStable":s.call(`${e.id}.actualSupply`,e.address,"getActualSupply"),s.call(`${e.id}.amp`,e.address,"getAmplificationParameter"),s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage");break;case"Element":s.call(`${e.id}.swapFee`,e.address,"percentFee");break;case"Gyro2":case"Gyro3":s.call(`${e.id}.poolTokens`,n,"getPoolTokens",[e.id]),s.call(`${e.id}.totalSupply`,e.address,"totalSupply"),s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage");break;case"GyroE":s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage"),e.poolTypeVersion&&2===e.poolTypeVersion&&s.call(`${e.id}.tokenRates`,e.address,"getTokenRates");break;default:e.poolType.toString().includes("Linear")&&(s.call(`${e.id}.virtualSupply`,e.address,"getVirtualSupply"),s.call(`${e.id}.swapFee`,e.address,"getSwapFeePercentage"),s.call(`${e.id}.targets`,e.address,"getTargets"),s.call(`${e.id}.rate`,e.address,"getWrappedTokenRate"))}else{Ae.getInstance().warn(`Unknown pool type: ${e.poolType} ${e.id}`)}}));let d={};try{d=await s.execute()}catch(e){throw new Error("Issue with multicall execution.")}const u=[];return Object.entries(d).forEach((([e,t],n)=>{try{const{poolTokens:a,swapFee:o,weights:i,totalSupply:s,virtualSupply:r,actualSupply:d,tokenRates:c}=t;if("Stable"===p[n].poolType||"MetaStable"===p[n].poolType||"StablePhantom"===p[n].poolType||"ComposableStable"===p[n].poolType){if(!t.amp)return void console.error(`Stable Pool Missing Amp: ${e}`);p[n].amp=l(t.amp[0],3)}if(p[n].poolType.includes("Linear")){if(!t.targets)return void console.error(`Linear Pool Missing Targets: ${e}`);p[n].lowerTarget=l(t.targets[0],18),p[n].upperTarget=l(t.targets[1],18);const a=p[n].wrappedIndex;if(void 0===a||void 0===t.rate)return void console.error(`Linear Pool Missing WrappedIndex or PriceRate: ${e}`);p[n].tokens[a].priceRate=l(t.rate,18)}if("FX"!==p[n].poolType&&(p[n].swapFee=l(o,18)),a.tokens.forEach(((t,o)=>{const s=p[n].tokens.find((e=>Jn(e.address,t)));if(!s)throw`Pool Missing Expected Token: ${e} ${t}`;s.balance=l(a.balances[o],s.decimals),i&&(s.weight=l(i[o],18))})),p[n].poolType.includes("Linear")||"StablePhantom"===p[n].poolType){if(void 0===r){return void Ae.getInstance().warn(`Pool with pre-minted BPT missing Virtual Supply: ${e}`)}p[n].totalShares=l(r,18)}else if("ComposableStable"===p[n].poolType){if(void 0===d){return void Ae.getInstance().warn(`ComposableStable missing Actual Supply: ${e}`)}p[n].totalShares=l(d,18)}else p[n].totalShares=l(s,18);if("GyroE"===p[n].poolType&&2==p[n].poolTypeVersion){if(!Array.isArray(c)||2!==c.length)return void console.error(`GyroEV2 pool with missing or invalid tokenRates: ${e}`);p[n].tokenRates=c.map((e=>l(e,18)))}u.push(p[n])}catch(e){throw new Error(`Issue with pool onchain data: ${e}`)}})),u}!function(e){e[e.SWAP_FEE_PERCENTAGE=0]="SWAP_FEE_PERCENTAGE",e[e.PERCENT_FEE=1]="PERCENT_FEE"}(ss||(ss={})),function(e){e[e.TOTAL_SUPPLY=0]="TOTAL_SUPPLY",e[e.VIRTUAL_SUPPLY=1]="VIRTUAL_SUPPLY",e[e.ACTUAL_SUPPLY=2]="ACTUAL_SUPPLY"}(rs||(rs={}));class ls{constructor(e,t,n,a,o){this.client=e,this.provider=t,this.network=n,this.sorConfig=a,this.defaultArgs=(null==o?void 0:o.args)||{orderBy:Ko.TotalLiquidity,orderDirection:Wo.Desc,where:{swapEnabled:{eq:!0},totalShares:{gt:1e-12}}}}async getPools(e){const t=function(e){return e.map((e=>({...e,poolType:e.poolType||"",tokens:(e.tokens||[]).map((e=>({...e,weight:e.weight||null}))),totalWeight:e.totalWeight||void 0,amp:e.amp||void 0,expiryTime:e.expiryTime?g(e.expiryTime):void 0,unitSeconds:e.unitSeconds?g(e.unitSeconds):void 0,principalToken:e.principalToken||void 0,baseToken:e.baseToken||void 0})))}((await this.getSubgraphPools(e)).filter((e=>{if("FX"===e.poolType)return!1;if(!this.network.poolsToIgnore)return!0;return-1===this.network.poolsToIgnore.findIndex((t=>Jn(t,e.address)))})));if(this.sorConfig&&!1===this.sorConfig.fetchOnChainBalances)return t;t.length;const n=await ps(t,this.network.addresses.contracts.multicall,this.network.addresses.contracts.vault,this.provider);return t.length,n}async getSubgraphPools(e){const t=new ra(e||this.defaultArgs).format(new sa);if(t.first){const{pools:e}=await this.client.Pools(t);return e}const{pool0:n,pool1000:a,pool2000:o}=await this.client.AllPools(t);return[...n,...a,...o]}}class ds{constructor(e){this.chainId=e}async getNativeAssetPriceInToken(e){const t=await this.getTokenPriceInNativeAsset(e);return""+1/parseFloat(t)}async getTokenPriceInNativeAsset(e){const t=`https://api.coingecko.com/api/v3/simple/token_price/${this.platformId}?contract_addresses=${e}&vs_currencies=${this.nativeAssetId}`,{data:n}=await H.get(t,{headers:{Accept:"application/json","Content-Type":"application/json"}});if(void 0===n[e.toLowerCase()]||void 0===n[e.toLowerCase()][this.nativeAssetId])throw Error("No price returned from Coingecko");return n[e.toLowerCase()][this.nativeAssetId]}get platformId(){return ca[this.chainId].thirdParty.coingecko.platformId||"2"}get nativeAssetId(){return ca[this.chainId].thirdParty.coingecko.nativeAssetId||""}}class us{constructor(e,t){this.client=e,this.weth=t.toLowerCase()}async getNativeAssetPriceInToken(e){const t=await this.getLatestPriceInEthFromSubgraph(e);if(!t)throw Error("No price found in the subgraph");return""+1/t}async getLatestPriceInEthFromSubgraph(e){e=e.toLowerCase();const{latestPrices:t}=await this.client.TokenLatestPrices({where:{asset_in:[e,this.weth]}}),n=_(t,"id");if(n[`${e}-${this.weth}`])return parseFloat(n[`${e}-${this.weth}`].price);const a=t.filter((t=>t.asset===e));for(const e of a){const t=n[`${e.pricingAsset}-${this.weth}`];if(t)return parseFloat(e.price)*parseFloat(t.price)}return null}}function cs(e){var t,n;if("number"==typeof e.network){const n=ca[e.network];return{...n,urls:{...n.urls,subgraph:null!==(t=e.customSubgraphUrl)&&void 0!==t?t:n.urls.subgraph},tenderly:e.tenderly}}return{...e.network,urls:{...e.network.urls,subgraph:null!==(n=e.customSubgraphUrl)&&void 0!==n?n:e.network.urls.subgraph},tenderly:e.network.tenderly}}class ys extends D{constructor(e){const t=cs(e),n=ys.getSorConfig(e),a=ys.getSorNetworkConfig(t),o=new q(e.rpcUrl,e.network),i=as(t.urls.subgraph);super(o,a,ys.getPoolDataService(t,n,o,i),ys.getTokenPriceService(t,n,i))}static getSorConfig(e){return{tokenPriceService:"coingecko",poolDataService:"subgraph",fetchOnChainBalances:!0,...e.sor}}static getSorNetworkConfig(e){var t;return{...e,vault:e.addresses.contracts.vault,weth:e.addresses.tokens.wrappedNativeAsset,lbpRaisingTokens:null===(t=e.addresses.tokens)||void 0===t?void 0:t.lbpRaisingTokens,wETHwstETH:e.pools.wETHwstETH,connectingTokens:e.sorConnectingTokens}}static getPoolDataService(e,t,n,a){return"object"==typeof t.poolDataService?t.poolDataService:new ls(a,n,e,t)}static getTokenPriceService(e,t,n){return"object"==typeof t.tokenPriceService?t.tokenPriceService:("subgraph"===t.tokenPriceService&&new us(n,e.addresses.tokens.wrappedNativeAsset),new ds(e.chainId))}}function ms(e){if(e.poolIds.length>2)throw new Error("Simple flash swap only supports a maximum of two pools");if(e.assets.length>2)throw new Error("Simple flash swap only supports a maximum of to two assets (tokens)")}function bs(e,t){return[{poolId:e[0],assetInIndex:0,assetOutIndex:1,amount:t,userData:"0x"},{poolId:e[1],assetInIndex:1,assetOutIndex:0,amount:"0",userData:"0x"}]}function fs(e){return-1*Number(e)}function Ts(e){return w(e)}const hs={"0xae7ab96520de3a18e5e111b5eaab095312d7fe84":"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0","0xd46ba6d942050d489dbd938a2c909a5d5039a161":"0xedb171c18ce90b633db442f2a6f72874093b49ef","0x1e6bb68acec8fefbd87d192be09bb274170a0548":"0xF03387d8d0FF326ab586A58E0ab4121d106147DF"};function Is(e){let t=e;return hs.hasOwnProperty(e)&&(t=hs[e]),t}var gs;function _s(e,t,n){const{tokens:a,contracts:o}=ya(n);let i={id:gs.vault,address:o.vault};return a.stETH&&o.lidoRelayer&&[e,t].includes(a.stETH)&&(i={id:gs.lido,address:o.lidoRelayer}),i}function ws(e){return e.id===gs.lido?$e.abi.filter((e=>"function"===e.type&&e.name&&["swap","batchSwap"].includes(e.name))):At.abi.filter((e=>"function"===e.type&&e.name&&["swap","batchSwap"].includes(e.name)))}function Ps(e){return{amount:e,max:t=>e.mul(1e4+t).div(1e4),min:t=>e.mul(1e4-t).div(1e4)}}function xs(e,t){const n=t===pa.SwapExactIn?e.swapAmount:e.returnAmount,a=t===pa.SwapExactIn?e.returnAmount:e.swapAmount,o=t===pa.SwapExactIn?e.swapAmountForSwaps||e.swapAmount:e.returnAmountFromSwaps||e.returnAmount,i=t===pa.SwapExactIn?e.returnAmountFromSwaps||e.returnAmount:e.swapAmountForSwaps||e.swapAmount,s=Is(e.tokenIn),r=Is(e.tokenOut);return{...e,amountIn:n,amountOut:a,amountInForLimits:Ps(o),amountOutForLimits:Ps(i),tokenInForSwaps:s,tokenOutFromSwaps:r}}!function(e){e[e.vault=1]="vault",e[e.lido=2]="lido"}(gs||(gs={}));class Es{constructor(e,t,n){this.kind=t,this.chainId=n,this.functionName="swap",this.swapInfo=xs(e,t),this.relayer=_s(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}get amount(){return this.kind===pa.SwapExactOut?this.swapInfo.amountOutForLimits.amount:this.swapInfo.amountInForLimits.amount}setLimits(e){this.limit=this.kind===pa.SwapExactIn?this.swapInfo.amountOutForLimits.min(e).toString():this.swapInfo.amountInForLimits.max(e).toString()}get singleSwap(){return{poolId:this.swapInfo.swaps[0].poolId,kind:this.kind,assetIn:this.swapInfo.tokenInForSwaps,assetOut:this.swapInfo.tokenOutFromSwaps,amount:this.amount.toString(),userData:"0x"}}attributes(){var e;if(!this.funds||!this.limit||!this.deadline)throw new Error("Uninitialized arguments");let t={request:this.singleSwap,funds:this.funds,limit:this.limit,deadline:this.deadline};const n=this.fragment();return n[0].inputs&&(null===(e=n[0].inputs)||void 0===e?void 0:e.length)>4&&(t={...t,value:"0",outputReference:"0"}),t}data(){return new t(this.fragment()).encodeFunctionData("swap",Object.values(this.attributes()))}value(e){let t=r.from(0);return this.swapInfo.tokenIn===o&&(t=this.kind===pa.SwapExactIn?this.swapInfo.amountIn:this.swapInfo.amountInForLimits.max(e)),t}to(){return this.relayer.address}fragment(){return ws(this.relayer).filter((e=>e.name===this.functionName))}}class vs{constructor(e,t,n){this.kind=t,this.chainId=n,this.functionName="batchSwap",this.swapInfo=xs(e,t),this.relayer=_s(this.swapInfo.tokenIn,this.swapInfo.tokenOut,this.chainId)}setFunds(e,t){this.funds={sender:e,recipient:t||e,fromInternalBalance:!1,toInternalBalance:!1}}setDeadline(e){this.deadline=e}minAmountOut(e){return this.kind===pa.SwapExactIn?this.swapInfo.amountOutForLimits.min(e):this.swapInfo.amountOutForLimits.amount}maxAmountIn(e){return this.kind===pa.SwapExactOut?this.swapInfo.amountInForLimits.max(e):this.swapInfo.amountInForLimits.amount}setLimits(e){this.limits=this.swapInfo.tokenAddresses.map((t=>{let n=r.from(0);return t===this.swapInfo.tokenInForSwaps&&(n=this.maxAmountIn(e)),t===this.swapInfo.tokenOutFromSwaps&&(n=this.minAmountOut(e).mul(-1)),n})).map((e=>e.toString().split(".")[0]))}attributes(){var e;if(!this.funds||!this.limits||!this.deadline)throw new Error("Uninitialized arguments");let t={kind:this.kind,swaps:this.swapInfo.swaps,assets:this.swapInfo.tokenAddresses,funds:this.funds,limits:this.limits,deadline:this.deadline};const n=this.fragment();return n[0].inputs&&(null===(e=n[0].inputs)||void 0===e?void 0:e.length)>6&&(t={...t,value:"0",outputReferences:[]}),t}data(){return new t(this.fragment()).encodeFunctionData("batchSwap",Object.values(this.attributes()))}value(e){let t=r.from(0);return this.swapInfo.tokenIn===o&&(t=this.maxAmountIn(e)),t}to(){return this.relayer.address}fragment(){return ws(this.relayer).filter((e=>e.name===this.functionName))}}const Ss={maxPools:4,gasPrice:"1",deadline:"999999999999999999",maxSlippage:10};class As{constructor(e){e instanceof D?(this.sor=e,this.chainId=this.sor.provider._network.chainId):(this.sor=new ys(e),"number"==typeof e.network?this.chainId=e.network:this.chainId=e.network.chainId),this.vaultContract=At.connect(ua,this.sor.provider)}static getLimitsForSlippage(e,t,n,a,o,i){return la(e,t,n,a,o,i).map((e=>e.toString()))}async findRouteGivenIn({tokenIn:e,tokenOut:t,amount:n,gasPrice:a,maxPools:o=4}){return this.sor.getSwaps(e,t,N.SwapExactIn,n,{gasPrice:a,maxPools:o})}async findRouteGivenOut({tokenIn:e,tokenOut:t,amount:n,gasPrice:a,maxPools:o=4}){return this.sor.getSwaps(e,t,N.SwapExactOut,n,{gasPrice:a,maxPools:o})}buildSwap({userAddress:e,recipient:t,swapInfo:n,kind:a,deadline:o,maxSlippage:i}){if(!this.chainId)throw"Missing network configuration";const s=n.swaps.length>1?new vs(n,a,this.chainId):new Es(n,a,this.chainId);s.setFunds(e,t),s.setDeadline(o),s.setLimits(i);const r=s.to(),{functionName:p}=s;return{to:r,functionName:p,attributes:s.attributes(),data:s.data(),value:s.value(i)}}async buildRouteExactIn(e,t,n,a,o,i=Ss){const s={...Ss,...i},p=await this.findRouteGivenIn({tokenIn:n,tokenOut:a,amount:r.from(o),gasPrice:r.from(s.gasPrice),maxPools:s.maxPools});return this.buildSwap({userAddress:e,recipient:t,swapInfo:p,kind:pa.SwapExactIn,deadline:s.deadline,maxSlippage:s.maxSlippage})}static encodeBatchSwap(e){return At.createInterface().encodeFunctionData("batchSwap",[e.kind,e.swaps,e.assets,e.funds,e.limits,e.deadline])}static encodeSimpleFlashSwap(e){return this.encodeBatchSwap(function({poolIds:e,assets:t,flashLoanAmount:n,walletAddress:a}){ms({poolIds:e,assets:t});const o=bs(e,n),i={sender:a,fromInternalBalance:!1,recipient:a,toInternalBalance:!1};return{kind:pa.SwapExactIn,swaps:o,assets:t,funds:i,limits:["0","0"],deadline:"999999999999999999"}}(e))}async fetchPools(e){return this.sor.fetchPools(e)}getPools(){return this.sor.getPools()}async queryBatchSwap(e){return await ho(this.vaultContract,e.kind,e.swaps,e.assets)}async querySimpleFlashSwap(e){return await async function(e){ms(e);const[t,n]=e.assets;try{const a=await ho(e.vaultContract,pa.SwapExactIn,bs(e.poolIds,e.flashLoanAmount),e.assets),o={[t]:fs(a[0]).toString(),[n]:fs(a[1]).toString()};return{profits:o,isProfitable:Ts([o[t],o[n]])>0}}catch(e){throw`Failed to querySimpleFlashSwap: ${e}`}}({...e,vaultContract:this.vaultContract})}async getSorSwap(e){return await async function(e,t,n,a,o){const i=n===pa.SwapExactIn?N.SwapExactIn:N.SwapExactOut;return await o.getSwaps(e.toLowerCase(),t.toLowerCase(),i,a)}(e.tokenIn,e.tokenOut,e.swapType,e.amount,this.sor)}async queryExactIn(e){const t=await this.query(e,pa.SwapExactIn);return this.assetDeltas(t.map(String),e.tokenAddresses)}async queryExactOut(e){const t=await this.query(e,pa.SwapExactOut);return this.assetDeltas(t.map(String),e.tokenAddresses)}query(e,t){const{swaps:n,tokenAddresses:a}=e,i={sender:o,recipient:o,fromInternalBalance:!1,toInternalBalance:!1};return this.vaultContract.callStatic.queryBatchSwap(t,n,a,i)}assetDeltas(e,t){return Object.fromEntries(e.map(((e,n)=>[t[n],e])))}}var ks;!function(e){e[e.WEIGHTED=0]="WEIGHTED",e[e.LEGACY_STABLE=1]="LEGACY_STABLE",e[e.COMPOSABLE_STABLE=2]="COMPOSABLE_STABLE",e[e.COMPOSABLE_STABLE_V2=3]="COMPOSABLE_STABLE_V2"}(ks||(ks={}));const Os=$e.createInterface();class Ms{static encodeApproveVault(e,t){return Os.encodeFunctionData("approveVault",[e,t])}static encodeSetRelayerApproval(e,t,n){return Os.encodeFunctionData("setRelayerApproval",[e,t,n])}static encodeGaugeWithdraw(e,t,n,a){return Os.encodeFunctionData("gaugeWithdraw",[e,t,n,a])}static encodeGaugeDeposit(e,t,n,a){return Os.encodeFunctionData("gaugeDeposit",[e,t,n,a])}static encodeSwap(e){return Os.encodeFunctionData("swap",[e.request,e.funds,e.limit,e.deadline,e.value,e.outputReference])}static encodeBatchSwap(e){return Os.encodeFunctionData("batchSwap",[e.swapType,e.swaps,e.assets,e.funds,e.limits,e.deadline,e.value,e.outputReferences])}static encodeExitPool(e){return Os.encodeFunctionData("exitPool",[e.poolId,e.poolKind,e.sender,e.recipient,e.exitPoolRequest,e.outputReferences])}static encodeJoinPool(e){return Os.encodeFunctionData("joinPool",[e.poolId,e.kind,e.sender,e.recipient,e.joinPoolRequest,e.value,e.outputReference])}static encodeWrapAaveDynamicToken(e){return Os.encodeFunctionData("wrapAaveDynamicToken",[e.staticToken,e.sender,e.recipient,e.amount,e.fromUnderlying,e.outputReference])}static encodeUnwrapAaveStaticToken(e){return Os.encodeFunctionData("unwrapAaveStaticToken",[e.staticToken,e.sender,e.recipient,e.amount,e.toUnderlying,e.outputReference])}static encodeUnwrapWstETH(e){return Os.encodeFunctionData("unwrapWstETH",[e.sender,e.recipient,e.amount,e.outputReference])}static encodeUnwrap(e,t){let n;switch(t){case"AaveLinear":return this.encodeUnwrapAaveStaticToken({staticToken:e.wrappedToken,sender:e.sender,recipient:e.recipient,amount:e.amount,toUnderlying:!0,outputReference:e.outputReference});case"BeefyLinear":case"ERC4626Linear":n="unwrapERC4626";break;case"EulerLinear":n="unwrapEuler";break;case"GearboxLinear":n="unwrapGearbox";break;case"ReaperLinear":n="unwrapReaperVaultToken";break;case"TetuLinear":n="unwrapTetu";break;case"YearnLinear":n="unwrapYearn";break;case"MidasLinear":n="unwrapCompoundV2";break;case"SiloLinear":n="unwrapShareToken";break;default:throw new Error("Unwrapping not supported for this pool type: "+t)}return Os.encodeFunctionData(n,[e.wrappedToken,e.sender,e.recipient,e.amount,e.outputReference])}static encodePeekChainedReferenceValue(e){return Os.encodeFunctionData("peekChainedReferenceValue",[e])}static toChainedReference(e,t=!0){const n=t?Ms.CHAINED_REFERENCE_TEMP_PREFIX:Ms.CHAINED_REFERENCE_READONLY_PREFIX,a=`0x${n}${"0".repeat(64-n.length)}`;return r.from(a).add(e)}static fromChainedReference(e,t=!0){const n=t?Ms.CHAINED_REFERENCE_TEMP_PREFIX:Ms.CHAINED_REFERENCE_READONLY_PREFIX,a=`0x${n}${"0".repeat(64-n.length)}`;return r.from(e).sub(r.from(a))}static isChainedReference(e){const t=r.from(e),n=r.from("0xfff0000000000000000000000000000000000000000000000000000000000000"),a=t.toBigInt()&n.toBigInt();return"0xba10000000000000000000000000000000000000000000000000000000000000"===r.from(a)._hex.toString()}static formatExitPoolInput(e){const{assets:t,minAmountsOut:n,userData:a,toInternalBalance:o,poolId:i,poolKind:s,sender:r,recipient:p,outputReferences:l}=e;return{poolId:i,poolKind:s,sender:r,recipient:p,outputReferences:l,exitPoolRequest:{assets:t,minAmountsOut:n,userData:a,toInternalBalance:o}}}static formatJoinPoolInput(e){const{assets:t,maxAmountsIn:n,userData:a,fromInternalBalance:o,poolId:i,kind:s,sender:r,recipient:p,value:l,outputReference:d}=e;return{poolId:i,kind:s,sender:r,recipient:p,value:l,outputReference:d,joinPoolRequest:{assets:t,maxAmountsIn:n,userData:a,fromInternalBalance:o}}}}Ms.CHAINED_REFERENCE_TEMP_PREFIX="ba10",Ms.CHAINED_REFERENCE_READONLY_PREFIX="ba11",Ms.signRelayerApproval=async(e,t,n,a)=>{const o=a.interface.encodeFunctionData("setRelayerApproval",[t,e,!0]),s=await zt.signSetRelayerApprovalAuthorization(a,n,e,o);return zt.encodeCalldataAuthorization("0x",i,s)};class Cs{constructor(e){this.url=cs(e).urls.subgraph,this.client=this.initClient()}initClient(){return Ci(new W(this.url))}}class Rs{constructor(e,t){this.swaps=t||new As(e)}async fetchPools(){return this.swaps.fetchPools()}getPools(){return this.swaps.getPools()}async getSpotPrice(e,t,n=[]){0===n.length&&(await this.fetchPools(),n=this.getPools());const a=L(n,0),o=this.swaps.sor.routeProposer.getCandidatePathsFromDict(e,t,0,a,4);if(0===o.length)throw new ba(ma.UNSUPPORTED_PAIR);return U(o[0],0,k).toString()}}const Bs=["function getPoolId() view returns (bytes32)","function getSwapFeePercentage() view returns (uint256)","function getProtocolFeesCollector() view returns (address)","function inRecoveryMode() view returns (bool)"];function Fs(e){return Math.round(Date.now()/1e3)-e<86400}class Ns{constructor(e,t){this.veBalAddress=e,this.multicall=t}async getLockInfo(e){if(!this.veBalAddress)throw new Error("veBal address must be defined");const t=new is(this.multicall,[...Vt.abi]);t.call("locked",this.veBalAddress,"locked",[e]),t.call("epoch",this.veBalAddress,"epoch"),t.call("totalSupply",this.veBalAddress,"totalSupply()");const n=await t.execute();return this.formatLockInfo(n)}formatLockInfo(e){const[t,n]=e.locked,a=t.gt(0),o=1e3*n.toNumber();const i=a&&Date.now()>o;return{lockedEndDate:o,lockedAmount:kn(t),totalSupply:kn(e.totalSupply),epoch:kn(e.epoch,0),hasExistingLock:a,isExpired:i}}}class Ds{constructor(e,t){if(!e.veBalProxy)throw new Error("veBalProxy address must be defined");this.instance=qt.connect(e.veBalProxy,t)}async getAdjustedBalance(e){return kn(await this.instance.adjustedBalanceOf(e))}}class Ls{constructor(e,t){this.getLiquidityGauge=gt.connect,this.contractAddresses="number"==typeof e?ca[e].addresses.contracts:e;const n=At.connect(this.contractAddresses.vault,t),a=Ne.connect(this.contractAddresses.balancerHelpers,t);let o;this.contractAddresses.lidoRelayer&&(o=ft.connect(this.contractAddresses.lidoRelayer,t));const i=wt.connect(this.contractAddresses.multicall,t),s=qe.connect(this.contractAddresses.balancerRelayer,t);let r,p,l,d,u,c,y,m,b,f;this.contractAddresses.veBal&&(r=new Ns(this.contractAddresses.veBal,i)),this.contractAddresses.veBalProxy&&(p=new Ds(this.contractAddresses,t)),this.contractAddresses.gaugeClaimHelper&&(l=dt.connect(this.contractAddresses.gaugeClaimHelper,t)),this.contractAddresses.composableStablePoolFactory&&(d=je.connect(this.contractAddresses.composableStablePoolFactory,t)),this.contractAddresses.weightedPoolFactory&&(u=Ct.connect(this.contractAddresses.weightedPoolFactory,t)),this.contractAddresses.aaveLinearPoolFactory&&(c=Ce.connect(this.contractAddresses.aaveLinearPoolFactory,t)),this.contractAddresses.erc4626LinearPoolFactory&&(y=nt.connect(this.contractAddresses.erc4626LinearPoolFactory,t)),this.contractAddresses.eulerLinearPoolFactory&&(m=st.connect(this.contractAddresses.eulerLinearPoolFactory,t)),this.contractAddresses.gearboxLinearPoolFactory&&(b=mt.connect(this.contractAddresses.gearboxLinearPoolFactory,t)),this.contractAddresses.yearnLinearPoolFactory&&(f=Nt.connect(this.contractAddresses.yearnLinearPoolFactory,t)),this.instances={aaveLinearPoolFactory:c,balancerHelpers:a,BasePool:this.getBasePool,composableStablePoolFactory:d,ERC20:this.getErc20,erc4626LinearPoolFactory:y,eulerLinearPoolFactory:m,gaugeClaimHelper:l,gearboxLinearPoolFactory:b,liquidityGauge:this.getLiquidityGauge,lidoRelayer:o,multicall:i,relayer:s,veBal:r,veBalProxy:p,weightedPoolFactory:u,yearnLinearPoolFactory:f,vault:n}}get contracts(){return this.instances}getErc20(e,t){return Ze.connect(e,t)}getBasePool(e,t){return((e,t)=>new u(e,Bs,t))(e,t)}}class Us{constructor(e,t){this.tokenPrices=e,this.tokenHistoricalPrices=t}async calcImpLoss(e,t){if(1e3*e>=Date.now())throw console.error(`[ImpermanentLossService][calcImpLoss]Error: ${ba.getMessage(ma.TIMESTAMP_IN_THE_FUTURE)}`),new ba(ma.TIMESTAMP_IN_THE_FUTURE);const n=await this.prepareData(e,t),a=this.getPoolValueDelta(n),o=this.getHoldValueDelta(n);return this.calculateImpermanentLoss(a,o)}calculateImpermanentLoss(e,t){return Math.floor(100*Math.abs(e/t-1)*100)/100}getPoolValueDelta(e){return e.reduce(((e,t)=>e*Math.pow(Math.abs(t.priceDelta+1),t.weight)),1)}getHoldValueDelta(e){return e.reduce(((e,t)=>e+Math.abs(t.priceDelta+1)*t.weight),0)}async prepareData(e,t){const n=t.tokens.filter((e=>e.address!==t.address)),a=this.getWeights(n),o=n.map((e=>e.address)),i=await this.getEntryPrices(e,o),s=await this.getExitPrices(n);return this.getAssets(n,s,i,a)}getAssets(e,t,n,a){return e.map(((e,o)=>({priceDelta:this.getDelta(n[e.address],t[e.address]),weight:a[o]})))}getDelta(e,t){if(0===e)throw console.error(`[ImpermanentLossService][getDelta]Error: ${ba.getMessage(ma.ILLEGAL_PARAMETER)}: entry price is 0`),new ba(ma.ILLEGAL_PARAMETER);return(t-e)/e}getWeights(e){const t=e.every((e=>!e.weight)),n=Math.round(1/e.length*100)/100,a=t?e.map((()=>n)):e.map((e=>{var t;return Number(null!==(t=e.weight)&&void 0!==t?t:0)}));if(a.some((e=>0===e)))throw console.error(`[ImpermanentLossService][getWeights]Error: ${ba.getMessage(ma.MISSING_WEIGHT)}`),new ba(ma.MISSING_WEIGHT);return a}async getExitPrices(e){var t;const n=await Promise.all(e.map((e=>this.tokenPrices.find(e.address)))).catch((()=>[]));if(!n.length||n.some((e=>void 0===(null==e?void 0:e.usd))))throw console.error(`[ImpermanentLossService][getExitPrices]Error: ${ba.getMessage(ma.MISSING_PRICE_RATE)}`),new ba(ma.MISSING_PRICE_RATE);const a=e.map(((e,t)=>({...e,price:n[t]}))),o={};for(const e of a)(null===(t=e.price)||void 0===t?void 0:t.usd)&&(o[e.address]=+e.price.usd);return o}async getEntryPrices(e,t){const n={};for(const a of t){const t=await this.tokenHistoricalPrices.findBy(a,e).catch((e=>{Ae.getInstance().warn(`[ImpermanentLossService][getEntryPrices]Error: ${e.message}`)}));if(!(null==t?void 0:t.usd)){throw Ae.getInstance().warn(`[ImpermanentLossService][getEntryPrices]Error: ${ba.getMessage(ma.MISSING_PRICE_RATE)}`),new ba(ma.MISSING_PRICE_RATE)}n[a]=+t.usd}return n}}const Vs=145e3,Gs=1648465251,qs=31536e3,Ws=2**(1/4),$s=(e=Math.round((new Date).getTime()/1e3))=>{const t=Math.floor((e-Gs)/qs);return Vs*Ws**-t},Hs=e=>365*(Vs*Ws**-e/7);var Xs=Object.freeze({__proto__:null,INITIAL_RATE:Vs,START_EPOCH_TIME:Gs,weekly:$s,total:Hs,between:(e,t)=>{if(e<Gs)throw"start timestamp before emission schedule deployment";if(t<e)throw"cannot finish before starting";let n=0;const a=Math.floor((e-Gs)/qs),o=Math.floor((t-Gs)/qs);for(let e=a;e<=o;e++)n+=Hs(e);const i=Gs+qs*(a+1)-e,s=t-(Gs+qs*o);return n-=Hs(a)*(qs-i)/qs,n-=Hs(o)*(qs-s)/qs,n}});class Ys{constructor(e,t){this.repository=e,this.tokenPrices=t}async data(e=Date.now()){const t=await this.repository.multicallData(e),n=await this.tokenPrices.find(t.balAddress);if(!n||!n.usd)throw"No BAL USD price found";return{lastWeekBalRevenue:t.balAmount*parseFloat(n.usd),lastWeekBBAUsdRevenue:t.bbAUsdAmount*t.bbAUsdPrice,veBalSupply:t.veBalSupply}}}class js{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapFee?(null==t?void 0:t.totalSwapFee)?parseFloat(e.totalSwapFee)-parseFloat(t.totalSwapFee):e.createTime&&Fs(e.createTime)?parseFloat(e.totalSwapFee):0:0}}class Ks{constructor(e,t,n,a,o,i,s,r){this.pools=e,this.tokenPrices=t,this.tokenMeta=n,this.tokenYields=a,this.feeCollector=o,this.yesterdaysPools=i,this.liquidityGauges=s,this.feeDistributor=r}async swapFees(e){const t=await this.last24hFees(e),n=await this.totalLiquidity(e);if(!t||!n)return 0;const a=t*(1-await this.protocolSwapFeePercentage(e))/parseFloat(n)*1e4;return Math.round(365*a)}async tokenAprs(e){if(!e.tokens)return{total:0,breakdown:{}};const t=await this.totalLiquidity(e),n=e.tokens.filter((t=>t.address!==e.address)),a=await Promise.all(n.map((async t=>{let n=0;const a=await this.tokenYields.find(t.address);if(a)n="MetaStable"===e.poolType?a*(1-await this.protocolSwapFeePercentage(e)):"ComposableStable"===e.poolType||"Weighted"===e.poolType&&e.poolTypeVersion>=2?t.isExemptFromYieldProtocolFee?a:a*(1-parseFloat(e.protocolYieldFeeCache||"0.5")):a;else{const a=await this.pools.findBy("address",t.address);if(a){const o=await this.swapFees(a);let i=(await this.tokenAprs(a)).total;("ComposableStable"===e.poolType||"Weighted"===e.poolType&&2===e.poolTypeVersion)&&(t.isExemptFromYieldProtocolFee||(i*=1-parseFloat(e.protocolYieldFeeCache||"0.5"))),n=o+i}}return n}))),o=async e=>{var n,a,o,i,s;let r;if(e.weight)return parseFloat(e.weight);if(null===(a=null===(n=e.token)||void 0===n?void 0:n.pool)||void 0===a?void 0:a.poolType){const t=await this.pools.findBy("address",e.address);t&&(r=(await this.bptPrice(t)).toString())}else r=(null===(o=e.price)||void 0===o?void 0:o.usd)||(null===(i=await this.tokenPrices.find(e.address))||void 0===i?void 0:i.usd)||(null===(s=e.token)||void 0===s?void 0:s.latestUSDPrice);if(r){return parseFloat(e.balance)*parseFloat(r)/parseFloat(t)}throw`No price for ${e.address}`},i=await Promise.all(n.map((async(e,t)=>{if(0===a[t])return 0;try{const n=await o(e);return Math.round(a[t]*n)}catch(e){return Ae.getInstance().error(e),0}}))),s=i.reduce(((e,t)=>e+t),0);return{total:s,breakdown:P(x(n.map((e=>e.address)),i),E)}}async stakingApr(e,t=1){if(!this.liquidityGauges)return 0;const n=await this.liquidityGauges.findBy("poolId",e.id);if(!n||1==e.chainId&&0===n.workingSupply||e.chainId>1&&0===n.totalSupply||e.chainId>1&&0===n.balInflationRate)return 0;const a=ca[e.chainId].addresses.tokens.bal;if(!a)return 0;const[o,i]=await Promise.all([this.tokenPrices.find(a),this.bptPrice(e)]);if(!(null==o?void 0:o.usd))throw"Missing BAL price";if(n.balInflationRate){const e=86400*n.balInflationRate*365*parseFloat(o.usd)/(n.totalSupply*i);return Math.round(1e4*t*e)}if(e.chainId>1){if(!n.rewardTokens)return 0;const e=a&&n.rewardTokens[a];if(e){const t=await this.rewardTokenApr(a,e),o=n.totalSupply*i,s=t.value/o;return Math.round(1e4*s)}return 0}const s=parseFloat(o.usd),r=Math.round((new Date).getTime()/1e3),p=$s(r)/7*365*n.relativeWeight*s,l=(n.workingSupply+.4)/.4*i;return Math.round(1e4*t*p/l)}async rewardAprs(e){if(!this.liquidityGauges)return{total:0,breakdown:{}};const t=await this.liquidityGauges.findBy("poolId",e.id);if(!t||!t.rewardTokens||Object.keys(t.rewardTokens).length<1)return{total:0,breakdown:{}};const n=ca[e.chainId].addresses.tokens.bal,a=Object.keys(t.rewardTokens).filter((e=>e!=n)).map((async e=>{const n=t.rewardTokens[e];return this.rewardTokenApr(e,n)})),o=await this.bptPrice(e),i=t.totalSupply*o;if(0==i)return{total:0,breakdown:{}};const s={};let r=0;for await(const e of Object.values(a)){const t=e.value/i,n=Math.round(1e4*t);r+=n,s[e.address]=n}return{total:r,breakdown:s}}async protocolApr(e){if("0x5c6ee304399dbdb9c8ef030ab642b10820db8f56000200000000000000000014"!=e.id||!this.feeDistributor)return 0;const t=new Ys(this.feeDistributor,this.tokenPrices),{lastWeekBalRevenue:n,lastWeekBBAUsdRevenue:a,veBalSupply:o}=await t.data(),i=await this.bptPrice(e);if(!i)throw"bptPrice for veBal pool missing";const s=(n+a)/7;return Math.round(365*s*1e4/(i*o))}async apr(e){const[t,n,a,o,i,s]=await Promise.all([this.swapFees(e),this.tokenAprs(e),this.stakingApr(e),this.stakingApr(e,2.5),this.rewardAprs(e),this.protocolApr(e)]);return{swapFees:t,tokenAprs:n,stakingApr:{min:a,max:o},rewardAprs:i,protocolApr:s,min:t+n.total+i.total+a,max:t+n.total+i.total+s+o}}async last24hFees(e){return new js(this.yesterdaysPools).last24h(e)}async totalLiquidity(e){try{const t=new po(this.pools,this.tokenPrices);return await t.getLiquidity(e)}catch(t){return Ae.getInstance().warn("Liquidity calculcation failed, falling back to subgraph"),e.totalLiquidity}}async bptPrice(e){return parseFloat(await this.totalLiquidity(e))/parseFloat(e.totalShares)}async protocolSwapFeePercentage(e){let t=0;return t="ComposableStable"==e.poolType||"Weighted"==e.poolType&&2==e.poolTypeVersion?0:e.protocolSwapFeeCache?parseFloat(e.protocolSwapFeeCache):await this.feeCollector.find("")||0,t}async rewardTokenApr(e,t){if(t.period_finish.toNumber()<Date.now()/1e3)return{address:e,value:0};{const n=t.rate.mul(86400).mul(365),a=await this.tokenPrices.find(e);if(a&&a.usd){let o=18;if(t.decimals)o=t.decimals;else{const t=await this.tokenMeta.find(e);o=(null==t?void 0:t.decimals)||18}return{address:e,value:parseFloat(kn(n,o))*parseFloat(a.usd)}}throw`No USD price for ${e}`}}}const Js=Object.values(Se),zs=new Map;Js.forEach((e=>{e.includes("Linear")&&Js.includes(e)&&zs.set(e,"batchSwap")})),zs.set(Se.Element,"batchSwap"),zs.set(Se.Investment,"joinPool"),zs.set(Se.LiquidityBootstrapping,"joinPool"),zs.set(Se.MetaStable,"joinPool"),zs.set(Se.Stable,"joinPool"),zs.set(Se.StablePhantom,"batchSwap"),zs.set(Se.Weighted,"joinPool"),zs.set(Se.ComposableStable,"joinPool");const Zs=new Map;Js.forEach((e=>{e.includes("Linear")&&Js.includes(e)&&Zs.set(e,"batchSwap")})),Zs.set(Se.Element,"batchSwap"),Zs.set(Se.Investment,"exitPool"),Zs.set(Se.LiquidityBootstrapping,"exitPool"),Zs.set(Se.MetaStable,"exitPool"),Zs.set(Se.Stable,"exitPool"),Zs.set(Se.StablePhantom,"batchSwap"),Zs.set(Se.Weighted,"exitPool"),Zs.set(Se.ComposableStable,"exitPool");class Qs{constructor(e){this.pools=e,this.getGraphNodes=async(e,t,n)=>{if(!await this.pools.find(t))throw new ba(ma.POOL_DOESNT_EXIST);const a=await this.buildGraphFromRootPool(t,n);if(a.id!==t)throw new Error("Error creating graph nodes");return e?Qs.orderByBfs(a).reverse():Qs.orderByBfs(a)}}async buildGraphFromRootPool(e,t){const a=await this.pools.find(e);if(!a)throw new ba(ma.POOL_DOESNT_EXIST);return(await this.buildGraphFromPool(a.address,0,void 0,n,t))[0]}getTokenTotal(e){const t=e.tokensList.indexOf(e.address);let n=a;const{balancesEvm:o}=yn(e);return o.forEach(((e,a)=>{t!==a&&(n=n.add(e))})),n}async buildGraphFromPool(e,t,a,o,i){var s;const l=await this.pools.findBy("address",e);if(!l){if(a){const n=await this.pools.findBy("address",a.address),i=n.tokensList.indexOf(e),r=null!==(s=n.tokens[i].decimals)&&void 0!==s?s:18,{balancesEvm:p}=yn(n);return Qs.createInputTokenNode(t,e,r,a,o,p[i].toString())}throw new ba(ma.POOL_DOESNT_EXIST)}const d=zs.get(l.poolType),u=Zs.get(l.poolType);if(!d||!u)throw new ba(ma.UNSUPPORTED_POOL_TYPE);const c=this.getTokenTotal(l),{spotPriceCalculator:y}=ro.from(l.poolType),m={};let b=18;l.tokens.forEach((e=>{if(Jn(e.address,l.address))return void(b=e.decimals?e.decimals:18);const t=y.calcPoolSpotPrice(e.address,l.address,l);m[e.address]=t}));let f={address:l.address,id:l.id,type:l.poolType,joinAction:d,exitAction:u,isProportionalExit:!1,children:[],marked:!1,index:t.toString(),parent:a,proportionOfParent:o,isLeaf:!1,spotPrices:m,decimals:b,balance:l.totalShares,priceRate:n.toString()};if(this.updateNodeIfProportionalExit(l,f),t++,l.poolType.toString().includes("Linear"))[f,t]=this.createLinearNodeChildren(f,t,l,i);else{const{balancesEvm:e}=yn(l);for(let n=0;n<l.tokens.length;n++){if(Jn(l.tokens[n].address,l.address))continue;let a;if("Weighted"===l.poolType){const e=l.tokens[n].weight;a=p(e,18)}else a=r.from(e[n]).mul(1e18.toString()).div(c);const s=a.mul(o).div(1e18.toString()),d=await this.buildGraphFromPool(l.tokens[n].address,t,f,s,i);t=d[1],d[0]&&f.children.push(d[0])}}return[f,t]}updateNodeIfProportionalExit(e,t){(e.poolType===Se.Weighted||e.poolType===Se.ComposableStable&&e.poolTypeVersion>2)&&(t.isProportionalExit=!0)}createLinearNodeChildren(e,t,n,a){var o;if(void 0===n.mainIndex)throw new Error("Issue With Linear Pool");if(a.map((e=>e.toLowerCase())).includes(n.tokensList[n.mainIndex].toLowerCase())){const a=this.createWrappedTokenNode(n,t,e,e.proportionOfParent);return e.children.push(a[0]),[e,a[1]]}{const{balancesEvm:a}=yn(n),i=null!==(o=n.tokens[n.mainIndex].decimals)&&void 0!==o?o:18,s=Qs.createInputTokenNode(t,n.tokensList[n.mainIndex],i,e,e.proportionOfParent,a[n.mainIndex].toString());return e.children.push(s[0]),[e,t=s[1]]}}createWrappedTokenNode(e,t,n,a){var o;if(void 0===e.wrappedIndex||void 0===e.mainIndex)throw new Error("Issue With Linear Pool");const{balancesEvm:i,upScaledBalances:s,scalingFactorsRaw:r,priceRates:p}=yn(e),l={type:"WrappedToken",address:e.tokensList[e.wrappedIndex],id:"N/A",children:[],marked:!1,joinAction:"wrap",exitAction:"unwrap",isProportionalExit:!1,index:t.toString(),parent:n,proportionOfParent:a,isLeaf:!1,spotPrices:{},decimals:18,balance:i[e.wrappedIndex].toString(),priceRate:p[e.wrappedIndex].toString()};t++;const d=null!==(o=e.tokens[e.mainIndex].decimals)&&void 0!==o?o:18,u=pn(s[e.wrappedIndex],r[e.mainIndex]).toString(),c=Qs.createInputTokenNode(t,e.tokensList[e.mainIndex],d,l,a,u);return l.children=[c[0]],[l,t=c[1]]}static createInputTokenNode(e,t,a,o,i,s){return[{address:t,id:"N/A",type:"Input",children:[],marked:!1,joinAction:"input",exitAction:"output",isProportionalExit:!1,index:e.toString(),parent:o,proportionOfParent:i,isLeaf:!0,spotPrices:{},decimals:a,balance:s,priceRate:n.toString()},e+1]}static orderByBfs(e){const t=[],n=[];for(e.marked=!0,t.push(e);t.length>0;){const e=t.shift();e&&n.push(e),null==e||e.children.forEach((e=>{e.marked||(e.marked=!0,t.push(e))}))}return n}static getLeafAddresses(e){return e.filter((e=>e.isLeaf)).map((e=>e.address))}static isProportionalPools(e){return e.every((e=>"exitPool"!==e.exitAction||e.isProportionalExit))}}class er{constructor(){}}er.joinInit=t=>e.decode(["uint256","uint256[]"],t),er.joinExactTokensInForBPTOut=t=>e.decode(["uint256","uint256[]","uint256"],t),er.joinTokenInForExactBPTOut=t=>e.decode(["uint256","uint256","uint256"],t),er.joinAllTokensInForExactBPTOut=t=>e.decode(["uint256","uint256"],t),er.exitExactBPTInForOneTokenOut=t=>e.decode(["uint256","uint256","uint256"],t),er.exitExactBPTInForTokensOut=t=>e.decode(["uint256","uint256"],t),er.exitBPTInForExactTokensOut=t=>e.decode(["uint256","uint256[]","uint256"],t);class tr{constructor(e){this.relayerModel=e}joinKind(t){const n=e.decode(["uint256"],t)[0];if(!n)throw new Error("No exit kind.");return n.toNumber()}decodeJoinData(e,t){if(t===z.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT){return er.joinAllTokensInForExactBPTOut(e).toString()}if(t===z.EXACT_TOKENS_IN_FOR_BPT_OUT){const[,t]=er.joinExactTokensInForBPTOut(e);return t}if(t===z.TOKEN_IN_FOR_EXACT_BPT_OUT){const[,t,n]=er.joinTokenInForExactBPTOut(e);return[t.toString(),n]}throw new Error("Non supported join data")}allTokensInForExactBPTOut(){throw new Error("joinAllTokensInForExactBPTOut not supported")}joinExactTokensInForBPTOut(e,t){const n=this.decodeJoinData(e,z.EXACT_TOKENS_IN_FOR_BPT_OUT),a=this.relayerModel.doChainedRefReplacements(n),o=t._calcBptOutGivenExactTokensIn(a.map((e=>r.from(e))));if("StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType){const e=t.tokens.find((e=>Jn(e.address,t.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const n=p(e.balance.toString(),e.decimals);t.updateTokenBalanceForPool(t.address,n.sub(o))}else t.updateTokenBalanceForPool(t.address,t.totalShares.add(o));const i=t.tokens.filter((e=>!Jn(e.address,t.address)));return a.forEach(((e,n)=>{const a=p(i[n].balance.toString(),i[n].decimals);t.updateTokenBalanceForPool(i[n].address,a.add(e))})),[o.toString(),i.map((e=>e.address)),a]}joinTokenInForExactBPTOut(e,t){const[n,a]=this.decodeJoinData(e,z.TOKEN_IN_FOR_EXACT_BPT_OUT),o=this.relayerModel.doChainedRefReplacement(n),i=t.parsePoolPairData(t.tokensList[Number(a)],t.address),s=l(o,18),r=t._tokenInForExactTokenOut(i,V(s.toString())).dp(i.decimalsIn),d=p(r.toString(),i.decimalsIn);return t.updateTokenBalanceForPool(i.tokenIn,i.balanceIn.add(d)),t.updateTokenBalanceForPool(i.tokenOut,i.balanceOut.add(o)),[d.toString(),i.tokenIn,d.toString()]}async doJoinPool(e,t){const n=t[e.poolId],o=this.joinKind(e.encodedUserData);let i="0",s=[],r=[];if(o===z.ALL_TOKENS_IN_FOR_EXACT_BPT_OUT)i=this.allTokensInForExactBPTOut();else if(o===z.EXACT_TOKENS_IN_FOR_BPT_OUT)[i,s,r]=this.joinExactTokensInForBPTOut(e.encodedUserData,n);else{if(o!==z.TOKEN_IN_FOR_EXACT_BPT_OUT)throw new Error("Exit type not implemented");{let t,a;[i,t,a]=this.joinTokenInForExactBPTOut(e.encodedUserData,n),s.push(t),r.push(a)}}return s.push(n.address),r.push(a.sub(i).toString()),e.outputReference&&Ms.isChainedReference(e.outputReference)&&this.relayerModel.setChainedReferenceValue(e.outputReference,i),[s,r]}}class nr{constructor(e){this.relayerModel=e}exitKind(t,n){const a=e.decode(["uint256"],n)[0];if(!a)throw new Error("No exit kind.");return"ComposableStable"===t?a.toNumber()===se.BPT_IN_FOR_EXACT_TOKENS_OUT?Z.BPT_IN_FOR_EXACT_TOKENS_OUT:a.toNumber()===se.EXACT_BPT_IN_FOR_ALL_TOKENS_OUT?Z.EXACT_BPT_IN_FOR_TOKENS_OUT:Z.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT:a.toNumber()}decodeExitData(e,t){if(t===Z.BPT_IN_FOR_EXACT_TOKENS_OUT){const[,t,n]=er.exitBPTInForExactTokensOut(e);return[t.toString(),n.toString()]}if(t===Z.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT){const[,t,n]=er.exitExactBPTInForOneTokenOut(e);return[t.toString(),n.toString()]}if(t===Z.EXACT_BPT_IN_FOR_TOKENS_OUT){const[,t]=er.exitExactBPTInForTokensOut(e);return[t.toString()]}throw new Error("Non supported exit data")}exactBptInForTokensOut(e,t){const[n]=this.decodeExitData(e,Z.EXACT_BPT_IN_FOR_TOKENS_OUT),a=this.relayerModel.doChainedRefReplacement(n),o=t._calcTokensOutGivenExactBptIn(r.from(a)).map((e=>e.toString()));if("StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType){const e=t.tokens.find((e=>Jn(e.address,t.address)));if(!e)throw new Error("Pool does not contain BPT as a token");const n=p(e.balance.toString(),e.decimals);t.updateTokenBalanceForPool(t.address,n.add(a))}else t.updateTokenBalanceForPool(t.address,t.totalShares.sub(a));const i=t.tokens.filter((e=>!Jn(e.address,t.address)));return o.forEach(((e,n)=>{const a=p(i[n].balance.toString(),i[n].decimals);t.updateTokenBalanceForPool(i[n].address,a.sub(e))})),[a,i.map((e=>e.address)),o]}exactBptInForOneTokenOut(e,t){const[n,a]=this.decodeExitData(e,Z.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT),o=this.relayerModel.doChainedRefReplacement(n),i=t.parsePoolPairData(t.address,t.tokensList[Number(a)]),s=l(o,i.decimalsIn),d=t._exactTokenInForTokenOut(i,V(s)).dp(i.decimalsOut),u=p(d.toString(),i.decimalsOut),c=function(e,t){const n=[];return t.forEach((t=>{const a=e.tokens.findIndex((e=>Jn(e.address,t)));if(a<0)throw"Pool does not contain tokenIn";n.push(p(e.tokens[a].balance,e.tokens[a].decimals).toString())})),n}(t,[t.address,i.tokenOut]);t.updateTokenBalanceForPool(i.tokenOut,r.from(c[1]).sub(u)),"StablePhantom"==t.SubgraphType||"ComposableStable"==t.SubgraphType?t.updateTokenBalanceForPool(t.address,r.from(c[0]).add(o)):t.updateTokenBalanceForPool(t.address,t.totalShares.sub(o));const y=t.tokensList.filter((e=>!Jn(e,t.address))),m=new Array(y.length).fill("0");return m[Number(a)]=u.toString(),[o,y,m]}async doExitPool(e,t){const n=t[e.poolId],o=this.exitKind(n.SubgraphType,e.encodedUserData);let i,s=[],r=[];const p=[],l=[];if(o===Z.EXACT_BPT_IN_FOR_TOKENS_OUT)[i,r,s]=this.exactBptInForTokensOut(e.encodedUserData,n);else{if(o!==Z.EXACT_BPT_IN_FOR_ONE_TOKEN_OUT)throw new Error("Exit type not implemented");[i,r,s]=this.exactBptInForOneTokenOut(e.encodedUserData,n)}for(let t=0;t<e.outputReferences.length;t++){const a=n.tokensList[e.outputReferences[t].index],o=r.indexOf(a);if(-1===o)throw new Error("Token out not found");this.relayerModel.setChainedReferenceValue(e.outputReferences[t].key.toString(),s[o])}return p.push(n.address,...r),l.push(i,...s.map((e=>a.sub(e).toString()))),[p,l]}}class ar{constructor(e){this.relayerModel=e}async doSingleSwap(e,t){const n=this.relayerModel.doChainedRefReplacement(e.request.amount.toString()),o=t[e.request.poolId],[,i]=this.doSwap(e.request.assetIn,e.request.assetOut,o,e.request.kind,n),s=a.sub(i);if(!e.outputReference)throw new Error("Missing outputReference");return this.relayerModel.setChainedReferenceValue(e.outputReference.toString(),s.abs().toString()),[s.toString(),n]}async doBatchSwap(e,t){const n=e.assets,o=new Array(n.length).fill(a);let i;for(let t=0;t<e.swaps.length;++t){const n=e.swaps[t].amount;Ms.isChainedReference(n)&&(e.swaps[t].amount=this.relayerModel.getChainedReferenceValue(n))}e.swaps.forEach((a=>{const s=n[a.assetInIndex],r=n[a.assetOutIndex],p=t[a.poolId];let l=a.amount;"0"===l&&(l=i);const[d,u]=this.doSwap(s,r,p,e.swapType,l);i=e.swapType===pa.SwapExactIn?u.toString():d.toString(),o[a.assetInIndex]=o[a.assetInIndex].add(d),o[a.assetOutIndex]=o[a.assetOutIndex].sub(u)}));for(let t=0;t<e.outputReferences.length;t++)this.relayerModel.setChainedReferenceValue(e.outputReferences[t].key.toString(),o[e.outputReferences[t].index].abs().toString());return o.map((e=>e.toString()))}doSwap(e,t,n,o,i){const s=n.parsePoolPairData(e,t),d=o===pa.SwapExactIn;let u=d?r.from(i):a,c=d?a:r.from(i);const y=l(u,s.decimalsIn),m=l(c,s.decimalsOut);if(d){const e=n._exactTokenInForTokenOut(s,V(y.toString())).dp(s.decimalsOut);c=p(e.toString(),s.decimalsOut)}else{const e=n._tokenInForExactTokenOut(s,V(m.toString())).dp(s.decimalsIn);u=p(e.toString(),s.decimalsIn)}return n.updateTokenBalanceForPool(s.tokenIn,s.balanceIn.add(u)),n.updateTokenBalanceForPool(s.tokenOut,s.balanceOut.sub(c)),[u,c]}}class or{constructor(e){this.relayerModel=e}async doUnwrap(e,t){const o=t[e.poolId],i=o.tokens[o.wrappedIndex],s=o.tokens[o.mainIndex],r=this.relayerModel.doChainedRefReplacement(e.amount.toString()),l=dn.divDownFixed(dn.mulDownFixed(BigInt(r),p(i.priceRate,18).toBigInt()),n.toBigInt()).toString();this.relayerModel.setChainedReferenceValue(e.outputReference.toString(),l);return[[i.address,s.address],[r,a.sub(l).toString()]]}}class ir{constructor(e){this.relayerModel=e,this.joinModel=new tr(e),this.exitModel=new nr(e),this.swapModel=new ar(e),this.unwrapModel=new or(e)}async doJoin(e,t){return this.joinModel.doJoinPool(e,t)}async doExit(e,t){return this.exitModel.doExitPool(e,t)}async doBatchSwap(e,t){return this.swapModel.doBatchSwap(e,t)}async doSingleSwap(e,t){return this.swapModel.doSingleSwap(e,t)}async doUnwrap(e,t){return this.unwrapModel.doUnwrap(e,t)}}class sr{constructor(){this.chainedRefs={}}setChainedReferenceValue(e,t){this.chainedRefs[e]=t}getChainedReferenceValue(e){return this.chainedRefs[e]}doChainedRefReplacement(e){return Ms.isChainedReference(e.toString())?this.getChainedReferenceValue(e.toString()):e}doChainedRefReplacements(e){return e.map((e=>this.doChainedRefReplacement(e).toString()))}}class rr{constructor(e,t){this.poolDataService=e,this.wrappedNativeAsset=t,this.poolsArray=[],this.poolsDict={}}dataSource(){return this.poolDataService}async all(e=!1){if(e||0===this.poolsArray.length){const e=v(await this.dataSource().getPools());for(const t of e)if(["Weighted","Investment","Stable","LiquidityBootstrapping"].includes(t.poolType)){const e={address:t.address,balance:t.totalShares,decimals:18,priceRate:"1",weight:"0"};t.tokens.push(e),t.tokensList.push(t.address)}this.poolsArray=e}return this.poolsArray}parseToPoolsDict(e){return Object.fromEntries(v(e).filter((e=>e.tokensList.length>0&&"0"!==e.tokens[0].balance)).map((e=>[e.id,this.parseNewPool(e)])).filter((([,e])=>void 0!==e)))}parseNewPool(e){if(!e.swapEnabled)return;let t={};try{if(["Weighted","Investment","LiquidityBootstrapping"].includes(e.poolType)){t=R.fromPool(e,!1)}else if("Stable"===e.poolType){t=A.fromPool(e)}else if("MetaStable"===e.poolType){t=B.fromPool(e)}else if(e.poolType.toString().includes("Linear")){t=F.fromPool(e)}else if("StablePhantom"===e.poolType){t=O.fromPool(e)}else{if("ComposableStable"!==e.poolType){return void Ae.getInstance().warn(`Unknown pool type or type field missing: ${e.poolType} ${e.id}`)}t=G.fromPool(e)}if(!t)throw new Error("Issue with Pool");t.SubgraphType=e.poolType}catch(e){return void console.error("Error parseNewPool")}return t}async poolsDictionary(e=!1){if(e||0===Object.keys(this.poolsDict).length){const t=await this.all(e);this.poolsDict=this.parseToPoolsDict(t)}return this.poolsDict}}var pr,lr;!function(e){e[e.BatchSwap=0]="BatchSwap",e[e.Join=1]="Join",e[e.Exit=2]="Exit",e[e.Swap=3]="Swap",e[e.Unwrap=4]="Unwrap"}(pr||(pr={}));class dr{constructor(e,t){this.poolsSource=new rr(e,t)}updateDeltas(e,t,n){return t.forEach(((t,o)=>{e[t]||(e[t]=a),e[t]=e[t].add(n[o])})),e}async multicall(e,t=!1){const n=new sr,a=new ir(n),o=await this.poolsSource.poolsDictionary(t),i={};for(const t of e){let e=[],n=[];switch(t.actionType){case pr.Join:[e,n]=await a.doJoin(t,o);break;case pr.Exit:[e,n]=await a.doExit(t,o);break;case pr.BatchSwap:e=t.assets,n=await a.doBatchSwap(t,o);break;case pr.Swap:e=[t.request.assetOut,t.request.assetIn],n=await a.doSingleSwap(t,o);break;case pr.Unwrap:[e,n]=await a.doUnwrap(t,o)}this.updateDeltas(i,e,n)}return i}static mapSwapRequest(e){return{actionType:pr.Swap,request:e.request,funds:e.funds,outputReference:e.outputReference}}static mapBatchSwapRequest(e){return{actionType:pr.BatchSwap,swaps:e.swaps,assets:e.assets,funds:e.funds,swapType:e.swapType,outputReferences:e.outputReferences}}static mapJoinPoolRequest(e){return{actionType:pr.Join,poolId:e.poolId,encodedUserData:e.joinPoolRequest.userData,outputReference:e.outputReference}}static mapExitPoolRequest(e){return{actionType:pr.Exit,poolId:e.poolId,encodedUserData:e.exitPoolRequest.userData,outputReferences:e.outputReferences}}static mapUnwrapRequest(e,t,n){return{actionType:pr.Unwrap,poolId:n,amount:e,outputReference:t}}}const ur=qe.createInterface();function cr(e){Ae.getInstance()}class yr{constructor(e,t,n){this.poolGraph=e,this.simulationService=n,this.createCalls=async(e,t,n,a,o)=>{const{multiRequests:i,encodedCalls:s,outputIndexes:r,deltas:p}=this.createActionCalls(e,t,n,a);o&&s.unshift(this.createSetRelayerApproval(o));return{multiRequests:i,encodedCall:ur.encodeFunctionData("multicall",[s]),outputIndexes:o?r.map((e=>e+1)):r,deltas:p}},this.amountsOutByJoinPath=async(e,t,n,o,i,s,p,l)=>{const d=await this.simulationService.simulateGeneralisedJoin(this.relayer,t,n,i,e,o,s,p,l),u=d.reduce(((e,t)=>e.add(r.from(t))),a).toString();return{amountsOut:d,totalAmountOut:u}},this.minAmountsOutByJoinPath=(e,t,n)=>({minAmountsOut:t.map((t=>jn(r.from(t),r.from(e)).toString())),totalMinAmountOut:jn(r.from(n),r.from(e)).toString()}),this.createActionCalls=(e,t,n,a)=>{const o=[],i=[],s=[],r=!a,p={};return e.forEach(((e,l)=>{const d=e[0].isLeaf,u=[];if(e.forEach(((o,s)=>{var c,y;if(o.children.length>0&&0===o.children.filter((e=>this.shouldBeConsidered(e))).length)return void(o.index="0");const m=o.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))?t:this.relayer,b=s===e.length-1,f=null!==(y=d&&(null===(c=o.parent)||void 0===c?void 0:c.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction))))&&void 0!==y&&y,T=b||f?t:this.relayer,h=b&&a?a[l]:"0";switch(o.joinAction){case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:a,amounts:s}=this.createSwap(o,l,h,m,T,n,r);u.push(e),i.push(t),this.updateDeltas(p,a,s)}break;case"joinPool":{const{modelRequest:e,encodedCall:t,assets:a,amounts:s,minBptOut:d}=this.createJoinPool(o,l,h,m,T,n,r);u.push(e),i.push(t),this.updateDeltas(p,[o.address,...a],[d,...s])}break;default:return}})),r){const e=100*l,t=Ms.encodePeekChainedReferenceValue(Ms.toChainedReference(e,!1));i.push(t),s.push(i.indexOf(t))}o.push(u)})),{multiRequests:o,encodedCalls:i,outputIndexes:s,deltas:p}},this.createSetRelayerApproval=e=>Ms.encodeSetRelayerApproval(this.relayer,!0,e),this.createSwap=(e,t,n,o,i,s,p)=>{var l;if(1!==e.children.length)throw new Error("Unsupported swap");const d=e.children[0].address,u=this.getOutputRefValue(t,e.children[0]),c=n,y=s&&!p?this.replaceWrappedNativeAsset([d])[0]:d,m={poolId:e.id,kind:pa.SwapExactIn,assetIn:y,assetOut:e.address,amount:u.value,userData:"0x"},b={sender:o,recipient:i,fromInternalBalance:this.allImmediateChildrenSendToInternal(e),toInternalBalance:this.allSiblingsSendToInternal(e)},f=r.from(this.getOutputRefValue(t,e).value),T=s&&!p?Un([y],[u.value]):a,h={request:m,funds:b,limit:c,deadline:r.from(Math.ceil(Date.now()/1e3)+3600),value:T,outputReference:f},I=Ms.encodeSwap(h);cr(),cr(JSON.stringify(h)),cr(JSON.stringify(null===(l=h.value)||void 0===l?void 0:l.toString()));const g=dr.mapSwapRequest(h),_=e.children.some((e=>"input"===e.joinAction))?u.value:"0",w=null!=e.parent?"0":r.from(n).mul(-1).toString();return{modelRequest:g,encodedCall:I,assets:[e.address,d],amounts:[w,_]}},this.createJoinPool=(e,t,n,o,i,s,r)=>{var p;const l=[],d=[];e.children.forEach((e=>{l.push(e.address),this.shouldBeConsidered(e)?d.push(this.getOutputRefValue(t,e).value):d.push("0")})),e.type===Se.ComposableStable&&(l.push(e.address),d.push("0"));const u=new Xt(this.wrappedNativeAsset),[c,y]=u.sortTokens(l,d);let m=[];const b=c.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());let f;m=-1===b?y:[...y.slice(0,b),...y.slice(b+1)],f=e.type===Se.Weighted?te.joinExactTokensInForBPTOut(m,n):ee.joinExactTokensInForBPTOut(m,n);const T=s&&!r?Un(this.replaceWrappedNativeAsset(c),y):a,h=this.allImmediateChildrenSendToInternal(e),I=Ms.formatJoinPoolInput({poolId:e.id,kind:0,sender:o,recipient:i,value:T,outputReference:this.getOutputRefValue(t,e).value,joinPoolRequest:{},assets:s&&!r?this.replaceWrappedNativeAsset(c):c,maxAmountsIn:y,userData:f,fromInternalBalance:h}),g=Ms.encodeJoinPool(I);cr(),cr(JSON.stringify(I)),cr(JSON.stringify(null===(p=I.value)||void 0===p?void 0:p.toString()));const _=dr.mapJoinPoolRequest(I),w=y.map((e=>Ms.isChainedReference(e)?"0":e)),P=Ms.isChainedReference(n)?"0":n,x=e.children.filter((e=>this.shouldBeConsidered(e))).some((e=>"input"===e.joinAction));return{modelRequest:_,encodedCall:g,assets:x?c:[],amounts:x?w:[],minBptOut:null!=e.parent?a.toString():a.sub(P).toString()}},this.getOutputRefValue=(e,t)=>"input"===t.joinAction?{value:t.index,isRef:!1}:"0"===t.index&&t.parent?{value:"0",isRef:!0}:{value:Ms.toChainedReference(r.from(t.index).add(100*e)).toString(),isRef:!0},this.shouldBeConsidered=e=>"0"!==e.index,this.sendsToInternalBalance=e=>"input"!==e.joinAction&&"joinPool"!==e.joinAction,this.allImmediateChildrenSendToInternal=e=>{const t=e.children.filter((e=>this.shouldBeConsidered(e)));return 0!==t.length&&t.filter((e=>this.sendsToInternalBalance(e))).length===t.length},this.allSiblingsSendToInternal=e=>{if(!e.parent)return!1;const t=e.parent.children.filter((e=>this.shouldBeConsidered(e)));return t.filter((e=>this.sendsToInternalBalance(e))).length===t.length},this.replaceWrappedNativeAsset=e=>{const t=e.findIndex((e=>e.toLowerCase()===this.wrappedNativeAsset.toLowerCase()));return Zn(e,t,o)};const{tokens:i,contracts:s}=ya(t.chainId);this.relayer=s.balancerRelayer,this.wrappedNativeAsset=i.wrappedNativeAsset}checkInputs(e,t){if(0===e.length)throw new ba(ma.MISSING_TOKENS);if(t.every((e=>"0"===e)))throw new ba(ma.JOIN_WITH_ZERO_AMOUNT);if(e.length!=t.length)throw new ba(ma.INPUT_LENGTH_MISMATCH);if(e.some((e=>e===o))&&e.some((e=>e.toLowerCase()===this.wrappedNativeAsset.toLowerCase())))throw new ba(ma.INPUT_TOKEN_INVALID)}async joinPool(e,t,n,i,s,r,p,l){this.checkInputs(t,n);const d=await this.poolGraph.getGraphNodes(!0,e,[]),u=t.findIndex((e=>e===o)),c=-1!==u,y=Zn(t,u,this.wrappedNativeAsset.toLowerCase()),m=yr.getJoinPaths(d,y,n),b=yr.totalBptZeroPriceImpact(m);cr();const{multiRequests:f,encodedCall:T,outputIndexes:h}=await this.createCalls(m,i,c,void 0,l),{amountsOut:I,totalAmountOut:g}=await this.amountsOutByJoinPath(i,f,T,y,h,r,p,"0"),{minAmountsOut:_,totalMinAmountOut:w}=this.minAmountsOutByJoinPath(s,I,g),P=fa(BigInt(g),b.toBigInt(),!0).toString();cr();const{encodedCall:x,deltas:E}=await this.createCalls(m,i,c,_,l),v=c?E[this.wrappedNativeAsset.toLowerCase()]:a;return cr(v.toString()),this.assertDeltas(e,E,y,n,w),{to:this.relayer,encodedCall:x,expectedOut:g,minOut:w,priceImpact:P,value:v}}assertDeltas(e,t,n,a,o){var i;const s=ce(e);if(t[s.toLowerCase()].add(o).abs().gt(3))throw console.error("join assertDeltas, bptOut: ",s,o,null===(i=t[s.toLowerCase()])||void 0===i?void 0:i.toString()),new ba(ma.JOIN_DELTA_AMOUNTS);delete t[s.toLowerCase()],n.forEach(((e,n)=>{var o,i;if(!r.from(a[n]).eq(0)&&(null===(o=t[e.toLowerCase()])||void 0===o?void 0:o.toString())!==a[n])throw console.error("join assertDeltas, tokenIn: ",e,a[n],null===(i=t[e.toLowerCase()])||void 0===i?void 0:i.toString()),new ba(ma.JOIN_DELTA_AMOUNTS);delete t[e.toLowerCase()]}));for(const e in t)if("0"!==t[e].toString())throw console.error("join assertDeltas, non-input token should be 0: ",e,t[e].toString()),new ba(ma.JOIN_DELTA_AMOUNTS)}updateDeltas(e,t,n){return t.forEach(((t,o)=>{const i=t.toLowerCase();e[i]||(e[i]=a),e[i]=e[i].add(n[o])})),e}}lr=yr,yr.getJoinPaths=(e,t,a)=>{const o=[],i=e.filter((e=>t.filter(((e,t)=>r.from(a[t]).gt(0))).map((e=>e.toLowerCase())).includes(e.address.toLowerCase())));i.some((e=>e.isLeaf))&&o.push(e);const s=i.filter((e=>!e.isLeaf));return s.forEach((e=>{const i=a.find(((n,a)=>Jn(t[a],e.address))),p=s.filter((t=>Jn(t.address,e.address))).reduce(((e,t)=>e.add(t.proportionOfParent)),r.from(0)),l=r.from(i).mul(e.proportionOfParent).div(p).toString(),[d]=Qs.createInputTokenNode(0,e.address,e.decimals,e.parent,n,e.balance);d.index=l,d.isLeaf=!1;const u=[d];let c=d.parent,y=d;for(;c;){const e=v(c);e.children=e.children.map((e=>e.address===y.address?y:{...e,index:"0"})),u.push(e),y=e,c=e.parent}o.push(u)})),lr.updateInputAmounts(o,t,a),o},yr.updateInputAmounts=(e,t,n)=>{const a=(e,t)=>{if(e.length>1){const n=e.reduce(((e,t)=>e.add(t.index)),r.from(0)),a=r.from(t).sub(n);e[0].index=a.add(e[0].index).toString()}},o=e.find((e=>e[0].isLeaf));if(o){const e=lr.updateTotalProportions(o);o.forEach((a=>{"input"===a.joinAction&&(a=lr.updateNodeAmount(a,t,n,e))})),t.forEach(((e,t)=>{const i=o.filter((t=>t.isLeaf&&Jn(t.address,e)));a(i,n[t])}))}const i=e.filter((e=>!e[0].isLeaf));i.length>1&&t.forEach(((e,t)=>{const o=i.map((e=>e[0])).filter((t=>Jn(t.address,e)));a(o,n[t])}))},yr.totalBptZeroPriceImpact=e=>{let t=r.from("0");return e.forEach((e=>{if(e[0].isLeaf){e.filter((e=>e.isLeaf)).forEach((e=>{const n=lr.bptOutZeroPiForInputNode(e);t=t.add(n)}))}else{const n=lr.bptOutZeroPiForInputNode(e[0]);t=t.add(n)}})),t},yr.bptOutZeroPiForInputNode=e=>{if("0"===e.index||"input"!==e.joinAction)return BigInt(0);let t=1,n=e.parent,a=e.address;for(;void 0!==n;){if("batchSwap"===n.joinAction||"joinPool"===n.joinAction){const e=n.spotPrices[a.toLowerCase()];t*=parseFloat(e),a=n.address}n=n.parent}const o=p(t.toFixed(18),18),i=on(BigInt(e.decimals)),s=sn(BigInt(e.index),i);return dn.divDownFixed(s,o.toBigInt())},yr.updateTotalProportions=e=>{const t={};return e.forEach((e=>{t[e.address]?t[e.address]=t[e.address].add(e.proportionOfParent):t[e.address]=e.proportionOfParent})),t},yr.updateNodeAmount=(e,t,n,a)=>{const o=t.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());if(-1===o)return e.index="0",e;const i=a[e.address],s=e.proportionOfParent.mul(1e18.toString()).div(i).mul(n[o]).div(1e18.toString());return e.index=s.toString(),e};class mr{constructor(e,t){this.chainId=e,this.simulateMulticall=async(e,t,n,a,o="0")=>{const i={...await this.encodeBalanceAndAllowanceOverrides(n,a),...await this.encodeRelayerApprovalOverride(n,e)};return this.simulateTransaction(e,t,n,i,o)},this.simulateTransaction=async(e,t,n,a,o)=>{const i={...Object.fromEntries(Object.keys(a).map((e=>[e,{storage:a[e].value}]))),[n]:{balance:p("100",18).toHexString()}},s={network_id:this.chainId.toString(),block_number:this.blockNumber,from:n,to:e,input:t,value:o,save_if_fails:!0,simulation_type:"quick",state_objects:i},r=this.tenderlyUrl+"simulate";return(await H.post(r,s,this.opts)).data.transaction.transaction_info.call_trace.output},this.encodeRelayerApprovalOverride=async(e,t)=>{const n={[`${this.vaultAddress}`]:{value:{[`_approvedRelayers[${e}][${t}]`]:(!0).toString()}}};return await this.requestStateOverrides(n)},this.encodeBalanceAndAllowanceOverrides=async(e,t)=>{const n=t.filter((e=>e!==o));if(0===n.length)return{};let a={};n.forEach((t=>a={...a,[`${t}`]:{value:{[`_balances[${e}]`]:s.toString(),[`_allowances[${e}][${this.vaultAddress}]`]:s.toString(),[`balanceOf[${e}]`]:s.toString(),[`allowance[${e}][${this.vaultAddress}]`]:s.toString(),[`balances[${e}]`]:s.toString(),[`allowed[${e}][${this.vaultAddress}]`]:s.toString()}}}));const i=await this.requestStateOverrides(a);if(Object.keys(i).some((e=>2!==Object.keys(i[e].value).length)))throw new Error("Couldn't encode state overrides - states should match the ones in the contracts");return i},this.requestStateOverrides=async e=>{const t=this.tenderlyUrl+"contracts/encode-states",n={networkID:this.chainId.toString(),stateOverrides:e},a=(await H.post(t,n,this.opts)).data.stateOverrides;if(!a||Object.keys(a).length!==Object.keys(e).length)throw new Error("Couldn't encode state overrides - contracts should be verified and whitelisted on Tenderly");return a};const{contracts:n}=ya(this.chainId);this.vaultAddress=n.vault,this.tenderlyUrl=`https://api.tenderly.co/api/v1/account/${t.user}/project/${t.project}/`,this.opts={headers:{"X-Access-Key":t.accessKey}},this.blockNumber=t.blockNumber}}var br;!function(e){e[e.Tenderly=0]="Tenderly",e[e.VaultModel=1]="VaultModel",e[e.Static=2]="Static"}(br||(br={}));class fr{constructor(t,n){this.simulateGeneralisedJoin=async(e,t,n,a,o,i,s,r,p)=>{const l=[];switch(r){case br.Tenderly:{if(!this.tenderlyHelper)throw new Error("Missing Tenderly config");const t=await this.tenderlyHelper.simulateMulticall(e,n,o,i,p);l.push(...this.decodeResult(t,a));break}case br.VaultModel:{const e=await this.simulateRequests(t);l.push(...e);break}case br.Static:{const t=await s.call({to:e,data:n,value:p});try{l.push(...this.decodeResult(t,a))}catch(e){const n=Buffer.from(t.split("x")[1],"hex").toString("utf8");throw new Error(`Transaction reverted with error: ${n}`)}break}default:throw new Error("Simulation type not supported")}return l},this.simulateGeneralisedExit=async(e,t,n,a,o,i,s,r)=>{const p=[];switch(r){case br.Tenderly:{if(!this.tenderlyHelper)throw new Error("Missing Tenderly config");const t=await this.tenderlyHelper.simulateMulticall(e,n,o,[i]);p.push(...this.decodeResult(t,a));break}case br.VaultModel:{const e=await this.simulateRequests(t);p.push(...e);break}case br.Static:{const t=await s.call({to:e,data:n});try{p.push(...this.decodeResult(t,a))}catch(e){const n=Buffer.from(t.split("x")[1],"hex").toString("utf8");throw new Error(`Transaction reverted with error: ${n}`)}break}default:throw new Error("Simulation type not supported")}return p},this.decodeResult=(t,n)=>{const a=e.decode(["bytes[]"],t)[0];return n.map((t=>e.decode(["uint256"],a[t]).toString()))},this.simulateRequests=async e=>{if(void 0===this.vaultModel)throw new Error("Missing Vault Model Config.");const t=[];for(const[n,a]of e.entries()){const e=await this.vaultModel.multicall(a,0===n),o=Object.values(e).filter((e=>e.lt(0)));if(0===o.length)throw new Error("No delta found for token out.");t.push(...o.map((e=>e.mul(-1).toString())))}return t},t.tenderly&&(this.tenderlyHelper=new mr(t.chainId,t.tenderly)),this.vaultModel=n?new dr(n,t.addresses.tokens.wrappedNativeAsset):void 0}}const Tr=qe.createInterface();function hr(e){Ae.getInstance()}class Ir{constructor(e,t,o){this.poolGraph=e,this.simulationService=o,this.amountsOutByExitPath=async(e,t,n,a,o,i,s)=>await this.simulationService.simulateGeneralisedExit(this.relayer,t,n,o,e,a,i,s),this.amountsOutByTokenOut=(e,t,n)=>{const o={};t.forEach(((e,t)=>{var i;return o[e]=(null!==(i=o[e])&&void 0!==i?i:a).add(n[t])}));return e.map((e=>o[e].toString()))},this.minAmountsOut=(e,t,n)=>({minAmountsOutByExitPath:e.map((e=>jn(r.from(e),r.from(n)).toString())),minAmountsOutByTokenOut:t.map((e=>jn(r.from(e),r.from(n)).toString()))}),this.getExitPaths=(e,t)=>{const o=e.map((e=>{const a=[e];for(;a[0].parent;)a.unshift(v(a[0].parent));return a[0].index=a[a.length-1].proportionOfParent.mul(t).div(n).toString(),a})),i=o.reduce(((e,t)=>{const n=t[0].index;return r.from(n).add(e)}),a),s=r.from(t).sub(i);return o[o.length-1][0].index=s.add(o[o.length-1][0].index).toString(),o},this.createUnwrap=(e,t,n,o,i,s)=>{var r,p;const l=Ms.toChainedReference(this.getOutputRef(n,e.index)).toString(),d=Ms.toChainedReference(this.getOutputRef(n,t.index)),u=null===(r=e.parent)||void 0===r?void 0:r.type,c={wrappedToken:e.address,sender:i,recipient:s,amount:l,outputReference:d},y=Ms.encodeUnwrap(c,u);hr(),hr(),hr(JSON.stringify(c));return{modelRequest:dr.mapUnwrapRequest(l,d,null===(p=e.parent)||void 0===p?void 0:p.id),encodedCall:y,assets:[t.address],amounts:[a.sub(o).toString()]}},this.getOutputRef=(e,t)=>100*e+parseInt(t),this.receivesFromInternal=e=>!!e.parent&&("output"!==e.exitAction&&"unwrap"!==e.exitAction&&"exitPool"!==e.exitAction);const{tokens:i,contracts:s}=ya(t.chainId);this.wrappedNativeAsset=i.wrappedNativeAsset,this.relayer=s.balancerRelayer}async getExitInfo(e,t,n,a){hr();const o=await this.getExit(e,t,n,a,[],br.VaultModel);return{tokensOut:o.tokensOut,estimatedAmountsOut:o.expectedAmountsOut,priceImpact:o.priceImpact,tokensToUnwrap:o.tokensToUnwrap}}async buildExitCall(e,t,n,a,o,i,s,r){hr();const p=await this.getExit(e,t,n,o,null!=r?r:[],i,s),{minAmountsOutByExitPath:l,minAmountsOutByTokenOut:d}=this.minAmountsOut(p.expectedAmountsOutByExitPath,p.expectedAmountsOut,a);hr();const{encodedCall:u,deltas:c}=await this.createCalls(p.exitPaths,n,p.isProportional,l,s);return this.assertDeltas(e,c,t,p.tokensOut,d),{to:this.relayer,encodedCall:u,tokensOut:p.tokensOut,expectedAmountsOut:p.expectedAmountsOut,minAmountsOut:d,priceImpact:p.priceImpact}}async getExit(e,t,n,a,o,i,s){const p=await this.poolGraph.getGraphNodes(!1,e,o),l=Qs.isProportionalPools(p);hr();let d=[],u=[],c=[];const y=p.filter((e=>"output"===e.exitAction));if(u=y.map((e=>e.address.toLowerCase())),c=[...new Set(u)].sort(),l){const e=p.map(((e,n)=>(0===n&&(e.index=t),e)));d[0]=e}else d=this.getExitPaths(y,t);const{multiRequests:m,encodedCall:b,outputIndexes:f}=await this.createCalls(d,n,l,void 0,s),T=await this.amountsOutByExitPath(n,m,b,p[0].address,f,a,i),h=y.filter(((e,t)=>r.from(T[t]).gt(e.balance))).map((e=>e.address.toLowerCase()));if(o.some((e=>h.includes(e.toLowerCase()))))throw new Error("Insufficient pool balance to perform generalised exit - try exitting with smaller amounts");if(h.length>0)return await this.getExit(e,t,n,a,[...new Set(h)].sort(),i,s);{const n=this.amountsOutByTokenOut(c,u,T),a=await this.calculatePriceImpact(e,this.poolGraph,c,n,t);return{tokensToUnwrap:o,tokensOut:c,exitPaths:d,isProportional:l,expectedAmountsOut:n,expectedAmountsOutByExitPath:T,priceImpact:a}}}async calculatePriceImpact(e,t,n,a,o){const i=await t.getGraphNodes(!0,e,[]),s=yr.getJoinPaths(i,n,a),r=yr.totalBptZeroPriceImpact(s);return fa(BigInt(o),r.toBigInt(),!1).toString()}assertDeltas(e,t,n,a,o){var i;const s=ce(e);if(t[s.toLowerCase()].sub(n).abs().gt(3))throw console.error("exit assertDeltas, bptIn: ",s,n,null===(i=t[s.toLowerCase()])||void 0===i?void 0:i.toString()),new ba(ma.EXIT_DELTA_AMOUNTS);delete t[s.toLowerCase()],a.forEach(((e,n)=>{var a;if(t[e.toLowerCase()].add(o[n]).abs().gt(1))throw console.error("exit assertDeltas, tokenOut: ",e,o[n],null===(a=t[e.toLowerCase()])||void 0===a?void 0:a.toString()),new ba(ma.EXIT_DELTA_AMOUNTS);delete t[e.toLowerCase()]}));for(const e in t)if("0"!==t[e].toString())throw console.error("exit assertDeltas, non-input token should be 0: ",e,t[e].toString()),new ba(ma.EXIT_DELTA_AMOUNTS)}async createCalls(e,t,n,a,o){const{multiRequests:i,calls:s,outputIndexes:r,deltas:p}=this.createActionCalls(v(e),t,n,a);o&&s.unshift(Ms.encodeSetRelayerApproval(this.relayer,!0,o));return{multiRequests:i,encodedCall:Tr.encodeFunctionData("multicall",[s]),outputIndexes:o?r.map((e=>e+1)):r,deltas:p}}updateDeltas(e,t,n){return t.forEach(((t,o)=>{const i=t.toLowerCase();e[i]||(e[i]=a),e[i]=e[i].add(n[o])})),e}createActionCalls(e,t,a,o){const i=[],s=[],r=[],p=!o,l={},d=(e,n)=>n.children.filter((t=>e.map((e=>e.index)).includes(t.index))).some((e=>"output"===e.exitAction))?t:this.relayer;return e.forEach(((e,u)=>{const c=[],y=e.filter((e=>"output"===e.exitAction));e.forEach((i=>{const m=i.children.find((t=>e.map((e=>e.index)).includes(t.index))),b=((e,n)=>n.parent?d(e,n.parent):t)(e,i),f=d(e,i),T=i.children.filter((t=>e.map((e=>e.index)).includes(t.index))).some((e=>"output"===e.exitAction||"unwrap"===e.exitAction));let h="0";const I=Array(i.children.length).fill("0");switch(o&&T&&(a?i.children.forEach(((e,t)=>{let a;"unwrap"===e.exitAction?(a=y.indexOf(e.children[0]),h=n.mul(o[a]).div(e.priceRate).toString()):"output"===e.exitAction?(a=y.indexOf(e),h=o[a]):h="0",I[t]=h})):h="unwrap"===(null==m?void 0:m.exitAction)?n.mul(o[u]).div(m.priceRate).toString():o[u]),i.exitAction){case"unwrap":{const{modelRequest:e,encodedCall:t,assets:n,amounts:a}=this.createUnwrap(i,m,u,h,b,f);c.push(e),s.push(t),this.updateDeltas(l,n,a);break}case"batchSwap":{const{modelRequest:e,encodedCall:t,assets:n,amounts:a}=this.createSwap(i,m,u,h,b,f);c.push(e),s.push(t),this.updateDeltas(l,n,a);break}case"exitPool":{let e;e=a?this.createExitPoolProportional(i,I,b,f):this.createExitPool(i,m,u,h,b,f);const{modelRequest:t,encodedCall:n,bptIn:o,tokensOut:r,amountsOut:p}=e;c.push(t),s.push(n),this.updateDeltas(l,[i.address,...r],[o,...p]);break}case"output":p&&(s.push(Ms.encodePeekChainedReferenceValue(Ms.toChainedReference(this.getOutputRef(u,i.index),!1))),r.push(s.length-1));break;default:return}})),i.push(c)})),{multiRequests:i,calls:s,outputIndexes:r,deltas:l}}createSwap(e,t,n,a,o,i){const s=!e.parent,p=s?e.index:Ms.toChainedReference(this.getOutputRef(n,e.index)).toString(),l=t.address,d=[l,e.address],u=a,c={poolId:e.id,kind:pa.SwapExactIn,assetIn:e.address,assetOut:l,amount:p,userData:"0x"},y={sender:o,recipient:i,fromInternalBalance:this.receivesFromInternal(e),toInternalBalance:this.receivesFromInternal(t)},m=Ms.toChainedReference(this.getOutputRef(n,t.index)),b={request:c,funds:y,limit:u,deadline:r.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReference:m};hr(),hr(JSON.stringify(b));const f=Ms.encodeSwap(b),T=s?p:"0";return{modelRequest:dr.mapSwapRequest(b),encodedCall:f,assets:d,amounts:["output"!==t.exitAction?"0":r.from(a).mul(-1).toString(),T]}}createExitPool(e,t,n,o,i,s){const r=t.address,p=!e.parent,l=p?e.index:Ms.toChainedReference(this.getOutputRef(n,e.index)).toString(),d=[],u=[];e.children.forEach((e=>{d.push(e.address),u.push(e.address===r?o:"0")})),e.type===Se.ComposableStable&&(d.push(e.address),u.push("0"));const c=new Xt(this.wrappedNativeAsset),[y,m]=c.sortTokens(d,u);let b=[];const f=y.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase());let T;b=-1===f?y:[...y.slice(0,f),...y.slice(f+1)],T=e.type===Se.Weighted?te.exitExactBPTInForOneTokenOut(l,b.indexOf(r)):ee.exitExactBPTInForOneTokenOut(l,b.indexOf(r));const h=[{index:y.map((e=>e.toLowerCase())).indexOf(r.toLowerCase()),key:Ms.toChainedReference(this.getOutputRef(n,t.index))}],I=this.receivesFromInternal(t),g=Ms.formatExitPoolInput({poolId:e.id,poolKind:0,sender:i,recipient:s,outputReferences:h,exitPoolRequest:{},assets:y,minAmountsOut:m,userData:T,toInternalBalance:I});hr(),hr(JSON.stringify(g));const _=Ms.encodeExitPool(g),w=dr.mapExitPoolRequest(g),P=m.map((e=>Ms.isChainedReference(e)?"0":a.sub(e).toString())),x=Ms.isChainedReference(l)?"0":l;return{modelRequest:w,encodedCall:_,bptIn:p?x:a.toString(),tokensOut:"output"!==t.exitAction?[]:y,amountsOut:"output"!==t.exitAction?[]:P}}createExitPoolProportional(e,t,n,o){const i=!e.parent,s=i?e.index:Ms.toChainedReference(this.getOutputRef(0,e.index)).toString(),r=e.children.map((e=>e.address)),p=[...t];e.type===Se.ComposableStable&&(r.push(e.address),p.push("0"));const l=new Xt(this.wrappedNativeAsset),[d,u]=l.sortTokens(r,p);let c;c=e.type===Se.Weighted?te.exitExactBPTInForTokensOut(s):e.type===Se.ComposableStable?re.exitExactBPTInForAllTokensOut(s):ee.exitExactBPTInForTokensOut(s);const y=e.children.map((e=>({index:d.map((e=>e.toLowerCase())).indexOf(e.address.toLowerCase()),key:Ms.toChainedReference(this.getOutputRef(0,e.index))})));let m=0;e.type===Se.ComposableStable&&(m=3);const b=e.children.every((e=>this.receivesFromInternal(e))),f=Ms.formatExitPoolInput({poolId:e.id,poolKind:m,sender:n,recipient:o,outputReferences:y,exitPoolRequest:{},assets:d,minAmountsOut:u,userData:c,toInternalBalance:b});hr(),hr(JSON.stringify(f));const T=Ms.encodeExitPool(f),h=dr.mapExitPoolRequest(f),I=u.map((e=>Ms.isChainedReference(e)?"0":a.sub(e).toString())),g=Ms.isChainedReference(s)?"0":s,_=i?g:a.toString(),w=d.filter((t=>e.children.filter((e=>"output"===e.exitAction)).map((e=>e.address)).includes(t))),P=I.filter(((e,t)=>w.includes(d[t])));return{modelRequest:h,encodedCall:T,bptIn:_,tokensOut:w,amountsOut:P}}}class gr{constructor(e){this.yesterdaysPools=e}async last24h(e){let t;return this.yesterdaysPools&&(t=await this.yesterdaysPools.find(e.id)),e.totalSwapVolume?(null==t?void 0:t.totalSwapVolume)?parseFloat(e.totalSwapVolume)-parseFloat(t.totalSwapVolume):e.createTime&&Fs(e.createTime)?parseFloat(e.totalSwapVolume):0:0}}class _r{constructor(e,t){this.checkCreateInputs=({tokenAddresses:e,tokenRateCacheDurations:t,exemptFromYieldProtocolFeeFlags:n,rateProviders:a,swapFeeEvm:o})=>{if(e.length!==t.length||t.length!==n.length||n.length!==a.length)throw new ba(ma.INPUT_LENGTH_MISMATCH);if(BigInt(o)<=BigInt(0)||BigInt(o)>BigInt(1e17))throw new ba(ma.INVALID_SWAP_FEE_PERCENTAGE)},this.parseCreateParamsForEncoding=({name:e,symbol:t,tokenAddresses:n,amplificationParameter:a,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p,salt:l})=>{const d=new Xt(this.wrappedNativeAsset),[u,c,y,m]=d.sortTokens(n,o,i,s);return[e,t,u,a,c,y,m,r.toString(),p,l||oa()]},this.encodeCreateFunctionData=e=>je.createInterface().encodeFunctionData("create",e),this.checkInitJoinInputs=({poolId:e,poolAddress:t,tokensIn:n,amountsIn:a})=>{if(!e||!t)throw new ba(ma.NO_POOL_DATA);if(n.length!==a.length)throw new ba(ma.INPUT_LENGTH_MISMATCH)},this.parseParamsForInitJoin=({joiner:e,poolId:t,poolAddress:n,tokensIn:a,amountsIn:o})=>{const i=new Xt(this.wrappedNativeAsset),s=[...a,n],r=[...o,"0"],p=[...o,BigInt.asUintN(256,BigInt(-1)).toString()],[l,d,u]=i.sortTokens(s,r,p),c={poolId:t,sender:e,recipient:e,joinPoolRequest:{assets:l,maxAmountsIn:u,userData:re.joinInit(d),fromInternalBalance:!1}};return{attributes:c,params:[c.poolId,c.sender,c.recipient,c.joinPoolRequest]}},this.encodeInitJoinFunctionData=e=>{const t="joinPool";return{functionName:t,data:At.createInterface().encodeFunctionData(t,e)}},this.getPoolAddressAndIdWithReceipt=async(e,t)=>{var n;const a=aa({receipt:t,to:(null===(n=this.contracts.composableStablePoolFactory)||void 0===n?void 0:n.address)||"",contractInterface:je.createInterface(),logName:"PoolCreated"}).args.pool,o=this.getPoolInterface(),i=new u(a,o,e);return{poolAddress:a,poolId:await i.getPoolId()}};const{tokens:n}=ya(e.chainId);this.wrappedNativeAsset=n.wrappedNativeAsset,this.contracts=t}create({name:e,symbol:t,tokenAddresses:n,amplificationParameter:a,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p,salt:l}){var d;this.checkCreateInputs({rateProviders:o,tokenAddresses:n,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r});const u=this.parseCreateParamsForEncoding({name:e,symbol:t,tokenAddresses:n,amplificationParameter:a,rateProviders:o,tokenRateCacheDurations:i,exemptFromYieldProtocolFeeFlags:s,swapFeeEvm:r,owner:p,salt:l}),c=this.encodeCreateFunctionData(u);return{to:null===(d=this.contracts.composableStablePoolFactory)||void 0===d?void 0:d.address,data:c}}buildInitJoin({joiner:e,poolId:t,poolAddress:n,tokensIn:a,amountsIn:o}){this.checkInitJoinInputs({tokensIn:a,amountsIn:o,poolId:t,poolAddress:n});const{attributes:i,params:s}=this.parseParamsForInitJoin({joiner:e,poolId:t,poolAddress:n,tokensIn:a,amountsIn:o}),{functionName:r,data:p}=this.encodeInitJoinFunctionData(s);return{to:ua,functionName:r,data:p,attributes:i}}getPoolInterface(){return Xe.createInterface()}}class wr{constructor(e,t){this.parseCreateParamsForEncoding=({name:e,symbol:t,tokenAddresses:n,normalizedWeights:a,rateProviders:o,swapFeeEvm:i,owner:s,salt:r})=>{const p=new Xt(this.wrappedNativeAsset),[l,d,u]=p.sortTokens(n,a,o);return[e,t,l,d,u,i.toString(),s,r||oa()]},this.encodeCreateFunctionData=e=>Ct.createInterface().encodeFunctionData("create",e),this.parseParamsForInitJoin=({joiner:e,poolId:t,tokensIn:n,amountsIn:a})=>{const o=new Xt(this.wrappedNativeAsset),[i,s]=o.sortTokens(n,a),r={poolId:t,sender:e,recipient:e,joinPoolRequest:{assets:i,maxAmountsIn:s,userData:te.joinInit(s),fromInternalBalance:!1}};return{attributes:r,params:[r.poolId,r.sender,r.recipient,r.joinPoolRequest]}},this.encodeInitJoinFunctionData=e=>{const t="joinPool";return{functionName:t,data:At.createInterface().encodeFunctionData(t,e)}},this.checkInitJoinInputs=({poolId:e,tokensIn:t,amountsIn:n})=>{if(!e)throw new ba(ma.NO_POOL_DATA);if(t.length!==n.length)throw new ba(ma.INPUT_LENGTH_MISMATCH)};const{tokens:n}=ya(e.chainId);this.wrappedNativeAsset=n.wrappedNativeAsset,this.contracts=t}create({name:e,symbol:t,tokenAddresses:n,normalizedWeights:a,rateProviders:o,swapFeeEvm:i,owner:s,salt:r}){var p;this.checkCreateInputs({tokenAddresses:n,normalizedWeights:a,swapFeeEvm:i,rateProviders:o});const l=this.parseCreateParamsForEncoding({name:e,symbol:t,tokenAddresses:n,normalizedWeights:a,rateProviders:o,swapFeeEvm:i,owner:s,salt:r}),d=this.encodeCreateFunctionData(l);return{to:null===(p=this.contracts.weightedPoolFactory)||void 0===p?void 0:p.address,data:d}}checkCreateInputs({tokenAddresses:e,normalizedWeights:t,swapFeeEvm:n,rateProviders:a}){if(e.length!==t.length||t.length!==a.length)throw new ba(ma.INPUT_LENGTH_MISMATCH);if(e.length<2)throw new ba(ma.BELOW_MIN_TOKENS);if(e.length>8)throw new ba(ma.ABOVE_MAX_TOKENS);if(BigInt(n)<=BigInt(0)||BigInt(n)>BigInt(1e17))throw new ba(ma.INVALID_SWAP_FEE_PERCENTAGE);if(t.reduce(((e,t)=>dn.add(e,BigInt(t))),BigInt(0))!==BigInt(1e18))throw new ba(ma.INVALID_WEIGHTS)}buildInitJoin({joiner:e,poolId:t,tokensIn:n,amountsIn:a}){this.checkInitJoinInputs({poolId:t,tokensIn:n,amountsIn:a});const{attributes:o,params:i}=this.parseParamsForInitJoin({joiner:e,poolId:t,tokensIn:n,amountsIn:a}),{functionName:s,data:r}=this.encodeInitJoinFunctionData(i);return{to:ua,functionName:s,data:r,attributes:o}}async getPoolAddressAndIdWithReceipt(e,t){var n;const a=aa({receipt:t,to:(null===(n=this.contracts.weightedPoolFactory)||void 0===n?void 0:n.address)||"",contractInterface:Ct.createInterface(),logName:"PoolCreated"}).args.pool,o=this.getPoolInterface(),i=new u(a,o,e);return{poolAddress:a,poolId:await i.getPoolId()}}getPoolInterface(){return Ot.createInterface()}}var Pr;!function(e){e[e.AAVE_V1=0]="AAVE_V1",e[e.AAVE_V2=1]="AAVE_V2",e[e.AAVE_V3=2]="AAVE_V3",e[e.AMPLEFORTH=3]="AMPLEFORTH",e[e.BEEFY=4]="BEEFY",e[e.EULER=5]="EULER",e[e.GEARBOX=6]="GEARBOX",e[e.IDLE=7]="IDLE",e[e.MORPHO=8]="MORPHO",e[e.RADIANT=9]="RADIANT",e[e.REAPER=10]="REAPER",e[e.SILO=11]="SILO",e[e.STARGATE=12]="STARGATE",e[e.STURDY=13]="STURDY",e[e.TESSERA=14]="TESSERA",e[e.TETU=15]="TETU",e[e.YEARN=16]="YEARN",e[e.MIDAS=17]="MIDAS",e[e.AGAVE=18]="AGAVE"}(Pr||(Pr={}));class xr{constructor(e,t){this.getPoolFactoryInterface=()=>{switch(this.poolType){case Se.AaveLinear:return Ce.createInterface();case Se.Linear:case Se.ERC4626Linear:return nt.createInterface();case Se.EulerLinear:return st.createInterface();case Se.GearboxLinear:return mt.createInterface();case Se.YearnLinear:return Nt.createInterface();default:throw new ba(ma.UNSUPPORTED_POOL_TYPE)}},this.getPoolInterface=()=>{switch(this.poolType){case Se.AaveLinear:return Oe.createInterface();case Se.Linear:case Se.ERC4626Linear:return et.createInterface();case Se.EulerLinear:return ot.createInterface();case Se.GearboxLinear:return ct.createInterface();case Se.YearnLinear:return Bt.createInterface();default:throw new ba(ma.UNSUPPORTED_POOL_TYPE)}},this.checkCreateInputs=({swapFeeEvm:e,protocolId:t})=>{if(!Pr[t])throw new ba(ma.INVALID_PROTOCOL_ID);if(BigInt(e)<=BigInt(0)||BigInt(e)>BigInt(1e17))throw new ba(ma.INVALID_SWAP_FEE_PERCENTAGE);this.getFactoryAddress()},this.parseCreateParamsForEncoding=({name:e,symbol:t,mainToken:n,wrappedToken:a,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r,salt:p})=>this.poolType===Se.EulerLinear?[e,t,n,a,o,i,s,r.toString()]:[e,t,n,a,o,i,s,r.toString(),p||oa()],this.encodeCreateFunctionData=e=>{const t=this.getPoolFactoryInterface();return this.poolType,Se.EulerLinear,t.encodeFunctionData("create",e)},this.getFactoryAddress=()=>{switch(this.poolType){case Se.AaveLinear:if(this.contracts.aaveLinearPoolFactory)return this.contracts.aaveLinearPoolFactory.address;throw new ba(ma.UNSUPPORTED_POOL_TYPE);case Se.Linear:case Se.ERC4626Linear:if(this.contracts.erc4626LinearPoolFactory)return this.contracts.erc4626LinearPoolFactory.address;throw new ba(ma.UNSUPPORTED_POOL_TYPE);case Se.EulerLinear:if(this.contracts.eulerLinearPoolFactory)return this.contracts.eulerLinearPoolFactory.address;throw new ba(ma.UNSUPPORTED_POOL_TYPE);case Se.GearboxLinear:if(this.contracts.gearboxLinearPoolFactory)return this.contracts.gearboxLinearPoolFactory.address;throw new ba(ma.UNSUPPORTED_POOL_TYPE);case Se.YearnLinear:if(this.contracts.yearnLinearPoolFactory)return this.contracts.yearnLinearPoolFactory.address;throw new ba(ma.UNSUPPORTED_POOL_TYPE);default:throw new ba(ma.UNSUPPORTED_POOL_TYPE)}},this.getPoolAddressAndIdWithReceipt=async(e,t)=>{const n=aa({receipt:t,to:this.getFactoryAddress()||"",contractInterface:this.getPoolFactoryInterface(),logName:"PoolCreated"}).args.pool,a=this.getPoolInterface(),o=new u(n,a,e);return{poolAddress:n,poolId:await o.getPoolId()}},this.contracts=e,this.poolType=t}buildInitJoin(){throw new ba(ma.UNSUPPORTED_POOL_TYPE)}create({name:e,symbol:t,mainToken:n,wrappedToken:a,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r,salt:p}){this.checkCreateInputs({swapFeeEvm:i,protocolId:r});const l=this.parseCreateParamsForEncoding({name:e,symbol:t,mainToken:n,wrappedToken:a,upperTargetEvm:o,swapFeeEvm:i,owner:s,protocolId:r,salt:p}),d=this.encodeCreateFunctionData(l);return{to:this.getFactoryAddress(),data:d}}}class Er{constructor(e,t){this.networkConfig=e,this.contracts=t.contracts}of(e){switch(e){case"Weighted":return new wr(this.networkConfig,this.contracts);case"Investment":case"LiquidityBootstrapping":case"Stable":case"MetaStable":case"StablePhantom":default:throw new ba(ma.UNSUPPORTED_POOL_TYPE);case"ComposableStable":return new _r(this.networkConfig,this.contracts);case"Linear":case"AaveLinear":case"ERC4626Linear":case"EulerLinear":case"GearboxLinear":case"YearnLinear":return new xr(this.contracts,e)}}}class vr{constructor(e){this.pool=e;const t=(e=>{switch(e){case Se.Weighted:return te;case Se.Stable:case Se.MetaStable:case Se.StablePhantom:case Se.Element:case Se.Gyro2:case Se.Gyro3:return ee;case Se.ComposableStable:return re;default:if(ta(e))return ee}})(e.poolType);if(!t)throw"Pool type not supported";this.encoder=t}buildQueryJoinExactIn({maxAmountsInByToken:e,minimumBPT:t=a}){const n=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e))),i=[...this.pool.tokensList],s=this.pool.tokensList.map((t=>{var n;return null!==(n=e.get(t))&&void 0!==n?n:r.from("0")}));let p;p=n>-1?Qn(s,n):s;const l=this.encoder.joinExactTokensInForBPTOut(p,t);return[this.pool.id,o,o,{assets:i,maxAmountsIn:s,userData:l,fromInternalBalance:!1}]}buildQueryJoinExactOut({maxAmountIn:e,bptOut:t,tokenIn:n}){const a=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));let i=[...this.pool.tokensList];a>-1&&(i=Qn(this.pool.tokensList,a));const s=i.indexOf(n),r=this.encoder.joinTokenInForExactBPTOut(t,s),p=e?this.pool.tokensList.map((t=>t===n?e:"0")):[];return[this.pool.id,o,o,{assets:this.pool.tokensList,maxAmountsIn:p,userData:r,fromInternalBalance:!1}]}buildQueryExitToSingleToken({minAmountOut:e,bptIn:t,tokenOut:n}){const a=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));let i=[...this.pool.tokensList];a>-1&&(i=Qn(this.pool.tokensList,a));const s=i.indexOf(n),r=this.encoder.exitExactBPTInForOneTokenOut(t,s),p=e?this.pool.tokensList.map((t=>t===n?e:"0")):[];return[this.pool.id,o,o,{assets:this.pool.tokensList,minAmountsOut:p,userData:r,toInternalBalance:!1}]}buildQueryExitProportionally({minAmountsOut:e=[],bptIn:t}){if(!this.encoder.exitExactBPTInForTokensOut)throw"Proportional exit not implemented";const n=this.encoder.exitExactBPTInForTokensOut(t);return[this.pool.id,o,o,{assets:this.pool.tokensList,minAmountsOut:e,userData:n,toInternalBalance:!1}]}buildQueryExitExactOut({minAmountsOut:e,maxBptIn:t=i}){const n=this.pool.tokensList.findIndex((e=>this.pool.id.includes(e)));let a=[...e];n>-1&&(a=Qn(e,n));const s=this.encoder.exitBPTInForExactTokensOut(a,t);return[this.pool.id,o,o,{assets:this.pool.tokensList,minAmountsOut:e,userData:s,toInternalBalance:!1}]}}class Sr{constructor(e){this.liquidityGaugesRepository=e}async relativeWeight(e){const t=await this.liquidityGaugesRepository.findBy("poolId",e);return t?t.relativeWeight:0}async weekly(e){return $s()*await this.relativeWeight(e)}}const Ar=(e,t,n)=>{const a=e.tokens.filter((t=>!e.id.toLowerCase().includes(t.address.toLowerCase()))),o=a.findIndex((e=>e.address.toLowerCase()===t.toLowerCase()));if(-1==o)throw new Error("Token not found in pool");const i=a.map((e=>On(e.balance,e.decimals))),s=r.from(n),p=i.map((e=>e.mul(s).div(i[o])));return{tokens:a.map((e=>e.address)),amounts:p.map((e=>e.toString()))}},kr=(e,t)=>()=>{throw`${t} for poolType ${e} not implemented`};class Or{constructor(e,t,n){this.networkConfig=e,this.repositories=t,this.balancerContracts=n,this.aprService=new Ks(this.repositories.pools,this.repositories.tokenPrices,this.repositories.tokenMeta,this.repositories.tokenYields,this.repositories.feeCollector,this.repositories.yesterdaysPools,this.repositories.liquidityGauges,this.repositories.feeDistributor),this.liquidityService=new po(t.pools,t.tokenPrices),this.simulationService=new fr(e,this.repositories.poolsForSor),this.graphService=new Qs(this.repositories.poolsOnChain),this.joinService=new yr(this.graphService,e,this.simulationService),this.exitService=new Ir(this.graphService,e,this.simulationService),this.feesService=new js(t.yesterdaysPools),this.volumeService=new gr(t.yesterdaysPools),this.poolFactory=new Er(e,n),this.impermanentLossService=new Us(t.tokenPrices,t.tokenHistoricalPrices),t.liquidityGauges&&(this.emissionsService=new Sr(t.liquidityGauges)),this.proportionalAmounts=Ar}static wrap(e,t){let n,a,o;try{n=ro.from(e.poolType),o={buildJoin:(t,a,o,s)=>n.join.buildJoin({joiner:t,pool:e,tokensIn:a,amountsIn:o,slippage:s,wrappedNativeAsset:i}),calcPriceImpact:async(t,a,o)=>n.priceImpactCalculator.calcPriceImpact(e,t.map(BigInt),BigInt(a),o),buildExitExactBPTIn:(t,a,o,s=!1,r,p=!1)=>{if(n.exit.buildExitExactBPTIn)return n.exit.buildExitExactBPTIn({exiter:t,pool:e,bptIn:a,slippage:o,shouldUnwrapNativeAsset:s,wrappedNativeAsset:i,singleTokenOut:r,toInternalBalance:p});throw"ExitExactBPTIn not supported"},buildExitExactTokensOut:(t,a,o,s,r=!1)=>n.exit.buildExitExactTokensOut({exiter:t,pool:e,tokensOut:a,amountsOut:o,slippage:s,wrappedNativeAsset:i,toInternalBalance:r}),buildRecoveryExit:(t,a,o,i=!1)=>n.exit.buildRecoveryExit({exiter:t,pool:e,bptIn:a,slippage:o,toInternalBalance:i}),calcSpotPrice:(t,a)=>n.spotPriceCalculator.calcPoolSpotPrice(t,a,e),calcProportionalAmounts:(t,n)=>Ar(e,t,n)}}catch(t){if("UNSUPPORTED_POOL_TYPE"!=t.code){Ae.getInstance().warn(t)}o={buildJoin:kr(e.poolType,"buildJoin"),calcPriceImpact:kr(e.poolType,"calcPriceImpact"),buildExitExactBPTIn:kr(e.poolType,"buildExitExactBPTIn"),buildExitExactTokensOut:kr(e.poolType,"buildExitExactTokensOut"),calcSpotPrice:kr(e.poolType,"calcSpotPrice"),buildRecoveryExit:kr(e.poolType,"buildRecoveryExit")}}try{a=new vr(e),o={...o,buildQueryJoinExactIn:a.buildQueryJoinExactIn.bind(a),buildQueryJoinExactOut:a.buildQueryJoinExactOut.bind(a),buildQueryExitExactOut:a.buildQueryExitExactOut.bind(a),buildQueryExitToSingleToken:a.buildQueryExitToSingleToken.bind(a),buildQueryExitProportionally:a.buildQueryExitProportionally.bind(a)}}catch(t){o={...o,buildQueryJoinExactIn:kr(e.poolType,"buildQueryJoinExactIn"),buildQueryJoinExactOut:kr(e.poolType,"buildQueryJoinExactOut"),buildQueryExitExactOut:kr(e.poolType,"buildQueryExitExactOut"),buildQueryExitToSingleToken:kr(e.poolType,"buildQueryExitToSingleToken"),buildQueryExitProportionally:kr(e.poolType,"buildQueryExitProportionally")}}const i=t.addresses.tokens.wrappedNativeAsset.toLowerCase(),s=e.tokensList.indexOf(e.address);return{...e,...o,bptIndex:s}}dataSource(){return this.repositories.pools}async apr(e){return this.aprService.apr(e)}async impermanentLoss(e,t){return this.impermanentLossService.calcImpLoss(e,t)}async liquidity(e){return this.liquidityService.getLiquidity(e)}async bptPrice(e){return this.liquidityService.getBptPrice(e)}buildJoin({pool:e,tokensIn:t,amountsIn:n,userAddress:a,slippage:o}){const i=ro.from(e.poolType);if(!i)throw`buildJoin for poolType ${e.poolType} not implemented`;return i.join.buildJoin({joiner:a,pool:e,tokensIn:t,amountsIn:n,slippage:o,wrappedNativeAsset:this.networkConfig.addresses.tokens.wrappedNativeAsset.toLowerCase()})}buildExitExactBPTIn({pool:e,bptAmount:t,userAddress:n,slippage:a}){const o=ro.from(e.poolType);if(!o||!o.exit.buildExitExactBPTIn)throw`buildExit for poolType ${e.poolType} not implemented`;return o.exit.buildExitExactBPTIn({pool:e,exiter:n,bptIn:t,slippage:a,wrappedNativeAsset:this.networkConfig.addresses.tokens.wrappedNativeAsset.toLowerCase(),shouldUnwrapNativeAsset:!1,toInternalBalance:!1})}async generalisedJoin(e,t,n,a,o,i,s,r){return this.joinService.joinPool(e,t,n,a,o,i,s,r)}async generalisedExit(e,t,n,a,o,i,s,r){return this.exitService.buildExitCall(e,t,n,a,o,i,s,r)}calcPriceImpact({pool:e,tokenAmounts:t,bptAmount:n,isJoin:a}){return ro.from(e.poolType).priceImpactCalculator.calcPriceImpact(e,t.map(BigInt),BigInt(n),a)}async getExitInfo(e,t,n,a){return this.exitService.getExitInfo(e,t,n,a)}async fees(e){return this.feesService.last24h(e)}async volume(e){return this.volumeService.last24h(e)}async find(e){const t=await this.dataSource().find(e);if(t)return Or.wrap(t,this.networkConfig)}async findBy(e,t){if("id"==e)return this.find(t);if("address"==e){const e=await this.dataSource().findBy("address",t);if(!e)return;return Or.wrap(e,this.networkConfig)}throw`search by ${e} not implemented`}async all(){const e=await this.dataSource().all();return e?e.map((e=>Or.wrap(e,this.networkConfig))).filter((e=>e)):[]}async where(e){const t=await this.dataSource().where(e);if(!t)return[];return t.map((e=>Or.wrap(e,this.networkConfig))).filter((e=>e))}}const Mr=new t(["function gauge_relative_weight(address gauge, uint timestamp) view returns (uint)"]);class Cr{constructor(e,t){this.multicall=e,this.gaugeControllerAddress=t}async getRelativeWeights(e,t){const n=e.map((e=>({target:this.gaugeControllerAddress,callData:Mr.encodeFunctionData("gauge_relative_weight",[d(e),t||Math.floor(Date.now()/1e3)])}))),[,a]=await this.multicall.callStatic.aggregate(n);return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(kn(a[n],18))),e)),{})}}class Rr{async get(e){const t=await this.query(e);return(null==t?void 0:t.length)>0?t[0]:void 0}async find(e){return this.get({where:{id:e}})}async findBy(e,t){return this.get({where:{[String(e)]:t}})}async findAllBy(e,t,n=1e3,a=0){const o={where:{[String(e)]:t},first:n,skip:a};return this.query(o)}}class Br extends Rr{constructor(e,t,n){super(),this.chainId=t,this.blockHeight=n,this.client=as(e)}}class Fr extends Rr{constructor(e,t,n){super(),this.chainId=t,this.blockHeight=n,this.client=os(e)}}class Nr extends Fr{async query(e){e.orderBy||(e.orderBy=Fi.balance),e.orderDirection||(e.orderDirection=Vi.desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{gaugeShares:t}=await this.client.GaugeShares(e);return t.map(this.mapType)}mapType(e){var t;return{id:e.id,balance:e.balance,userAddress:null===(t=e.user)||void 0===t?void 0:t.id,gauge:{id:e.gauge.id,poolId:e.gauge.poolId||void 0,isKilled:e.gauge.isKilled,totalSupply:e.gauge.totalSupply}}}async findByUser(e,t,n){return this.findAllBy(Pe.UserAddress,e,t,n)}async findByGauge(e,t,n){return this.findAllBy(Pe.GaugeId,e,t,n)}}const Dr=new t(["function totalSupply() view returns (uint)","function working_supply() view returns (uint)","function reward_count() view returns (uint)","function reward_tokens(uint rewardIndex) view returns (address)","function reward_data(address rewardToken) view returns (tuple(address token, address distributor, uint period_finish, uint rate, uint last_update, uint integral) data)"]),Lr=new t(["function inflation_rate(uint currentWeekTimestamp) view returns (uint)"]);class Ur{constructor(e,t){this.multicall=e,this.chainId=t}async getTotalSupplies(e){const t=e.map((e=>({target:e,callData:Dr.encodeFunctionData("totalSupply",[])}))),[,n]=await this.multicall.callStatic.aggregate(t),a=n.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(kn(a[n],18))),e)),{})}async getWorkingSupplies(e){const t=e.map((e=>({target:e,callData:Dr.encodeFunctionData("working_supply",[])}))),[,n]=await this.multicall.callStatic.aggregate(t),a=n.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(kn(a[n],18))),e)),{})}async getInflationRates(e){const t=Math.floor(Date.now()/1e3/604800),n=e.map((e=>({target:e,callData:Lr.encodeFunctionData("inflation_rate",[t])}))),[,a]=await this.multicall.callStatic.aggregate(n),o=a.map((e=>"0x"==e?"0x0":e));return e.reduce(((e,t,n)=>(e[t]||(e[t]=parseFloat(kn(o[n],18))),e)),{})}async getRewardCounts(e){let t;if(1==this.chainId){const n=e.map((e=>({target:e,callData:Dr.encodeFunctionData("reward_count",[])}))),[,a]=await this.multicall.callStatic.aggregate(n),o=a.map((e=>"0x"==e?"0x0":e));t=e.reduce(((e,t,n)=>(e[t]||(e[t]=parseInt(o[n])),e)),{})}else t=e.reduce(((e,t)=>(e[t]||(e[t]=1),e)),{});return t}async getRewardTokens(e,t){const n=t||await this.getRewardCounts(e),a=e.filter((e=>n[e]>0)),o=[0],i=a.map(((e,t)=>{const a=[];for(let t=0;t<n[e];t++)a.push({target:e,callData:Dr.encodeFunctionData("reward_tokens",[t])});return o[t+1]=o[t]+n[e],a})).flat(),[,s]=await this.multicall.callStatic.aggregate(i);return a.reduce(((e,t,n)=>{const a=o[n],i=o[n+1],r=[];for(let e=a;e<i;e++)r.push(Dr.decodeFunctionResult("reward_tokens",s[e])[0]);return e[t]||(e[t]=r),e}),{})}async getRewardData(e,t){const n=t||await this.getRewardTokens(e),a=[0],o=Object.keys(n).map(((e,t)=>{const o=[];for(let t=0;t<n[e].length;t++)o.push({target:e,callData:Dr.encodeFunctionData("reward_data",[n[e][t]])});return a[t+1]=a[t]+n[e].length,o})).flat(),[,i]=await this.multicall.callStatic.aggregate(o),s=i.map((e=>Dr.decodeFunctionResult("reward_data",e)[0]));return Object.keys(n).reduce(((e,t,o)=>{const i=a[o],r=n[t].reduce(((e,t,n)=>(e[t]||(e[t]=s[i+n]),e)),{});return e[t]||(e[t]=r),e}),{})}}class Vr{constructor(e){this.gauges=[],this.client=os(e)}async fetch(){const e=(await this.client.Pools({where:{preferentialGauge_not:null}})).pools.map((e=>e.preferentialGauge));return this.gauges=e,this.gauges}async find(e){return 0==this.gauges.length&&await this.fetch(),this.gauges.find((t=>t.id==e))}async findBy(e,t){if(0==this.gauges.length&&await this.fetch(),"id"==e)return this.find(t);if("poolId"==e)return this.gauges.find((e=>e.poolId==t));if("poolAddress"==e)return this.gauges.find((e=>e.poolAddress==t));throw`search by ${e} not implemented`}}class Gr{constructor(e,t,n,a){this.chainId=a,this.workingSupplies={},this.relativeWeights={},this.inflationRates={},this.rewardData={},n&&(this.gaugeController=new Cr(t,n)),this.multicall=new Ur(t,a),this.subgraph=new Vr(e)}async fetch(){const e=await this.subgraph.fetch(),t=e.map((e=>e.id));if(1==this.chainId)this.workingSupplies=await this.multicall.getWorkingSupplies(t);else{const t=["0x22625eedd92c81a219a83e1dc48f88d54786b017","0x6817149cb753bf529565b4d023d7507ed2ff4bc0","0x83e443ef4f9963c77bd860f94500075556668cb8"],n=e.filter((e=>t.includes(e.factory.id.toLowerCase()))).map((e=>e.id));n.length>0&&(this.inflationRates=await this.multicall.getInflationRates(n))}return this.gaugeController&&(this.relativeWeights=await this.gaugeController.getRelativeWeights(t)),this.rewardData=e.reduce(((e,t)=>{var n;return e[n=t.id]||(e[n]=t.tokens?Object.fromEntries(t.tokens.map((e=>[e.id.split("-")[0],{distributor:"",last_update:r.from(0),integral:r.from(0),token:e.id.split("-")[0],decimals:e.decimals,rate:On(e.rate||"0",e.decimals),period_finish:r.from(e.periodFinish||"0")}]))):{}),e}),{}),e.map(this.compose.bind(this))}async find(e){return this.gauges||(this.gauges=this.fetch()),(await this.gauges).find((t=>t.id==e))}async findBy(e,t){let n;if(this.gauges||(this.gauges=this.fetch()),"id"==e)return this.find(t);if("address"==e)return this.find(t);if("poolId"==e)n=(await this.gauges).find((e=>e.poolId==t));else{if("poolAddress"!=e)throw`search by ${e} not implemented`;n=(await this.gauges).find((e=>e.poolAddress==t))}return n}compose(e){return{id:e.id,address:e.id,name:e.symbol,poolId:e.poolId,poolAddress:e.poolAddress,totalSupply:parseFloat(e.totalSupply),workingSupply:this.workingSupplies[e.id],relativeWeight:this.relativeWeights[e.id],rewardTokens:this.rewardData[e.id],balInflationRate:this.inflationRates[e.id]}}}class qr{constructor(e,t){this.url=e,this.apiKey=t}async get(e){try{const t=this.toPayload(e),{data:n}=await H.post(this.url,t,{headers:{"x-api-key":this.apiKey}});if(n.errors)throw new Error(n.errors.map((e=>e.message)).join(","));return n.data}catch(e){throw console.error(e),e}return[]}toPayload(e){return JSON.stringify({query:X({query:e})})}}class Wr{constructor(e){var t,n;this.pools=[],this.skip=0,this.client=new qr(e.url,e.apiKey);this.query={args:Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||{chainId:1,orderBy:"totalLiquidity",orderDirection:"desc",where:{swapEnabled:{eq:!0},totalShares:{gt:.05}}}),attrs:Object.assign({},(null===(n=e.query)||void 0===n?void 0:n.attrs)||{id:!0,address:!0})},delete this.query.args.skip}fetchFromCache(e){const t=(null==e?void 0:e.first)||10,n=(null==e?void 0:e.skip)||0,a=this.pools.slice(n,t+n);return this.skip=n+t,a}async fetch(e){if(null===this.nextToken||this.pools.length>((null==e?void 0:e.first)||10)+((null==e?void 0:e.skip)||0))return this.fetchFromCache(e);this.nextToken&&(this.query.args.nextToken=this.nextToken),(null==e?void 0:e.first)&&(this.query.args.first=2*e.first);const t=new ra(this.query.args).format(new ia),n=this.query.attrs;n.nextToken=!0;const a={pools:{__args:t,...n}},o=(await this.client.get(a)).pools;return this.nextToken=o.nextToken,this.pools=this.pools.concat(o.pools.map(this.format)),this.skip=this.pools.length,this.fetchFromCache(e)}async find(e){return 0==this.pools.length&&await this.fetch(),this.findBy("id",e)}async findBy(e,t){0==this.pools.length&&await this.fetch();const n=this.pools.find((n=>n[e]==t));if(n)return this.format(n)}format(e){var t,n,a,o;if(null===(t=e.apr)||void 0===t?void 0:t.rewardAprs.breakdown){const t=JSON.parse(null===(n=e.apr)||void 0===n?void 0:n.rewardAprs.breakdown);e.apr.rewardAprs.breakdown=t}if(null===(a=e.apr)||void 0===a?void 0:a.tokenAprs.breakdown){const t=JSON.parse(null===(o=e.apr)||void 0===o?void 0:o.tokenAprs.breakdown);e.apr.tokenAprs.breakdown=t}return e}}class $r{constructor(e,t={}){this.providers=e,this.currentProviderIdx=0,this.timeout=t.timeout||1e4}async fetch(e){return this.fallbackQuery("fetch",[e])}get currentProvider(){if(this.providers.length&&!(this.currentProviderIdx>=this.providers.length))return this.providers[this.currentProviderIdx]}async find(e){return this.fallbackQuery("find",[e])}async findBy(e,t){return this.fallbackQuery("findBy",[e,t])}async fallbackQuery(e,t){if(this.currentProviderIdx>=this.providers.length)throw new Error("No working providers found");let n;try{const a=this.providers[this.currentProviderIdx];n=await Promise.race([a[e].apply(a,t),new Promise(((e,t)=>setTimeout((()=>t(new Error("timeout"))),this.timeout)))])}catch(a){const o=a.message;if("timeout"===o){Ae.getInstance().warn("Provider "+this.currentProviderIdx+" timed out, falling back to next provider")}else{const e=Ae.getInstance();e.warn(`Provider ${this.currentProviderIdx} failed with error, falling back to next provider.`),e.warn(o)}this.currentProviderIdx++,n=await this.fallbackQuery.call(this,e,t)}return n}}class Hr{constructor(e){this.pools=e}async find(e){return this.pools.find((t=>t.id.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.pools.find((n=>n[e]===t))}async all(){return this.pools}async where(e){return(await this.all()).filter(e)}}const Xr=(e,t)=>{var n,a,o,i,s,r,p,l,d,u,c;return{id:e.id,name:e.name||"",address:e.address,chainId:t,poolType:e.poolType,poolTypeVersion:e.poolTypeVersion||1,swapFee:e.swapFee,swapEnabled:e.swapEnabled,protocolYieldFeeCache:e.protocolYieldFeeCache||"0.5",protocolSwapFeeCache:e.protocolSwapFeeCache||"0.5",amp:null!==(n=e.amp)&&void 0!==n?n:void 0,owner:null!==(a=e.owner)&&void 0!==a?a:void 0,factory:null!==(o=e.factory)&&void 0!==o?o:void 0,symbol:null!==(i=e.symbol)&&void 0!==i?i:void 0,tokens:(e.tokens||[]).map(Yr),tokensList:e.tokensList,tokenAddresses:(e.tokens||[]).map((e=>e.address)),totalLiquidity:e.totalLiquidity,totalShares:e.totalShares,totalSwapFee:e.totalSwapFee,totalSwapVolume:e.totalSwapVolume,priceRateProviders:null!==(s=e.priceRateProviders)&&void 0!==s?s:void 0,createTime:e.createTime,mainIndex:null!==(r=e.mainIndex)&&void 0!==r?r:void 0,wrappedIndex:null!==(p=e.wrappedIndex)&&void 0!==p?p:void 0,totalWeight:e.totalWeight||"1",lowerTarget:null!==(l=e.lowerTarget)&&void 0!==l?l:"0",upperTarget:null!==(d=e.upperTarget)&&void 0!==d?d:"0",isInRecoveryMode:null!==(u=e.isInRecoveryMode)&&void 0!==u&&u,isPaused:null!==(c=e.isPaused)&&void 0!==c&&c}},Yr=e=>{const t=jr(e.token);return{...e,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||!1,token:t}},jr=e=>{let t=null;return e.pool&&(t={id:e.pool.id,address:e.pool.address,totalShares:e.pool.totalShares,poolType:e.pool.poolType,mainIndex:e.pool.mainIndex||0},(null==e?void 0:e.pool.tokens)&&(t.tokens=e.pool.tokens.map(Kr))),{pool:t,latestUSDPrice:e.latestUSDPrice||void 0}},Kr=e=>({address:e.address,decimals:e.decimals,symbol:e.symbol,balance:e.balance,priceRate:e.priceRate,weight:e.weight,isExemptFromYieldProtocolFee:e.isExemptFromYieldProtocolFee||void 0,token:e.token?jr(e.token):void 0});class Jr{constructor(e){var t,n;this.skip=0,this.client=as(e.url),this.blockHeight=e.blockHeight,this.chainId=e.chainId;const a={orderBy:Ko.TotalLiquidity,orderDirection:Wo.Desc,where:{totalShares:{gt:1e-12}}},o=Object.assign({},(null===(t=e.query)||void 0===t?void 0:t.args)||a),i=Object.assign({},(null===(n=e.query)||void 0===n?void 0:n.attrs)||{});this.query={args:o,attrs:i}}async fetchAllPools(){this.blockHeight&&(this.query.args.block={number:await this.blockHeight()});const e=new ra(this.query.args).format(new sa),{pool0:t,pool1000:n,pool2000:a}=await this.client.AllPools(e);return[...t,...n,...a].map((e=>Xr(e,this.chainId)))}async fetch(e){(null==e?void 0:e.skip)&&(this.query.args.skip=e.skip),this.blockHeight&&(this.query.args.block={number:await this.blockHeight()}),this.query.args.first=(null==e?void 0:e.first)||1e3;const t=new ra(this.query.args).format(new sa),{pools:n}=await this.client.Pools(t);return this.skip=((null==e?void 0:e.skip)||0)+n.length,n.map((e=>Xr(e,this.chainId)))}async find(e){return await this.findBy("id",e)}async findBy(e,t){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).find((n=>n[e]==t))}async all(){return this.pools||(this.pools=this.fetchAllPools()),this.pools}async block(){return this.blockHeight?{number:await this.blockHeight()}:void 0}async where(e){return this.pools||(this.pools=this.fetchAllPools()),(await this.pools).filter(e)}}class zr{constructor(e,t,n){this.poolsSubgraph=e,this.poolsToIgnore=n,this.skip=0,this.provider=t.provider,this.multicall=t.multicall,this.vault=t.vault}filterPools(e){return e.filter((e=>{if(!1===e.swapEnabled)return!1;if(!this.poolsToIgnore)return!0;return-1===this.poolsToIgnore.findIndex((t=>Jn(t,e.address)))}))}async fetchDefault(){const e=await this.poolsSubgraph.all(),t=this.filterPools(e);t.length;const n=await ps(t,this.multicall,this.vault,this.provider);return t.length,n}async fetch(e){const t=await this.poolsSubgraph.fetch(e),n=this.filterPools(t);n.length;const a=await ps(n,this.multicall,this.vault,this.provider);return n.length,a}async find(e,t=!1){return await this.findBy("id",e,t)}async findBy(e,t,n=!1){return this.pools&&!n||(this.pools=this.fetchDefault()),(await this.pools).find((n=>n[e]==t))}async all(){return this.pools||(this.pools=this.fetchDefault()),this.pools}async where(e){return this.pools||(this.pools=this.fetchDefault()),(await this.pools).filter(e)}async refresh(e){const t=await ps([e],this.multicall,this.vault,this.provider);if(this.pools){const n=(await this.pools).findIndex((t=>t.address===e.address));-1!==n&&(this.pools=Promise.resolve([...(await this.pools).splice(n,1),t[0]]))}return t[0]}}class Zr extends Fr{async query(e){!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{pools:t}=await this.client.PoolGauges(e);return t.map(this.mapType)}mapType(e){return e}}var Qr;!function(e){e.Pool="pool",e.Sender="sender"}(Qr||(Qr={}));class ep extends Br{async query(e){e.orderBy||(e.orderBy=Uo.Timestamp),e.orderDirection||(e.orderDirection=Wo.Asc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{joinExits:t}=await this.client.JoinExits(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.user.id,poolId:e.pool.id,timestamp:e.timestamp,type:e.type,amounts:e.amounts,tokens:e.pool.tokensList}}async findByUser(e,t,n){return this.findAllBy(Qr.Sender,e,t,n)}async findJoins(e,t){return this.query({where:{sender:e,pool:t,type:"Join"}})}async findExits(e,t){return this.query({where:{sender:e,pool:t,type:"Exit"}})}async findByPool(e,t,n){return this.findAllBy(Qr.Pool,e,t,n)}}class tp extends Br{async query(e){e.orderBy||(e.orderBy=Xo.Balance),e.orderDirection||(e.orderDirection=Wo.Desc),!e.block&&this.blockHeight&&(e.block={number:await this.blockHeight()});const{poolShares:t}=await this.client.PoolShares(e);return t.map(this.mapType)}mapType(e){return{id:e.id,userAddress:e.userAddress.id,poolId:e.poolId.id,balance:e.balance}}async findByUser(e,t,n){return this.findAllBy(we.UserAddress,e,t,n)}async findByPool(e,t,n){return this.findAllBy(we.PoolId,e,t,n)}}class np{constructor(e){this.tokens=e}async find(e){return this.tokens.find((t=>t.address.toLowerCase()===e.toLowerCase()))}async findBy(e,t){return this.tokens.find((n=>n[e]===t))}}class ap{constructor(e){this.tokenPrices=Object.fromEntries(Object.entries(e).map((([e,t])=>[e.toLowerCase(),t])))}async find(e){const t=e.toLowerCase(),n=this.tokenPrices[t];if(n)return n}async findBy(e,t){if("address"==e)return this.find(t)}}class op{constructor(e,t=1){this.chainId=t,this.prices={},this.baseTokenAddresses=e.map(Nn),this.urlBase=`https://api.coingecko.com/api/v3/simple/token_price/${this.platform(t)}?vs_currencies=usd,eth`,this.debouncer=new Vn(this.fetch.bind(this),200)}fetch(e,{signal:t}={}){return e.length,H.get(this.url(e),{signal:t}).then((({data:e})=>e)).catch((e=>{var t;const n=["Error fetching token prices from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&n.push(`with status ${e.response.status}`):n.push(e),Promise.reject(n.join(" "))})).finally((()=>{e.length}))}fetchNative({signal:e}={}){let t;!function(e){e.ETH="ethereum",e.MATIC="matic-network",e.XDAI="xdai"}(t||(t={}));let n=t.ETH;return 137===this.chainId&&(n=t.MATIC),100===this.chainId&&(n=t.XDAI),H.get(`https://api.coingecko.com/api/v3/simple/price/?vs_currencies=eth,usd&ids=${n}`,{signal:e}).then((({data:e})=>e[n])).catch((e=>{var t;const n=["Error fetching native token from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&n.push(`with status ${e.response.status}`):n.push(e),Promise.reject(n.join(" "))})).finally((()=>{}))}find(e){const t=Nn(e,this.chainId);if(!this.prices[t]){if(0===Object.keys(this.prices).length)for(const e of this.baseTokenAddresses)this.prices[e]=this.debouncer.fetch(e).then((t=>t[e]));if(t===fn(this.chainId).Addresses.nativeAsset.toLowerCase())return this.nativePrice||(this.prices[t]=this.fetchNative()),this.prices[t];this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))}return this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}platform(e){switch(e){case 1:case 5:case 42:case 31337:return"ethereum";case 100:return"xdai";case 137:return"polygon-pos";case 250:return"fantom";case 1101:return"polygon-zkevm";case 42161:return"arbitrum-one";case 43114:return"avalanche"}return"2"}url(e){return`${this.urlBase}&contract_addresses=${e.join(",")}`}}class ip{constructor(e=1){this.chainId=e,this.prices={},this.urlBase=`https://api.coingecko.com/api/v3/coins/${this.platform(e)}/contract/%TOKEN_ADDRESS%/market_chart/range?vs_currency=usd`}fetch(e,t,{signal:n}={}){const a=this.urlRange(e,t);return H.get(a,{signal:n}).then((({data:e})=>e)).catch((e=>{var t;const n=["Error fetching historical token prices from coingecko"];return e.isAxiosError?(null===(t=e.response)||void 0===t?void 0:t.status)&&n.push(`with status ${e.response.status}`):n.push(e),Promise.reject(n.join(" "))})).finally((()=>{}))}async find(e){throw"Historic price requires point-in-time timestamp, please use findBy(address, timestamp)"}async findBy(e,t){const n=Nn(e,this.chainId);return{usd:`${(await this.fetch(n,t)).prices[0][1]}`}}platform(e){switch(e){case 1:case 5:case 42:case 31337:return"ethereum";case 137:return"polygon-pos";case 42161:return"arbitrum-one";case 100:return"xdai"}return"2"}urlRange(e,t){const n=t-3600,a=t+3600;return`${this.urlBase.replace("%TOKEN_ADDRESS%",e)}&from=${n}&to=${a}`}}class sp{constructor(e,t=1){this.subgraphUrl=e,this.chainId=t,this.prices={},this.debouncer=new Vn(this.fetch.bind(this),200)}async fetch(e,{signal:t}={}){return e.length,H.post(this.subgraphUrl,{variables:{addresses:e},query:"query($addresses: [String!]) {\n            tokens(\n              where: {\n                id_in: $addresses\n              }\n            ) {\n              address\n              latestUSDPrice\n            }\n          }"},{signal:t}).then((e=>e.data.data)).then((({tokens:e})=>Object.fromEntries(e.map((e=>[e.address,{usd:e.latestUSDPrice||void 0}]))))).finally((()=>{e.length}))}async find(e){const t=Nn(e,this.chainId);return this.prices[t]||(this.prices[t]=this.debouncer.fetch(t).then((e=>e[t]))),this.prices[t]}async findBy(e,t){if("address"==e)return this.find(t)}}class rp{constructor(e,t,n){this.coingeckoRepository=e,this.subgraphRepository=t,this.aaveRates=n}async find(e){let t;try{if(t=await this.coingeckoRepository.find(e),!(null==t?void 0:t.usd))throw new Error("Price not found")}catch(n){Ae.getInstance().warn(n),t=await this.subgraphRepository.find(e)}const n=await this.aaveRates.getRate(e)||1;return t&&t.usd?{...t,usd:(parseFloat(t.usd)*n).toString()}:t}async findBy(e,t){if("address"===e)return this.find(t);throw`Token price search by ${e} not implemented`}}class pp{constructor(e,t){this.coingeckoRepository=e,this.aaveRates=t}async find(e){return this.findBy(e,Math.floor(Date.now()/1e3))}async findBy(e,t){const n=await this.coingeckoRepository.findBy(e,t),a=await this.aaveRates.getRate(e)||1;return n&&n.usd?{...n,usd:(parseFloat(n.usd)*a).toString()}:n}}const lp=["function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"],dp=new t(["function getTokensDistributedInWeek(address token, uint timestamp) view returns (uint)","function claimTokens(address user, address[] tokens) returns (uint256[])","function claimToken(address user, address token) returns (uint256)"]),up=new t(["function totalSupply() view returns (uint)"]),cp=new t(["function getRate() view returns (uint)"]);class yp{constructor(e,t,n,a,o,i){this.multicall=e,this.feeDistributorAddress=t,this.balAddress=n,this.veBalAddress=a,this.bbAUsdAddress=o,this.feeDistributor=((e,t)=>new u(e,lp,t))(t,i)}async fetch(e){const t=this.getPreviousWeek(e),n=[{target:this.feeDistributorAddress,callData:dp.encodeFunctionData("getTokensDistributedInWeek",[d(this.balAddress),t])},{target:this.feeDistributorAddress,callData:dp.encodeFunctionData("getTokensDistributedInWeek",[d(this.bbAUsdAddress),t])},{target:this.veBalAddress,callData:up.encodeFunctionData("totalSupply",[])},{target:this.bbAUsdAddress,callData:cp.encodeFunctionData("getRate",[])}],[,a]=await this.multicall.callStatic.aggregate(n);return{balAmount:parseFloat(kn(a[0],18)),bbAUsdAmount:parseFloat(kn(a[1],18)),veBalSupply:parseFloat(kn(a[2],18)),bbAUsdPrice:parseFloat(kn(a[3],18)),balAddress:this.balAddress}}async multicallData(e){return this.data||(this.data=await this.fetch(e)),this.data}getPreviousWeek(e){const t=new Date(e);t.setUTCHours(0),t.setUTCMinutes(0),t.setUTCSeconds(0),t.setUTCMilliseconds(0);let n=t.getUTCDay()-4;return n<0&&(n+=7),n+=7,Math.floor(t.getTime()/1e3)-86400*n}async getClaimableBalances(e,t){try{const n=await this.feeDistributor.callStatic.claimTokens(e,t);return this.extractTokenBalance(t,n)}catch(e){return{}}}claimBalances(e,t){return dp.encodeFunctionData("claimTokens",[e,t])}extractTokenBalance(e,t){return e.reduce(((e,n,a)=>{var o;return e[n]=null!==(o=t[a])&&void 0!==o?o:r.from(0),e}),{})}}const mp=new t(["function getProtocolFeesCollector() view returns (address)"]),bp=new t(["function getSwapFeePercentage() view returns (uint)"]);let fp;class Tp{constructor(e,t){this.provider=t,this.vault=new u(e,mp,this.provider)}async fetch(){const e=await this.vault.getProtocolFeesCollector(),t=new u(e,bp,this.provider),n=await t.getSwapFeePercentage();return parseFloat(kn(n,18))}async find(){return fp||(fp=this.fetch()),this.swapFeePercentage=await fp,this.swapFeePercentage}async findBy(){return this.find()}}const hp=new t(["function getSwapFeePercentage() view returns (uint)"]);let Ip;class gp{constructor(e,t){this.multicall=e,this.protocolFeePercentagesProviderAddress=t}async fetch(){const e=[{target:this.protocolFeePercentagesProviderAddress,callData:hp.encodeFunctionData("getFeeTypePercentage",[0])},{target:this.protocolFeePercentagesProviderAddress,callData:hp.encodeFunctionData("getFeeTypePercentage",[2])}],[,t]=await this.multicall.callStatic.aggregate(e);return{swapFee:parseFloat(kn(t[0],18)),yieldFee:parseFloat(kn(t[2],18))}}async getFees(){return Ip||(Ip=this.fetch()),this.protocolFees=await Ip,this.protocolFees}}class _p{constructor(e="https://yield-tokens.balancer.workers.dev/"){this.url=e}async fetch(){let e={};try{e=(await H.get(this.url)).data}catch(e){Ae.getInstance().warn(`Failed to fetch yield tokens: ${e}`)}return e}async find(e){const t=e.toLocaleLowerCase();return this.yields||(this.yields=this.fetch()),this.yields.then((e=>e[t]&&e[t]>0?e[t]:0))}async findBy(e,t){return"address"!=e?0:this.find(t)}}const wp=e=>`{\n  blocks(first: 1, orderBy: timestamp, orderDirection: asc, where: { timestamp_gt: ${e} }) {\n    number\n  }\n}`,Pp=async(e,t)=>{const n={query:wp(t)},a=await H.post(e,n),{data:{blocks:o}}=a.data;return parseInt(o[0].number)};class xp{constructor(e){this.endpoint=e,this.blocks={}}async find(e){if("dayAgo"==e){const e=""+(Math.floor(Date.now()/1e3)-86400);return this.blocks[e]||(this.blocks={...this.blocks,[e]:Pp(this.endpoint,e)}),this.blocks[e]}}async findBy(e="",t=""){}}var Ep=[{chainId:1,address:"0x8888801af4d980682e47f1a9036e589479e835c5",symbol:"mph"},{chainId:1,address:"0x27054b13b1b798b345b591a4d22e6562d47ea75a",symbol:"ast"},{chainId:1,address:"0x3301ee63fb29f863f2333bd4466acb46cd8323e6",symbol:"akita"},{chainId:1,address:"0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",symbol:"aurabal"},{chainId:1,address:"0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",symbol:"aura"},{chainId:1,address:"0x3472a5a71965499acd81997a54bba8d852c6e53d",symbol:"badger"},{chainId:1,address:"0xba100000625a3754423978a60c9317c58a424e3d",symbol:"bal"},{chainId:1,address:"0x804cdb9116a10bb78768d3252355a1b18067bf8f",symbol:"bb-a-dai"},{chainId:1,address:"0x9210f1204b5a24742eba12f710636d76240df3d0",symbol:"bb-a-usdc"},{chainId:1,address:"0x2bbf681cc4eb09218bee85ea2a5d3d13fa40fc0c",symbol:"bb-a-usdt"},{chainId:1,address:"0x7b50775383d3d6f0215a8f290f2c9e2eebbeceb2",symbol:"bb-a-usd"},{chainId:1,address:"0x2d94aa3e47d9d5024503ca8491fce9a2fb4da198",symbol:"bank"},{chainId:1,address:"0x0d8775f648430679a709e98d2b0cb6250d2887ef",symbol:"bat"},{chainId:1,address:"0xf17e65822b568b3903685a7c9f496cf7656cc6c2",symbol:"bico"},{chainId:1,address:"0x799ebfabe77a6e34311eeee9825190b9ece32824",symbol:"btrst"},{chainId:1,address:"0x514910771af9ca656af840dff83e8264ecf986ca",symbol:"link"},{chainId:1,address:"0x3506424f91fd33084466f402d5d97f05f8e3b4af",symbol:"chz"},{chainId:1,address:"0x41e5560054824ea6b0732e656e3ad64e20e94e45",symbol:"cvc"},{chainId:1,address:"0xc00e94cb662c3520282e6f5717214004a7f26888",symbol:"comp"},{chainId:1,address:"0xdef1ca1fb7fbcdc777520aa7f396b4e015f497ab",symbol:"cow"},{chainId:1,address:"0xd533a949740bb3306d119cc777fa900ba034cd52",symbol:"crv"},{chainId:1,address:"0x6b175474e89094c44da98b954eedeac495271d0f",symbol:"dai"},{chainId:1,address:"0xf2051511b9b121394fa75b8f7d4e7424337af687",symbol:"haus"},{chainId:1,address:"0x888888435fde8e7d4c54cab67f206e4199454c60",symbol:"dfx"},{chainId:1,address:"0x798d1be841a82a273720ce31c822c61a67a601c3",symbol:"digg"},{chainId:1,address:"0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",symbol:"enj"},{chainId:1,address:"0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",symbol:"ens"},{chainId:1,address:"0x4e15361fd6b4bb609fa63c81a2be19d873717870",symbol:"ftm"},{chainId:1,address:"0x956f47f50a910163d8bf957cf5846d573e7f87ca",symbol:"fei"},{chainId:1,address:"0xed1480d12be41d92f36f5f7bdd88212e381a3677",symbol:"fdt"},{chainId:1,address:"0x586aa273f262909eef8fa02d90ab65f5015e0516",symbol:"fiat"},{chainId:1,address:"0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",symbol:"gtc"},{chainId:1,address:"0x900db999074d9277c5da2a43f252d74366230da0",symbol:"giv"},{chainId:1,address:"0x6810e776880c02933d47db1b9fc05908e5386b96",symbol:"gno"},{chainId:1,address:"0xba485b556399123261a5f9c95d413b4f93107407",symbol:"graviaura"},{chainId:1,address:"0x3ec8798b81485a254928b70cda1cf0a2bb0b74d7",symbol:"gro"},{chainId:1,address:"0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f",symbol:"snx"},{chainId:1,address:"0x5a98fcbea516cf06857215779fd812ca3bef1b32",symbol:"ldo"},{chainId:1,address:"0x6dea81c8171d0ba574754ef6f8b412f2ed88c54d",symbol:"lqty"},{chainId:1,address:"0x5f98805a4e8be255a32880fdec7f6728c6568ba0",symbol:"lusd"},{chainId:1,address:"0x965d79f1a1016b574a62986e13ca8ab04dfdd15c",symbol:"m2"},{chainId:1,address:"0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",symbol:"mkr"},{chainId:1,address:"0xd084944d3c05cd115c09d072b9f44ba3e0e45921",symbol:"fold"},{chainId:1,address:"0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",symbol:"matic"},{chainId:1,address:"0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2",symbol:"mta"},{chainId:1,address:"0x4b13006980acb09645131b91d259eaa111eaf5ba",symbol:"myc"},{chainId:1,address:"0x333a4823466879eef910a04d473505da62142069",symbol:"nation"},{chainId:1,address:"0xcfeaead4947f0705a14ec42ac3d44129e1ef3ed5",symbol:"note"},{chainId:1,address:"0x967da4048cd07ab37855c090aaf366e4ce1b9f48",symbol:"ocean"},{chainId:1,address:"0x64aa3364f17a4d01c6f1751fd97c2bd3d7e7f1d5",symbol:"ohm"},{chainId:1,address:"0xab846fb6c81370327e784ae7cbb6d6a6af6ff4bf",symbol:"pal"},{chainId:1,address:"0xcafe001067cdef266afb7eb5a286dcfd277f3de5",symbol:"psp"},{chainId:1,address:"0x68037790a0229e9ce6eaa8a99ea92964106c4703",symbol:"par"},{chainId:1,address:"0x45804880de22913dafe09f4980848ece6ecbaf78",symbol:"paxg"},{chainId:1,address:"0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed",symbol:"pnt"},{chainId:1,address:"0x9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",symbol:"poly"},{chainId:1,address:"0x43d4a3cd90ddd2f8f4f693170c9c8098163502ad",symbol:"d2d"},{chainId:1,address:"0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",symbol:"renbtc"},{chainId:1,address:"0x408e41876cccdc0f92210600ef50372656052a38",symbol:"ren"},{chainId:1,address:"0xfb5453340c03db5ade474b27e68b6a9c6b2823eb",symbol:"robot"},{chainId:1,address:"0xd33526068d116ce69f19a9ee46f0bd304f21a51f",symbol:"rpl"},{chainId:1,address:"0xae78736cd615f374d3085123a210448e74fc6393",symbol:"reth"},{chainId:1,address:"0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",symbol:"sbtc"},{chainId:1,address:"0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",symbol:"srm"},{chainId:1,address:"0x35e78b3982e87ecfd5b3f3265b601c046cdbe232",symbol:"xai"},{chainId:1,address:"0x3affcca64c2a6f4e3b6bd9c64cd2c969efd1ecbe",symbol:"dsla"},{chainId:1,address:"0xf24d8651578a55b0c119b9910759a351a3458895",symbol:"sdbal"},{chainId:1,address:"0x11c1a6b3ed6bb362954b29d3183cfa97a0c806aa",symbol:"str"},{chainId:1,address:"0x8f693ca8d21b157107184d29d398a8d082b38b76",symbol:"data"},{chainId:1,address:"0x470ebf5f030ed85fc1ed4c2d36b9dd02e77cf1b7",symbol:"temple"},{chainId:1,address:"0xa36fdbbae3c9d55a1d67ee5821d53b50b63a1ab9",symbol:"temp"},{chainId:1,address:"0xdac17f958d2ee523a2206206994597c13d831ec7",symbol:"usdt"},{chainId:1,address:"0x9c4a4204b79dd291d6b6571c5be8bbcd0622f050",symbol:"tcr"},{chainId:1,address:"0x226f7b842e0f0120b7e194d05432b3fd14773a9d",symbol:"unn"},{chainId:1,address:"0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",symbol:"uni"},{chainId:1,address:"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",symbol:"usdc"},{chainId:1,address:"0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",symbol:"vita"},{chainId:1,address:"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",symbol:"weth"},{chainId:1,address:"0xedb171c18ce90b633db442f2a6f72874093b49ef",symbol:"wampl"},{chainId:1,address:"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",symbol:"wbtc"},{chainId:1,address:"0xf203ca1769ca8e9e8fe1da9d147db68b6c919817",symbol:"wncg"},{chainId:1,address:"0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",symbol:"wsteth"},{chainId:1,address:"0x79c71d3436f39ce382d0f58f1b011d88100b9d91",symbol:"xns"},{chainId:1,address:"0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e",symbol:"yfi"},{chainId:1,address:"0xbcca60bb61934080951369a648fb03df4f96263c",symbol:"ausdc"},{chainId:1,address:"0x028171bca77440897b824ca71d1c56cac55b68a3",symbol:"adai"},{chainId:1,address:"0x3ed3b47dd13ec9a98b44e6204a523e766b225811",symbol:"ausdt"},{chainId:137,address:"0x9c2c5fd7b07e95ee044ddeba0e97a665f142394f",symbol:"1inch"},{chainId:137,address:"0xd6df932a45c0f255f85145f286ea0b292b21c90b",symbol:"aave"},{chainId:137,address:"0xc3fdbadc7c795ef1d6ba111e06ff8f16a20ea539",symbol:"addy"},{chainId:137,address:"0xf84bd51eab957c2e7b7d646a3427c5a50848281d",symbol:"agar"},{chainId:137,address:"0x033d942a6b495c4071083f4cde1f17e986fe856c",symbol:"aga"},{chainId:137,address:"0x0e9b89007eee9c958c0eda24ef70723c2c93dd58",symbol:"amaticc"},{chainId:137,address:"0x034b2090b579228482520c589dbd397c53fc51cc",symbol:"vision"},{chainId:137,address:"0x2c89bbc92bd86f8075d1decc58c7f4e0107f286b",symbol:"avax"},{chainId:137,address:"0x49690541e3f6e933a9aa3cffee6010a7bb5b72d7",symbol:"axiav3"},{chainId:137,address:"0x9a71012b13ca4d3d0cdc72a177df3ef03b0e76a3",symbol:"bal"},{chainId:137,address:"0xdb7cb471dd0b49b29cab4a1c14d070f27216a0ab",symbol:"bank"},{chainId:137,address:"0xfbdd194376de19a88118e84e279b977f165d01b8",symbol:"bifi"},{chainId:137,address:"0xd6ca869a4ec9ed2c7e618062cdc45306d8dbbc14",symbol:"btc2x-fli-p"},{chainId:137,address:"0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39",symbol:"link"},{chainId:137,address:"0x172370d5cd63279efa6d502dab29171933a610af",symbol:"crv"},{chainId:137,address:"0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",symbol:"dai"},{chainId:137,address:"0x1d607faa0a51518a7728580c238d912747e71f7a",symbol:"data"},{chainId:137,address:"0x85955046df4668e1dd369d2de9f3aeb98dd2a369",symbol:"dpi"},{chainId:137,address:"0xe7804d91dfcde7f776c90043e03eaa6df87e6395",symbol:"dfx"},{chainId:137,address:"0xf28164a485b0b2c90639e47b0f377b4a438a16b1",symbol:"dquick"},{chainId:137,address:"0x45c32fa6df82ead1e2ef74d17b76547eddfaff89",symbol:"frax"},{chainId:137,address:"0x50b728d8d964fd00c2d0aad81718b71311fef68a",symbol:"snx"},{chainId:137,address:"0x72928d5436ff65e57f72d5566dcd3baedc649a88",symbol:"hdao"},{chainId:137,address:"0x3ad707da309f3845cd602059901e39c4dcd66473",symbol:"eth2x-fli-p"},{chainId:137,address:"0x4f025829c4b13df652f38abd2ab901185ff1e609",symbol:"ieth-fli-p"},{chainId:137,address:"0x340f412860da7b7823df372a2b59ff78b7ae6abc",symbol:"imatic-fli-p"},{chainId:137,address:"0xf287d97b6345bad3d88856b26fb7c0ab3f2c7976",symbol:"matic2x-fli-p"},{chainId:137,address:"0x130ce4e4f76c2265f94a961d70618562de0bb8d2",symbol:"ibtc-fli-p"},{chainId:137,address:"0x596ebe76e2db4470966ea395b0d063ac6197a8c5",symbol:"jrt"},{chainId:137,address:"0x3a58a54c066fdc0f2d55fc9c89f0415c92ebf3c4",symbol:"stmatic"},{chainId:137,address:"0xf501dd45a1198c2e1b5aef5314a68b9006d842e0",symbol:"mta"},{chainId:137,address:"0xeaecc18198a475c921b24b8a6c1c1f0f5f3f7ea0",symbol:"seed"},{chainId:137,address:"0xfe712251173a2cd5f5be2b46bb528328ea3565e1",symbol:"mvi"},{chainId:137,address:"0xa3fa99a148fa48d14ed51d610c367c61876997f1",symbol:"mimatic"},{chainId:137,address:"0xa486c6bc102f409180ccb8a94ba045d39f8fc7cb",symbol:"nex"},{chainId:137,address:"0xe2aa7db6da1dae97c5f5c6914d285fbfcc32a128",symbol:"par"},{chainId:137,address:"0x580a84c73811e1839f75d86d75d88cca0c241ff4",symbol:"qi"},{chainId:137,address:"0x831753dd7087cac61ab5644b308642cc1c33dc13",symbol:"quick"},{chainId:137,address:"0xb5c064f955d8e7f38fe0460c556a72987494ee17",symbol:"quick"},{chainId:137,address:"0x00e5646f60ac6fb446f621d146b6e1886f002905",symbol:"rai"},{chainId:137,address:"0x431cd3c9ac9fc73644bf68bf5691f4b83f9e104f",symbol:"rbw"},{chainId:137,address:"0xdbf31df14b66535af65aac99c32e9ea844e14501",symbol:"renbtc"},{chainId:137,address:"0x501ace9c35e60f03a2af4d484f49f9b1efde9f40",symbol:"solace"},{chainId:137,address:"0xfa68fb4628dff1028cfec22b4162fccd0d45efb6",symbol:"maticx"},{chainId:137,address:"0x0b3f868e0be5597d5db7feb59e1cadbb0fdda50a",symbol:"sushi"},{chainId:137,address:"0xdf7837de1f2fa4631d716cf2502f8b230f1dcc32",symbol:"tel"},{chainId:137,address:"0xe6469ba6d2fd6130788e0ea9c0a0515900563b59",symbol:"ust"},{chainId:137,address:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",symbol:"usdt"},{chainId:137,address:"0x5fe2b58c013d7601147dcdd68c143a77499f5531",symbol:"grt"},{chainId:137,address:"0xbbba073c31bf03b8acf7c28ef0738decf3695683",symbol:"sand"},{chainId:137,address:"0x2934b36ca9a4b31e633c5be670c8c8b28b6aa015",symbol:"thx"},{chainId:137,address:"0x2f800db0fdb5223b3c3f354886d907a671414a7f",symbol:"bct"},{chainId:137,address:"0x2e1ad108ff1d8c782fcbbb89aad783ac49586756",symbol:"tusd"},{chainId:137,address:"0x3809dcdd5dde24b37abe64a5a339784c3323c44f",symbol:"swap"},{chainId:137,address:"0x7fbc10850cae055b27039af31bd258430e714c62",symbol:"ubt"},{chainId:137,address:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",symbol:"usdc"},{chainId:137,address:"0x7ceb23fd6bc0add59e62ac25578270cff1b9f619",symbol:"weth"},{chainId:137,address:"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270",symbol:"wmatic"},{chainId:137,address:"0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",symbol:"wbtc"},{chainId:137,address:"0x24834bbec7e39ef42f4a75eaf8e5b6486d3f0e57",symbol:"lunc"},{chainId:137,address:"0xf153eff70dc0bf3b085134928daeea248d9b30d0",symbol:"xmark"},{chainId:42161,address:"0x9f20de1fc9b161b34089cbeae888168b44b03461",symbol:"arbis"},{chainId:42161,address:"0x040d1edc9569d4bab2d15287dc5a4f10f56a56b8",symbol:"bal"},{chainId:42161,address:"0x031d35296154279dc1984dcd93e392b1f946737b",symbol:"cap"},{chainId:42161,address:"0xf97f4df75117a78c1a5a0dbb814af92458539fb4",symbol:"link"},{chainId:42161,address:"0x354a6da3fcde098f8389cad84b0182725c6c91de",symbol:"comp"},{chainId:42161,address:"0xf4d48ce3ee1ac3651998971541badbb9a14d7234",symbol:"cream"},{chainId:42161,address:"0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",symbol:"crv"},{chainId:42161,address:"0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",symbol:"dai"},{chainId:42161,address:"0x8038f3c971414fd1fc220ba727f2d4a0fc98cb65",symbol:"dht"},{chainId:42161,address:"0xf0b5ceefc89684889e5f7e0a7775bd100fcd3709",symbol:"dusd"},{chainId:42161,address:"0x6c2c06790b3e3e3c38e12ee22f8183b37a13ee55",symbol:"dpx"},{chainId:42161,address:"0x32eb7902d4134bf98a28b963d26de779af92a212",symbol:"rdpx"},{chainId:42161,address:"0xc3ae0333f0f34aa734d5493276223d95b8f9cb37",symbol:"dxd"},{chainId:42161,address:"0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a",symbol:"gmx"},{chainId:42161,address:"0xa0b862f60edef4452f25b4160f177db44deb6cf1",symbol:"gno"},{chainId:42161,address:"0xb965029343d55189c25a7f3e0c9394dc0f5d41b1",symbol:"ndx"},{chainId:42161,address:"0x539bde0d7dbd336b79148aa742883198bbf60342",symbol:"magic"},{chainId:42161,address:"0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",symbol:"mcb"},{chainId:42161,address:"0x3f56e0c36d275367b8c502090edf38289b3dea0d",symbol:"mimatic"},{chainId:42161,address:"0x965772e0e9c84b6f359c8597c891108dcf1c5b1a",symbol:"pickle"},{chainId:42161,address:"0x6694340fc020c5e6b96567843da2df01b2ce1eb6",symbol:"stg"},{chainId:42161,address:"0xd4d42f0b6def4ce0383636770ef773390d85c61a",symbol:"sushi"},{chainId:42161,address:"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9",symbol:"usdt"},{chainId:42161,address:"0x23a941036ae778ac51ab04cea08ed6e2fe103614",symbol:"grt"},{chainId:42161,address:"0xa72159fc390f0e3c6d415e658264c7c4051e9b87",symbol:"tcr"},{chainId:42161,address:"0x4d15a3a2286d883af0aa1b3f21367843fac63e07",symbol:"tusd"},{chainId:42161,address:"0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0",symbol:"uni"},{chainId:42161,address:"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8",symbol:"usdc"},{chainId:42161,address:"0xa684cd057951541187f288294a1e1c2646aa2d24",symbol:"vsta"},{chainId:42161,address:"0x64343594ab9b56e99087bfa6f2335db24c2d1f17",symbol:"vst"},{chainId:42161,address:"0x82af49447d8a07e3bd95bd0d56f35241523fbab1",symbol:"weth"},{chainId:42161,address:"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",symbol:"wbtc"},{chainId:42161,address:"0x82e3a8f066a6989666b031d916c43672085b1582",symbol:"yfi"}];class vp{constructor(e,t,n,a){if(this.pools=new Jr({url:e.urls.subgraph,chainId:e.chainId,query:a}),this.poolsForSor=new ls(as(e.urls.subgraph),t,e,void 0,a),this.poolsOnChain=new zr(this.pools,{provider:t,multicall:e.addresses.contracts.multicall,vault:e.addresses.contracts.vault},e.poolsToIgnore),this.poolShares=new tp(e.urls.subgraph,e.chainId),this.poolJoinExits=new ep(e.urls.subgraph,e.chainId),e.urls.gaugesSubgraph&&(this.poolGauges=new Zr(e.urls.gaugesSubgraph,e.chainId),this.gaugeShares=new Nr(e.urls.gaugesSubgraph,e.chainId)),e.urls.blockNumberSubgraph){this.blockNumbers=new xp(e.urls.blockNumberSubgraph);const t=async()=>{if(this.blockNumbers)return await this.blockNumbers.find("dayAgo")};this.yesterdaysPools=new Jr({url:e.urls.subgraph,chainId:e.chainId,blockHeight:t,query:a})}else if(e.averageBlockTime){const n=async()=>await t.getBlockNumber()-Math.round(86400/(e.averageBlockTime||2));this.yesterdaysPools=new Jr({url:e.urls.subgraph,chainId:e.chainId,blockHeight:n,query:a})}const o=Ep.filter((t=>t.chainId==e.chainId)).map((e=>e.address)),i=new op(o,e.chainId),s=new sp(e.urls.subgraph,e.chainId),r=new Bn(n.contracts.multicall,e.chainId);this.tokenPrices=new rp(i,s,r);const p=new ip(e.chainId);this.tokenHistoricalPrices=new pp(p,r),this.tokenMeta=new np([]),e.urls.gaugesSubgraph&&(this.liquidityGauges=new Gr(e.urls.gaugesSubgraph,n.contracts.multicall,e.addresses.contracts.gaugeController||"",e.chainId)),e.addresses.contracts.feeDistributor&&e.addresses.tokens.bal&&e.addresses.tokens.veBal&&e.addresses.tokens.bbaUsd&&(this.feeDistributor=new yp(n.contracts.multicall,e.addresses.contracts.feeDistributor,e.addresses.tokens.bal,e.addresses.tokens.veBal,e.addresses.tokens.bbaUsd,t)),this.feeCollector=new Tp(e.addresses.contracts.vault,t),e.addresses.contracts.protocolFeePercentagesProvider&&(this.protocolFees=new gp(n.contracts.multicall,e.addresses.contracts.protocolFeePercentagesProvider)),this.tokenYields=new _p}}const Sp=(e,t)=>"Stable"===e?ks.LEGACY_STABLE:"ComposableStable"===e&&1===t?ks.COMPOSABLE_STABLE:"ComposableStable"===e?ks.COMPOSABLE_STABLE_V2:ks.WEIGHTED,Ap=Ms.encodeSetRelayerApproval,kp=Ms.encodeGaugeWithdraw,Op=Ms.encodeGaugeDeposit,Mp=Ms.encodePeekChainedReferenceValue,Cp=qe.createInterface(),Rp=(e,t)=>{var n;return(null===(n=e.poolType)||void 0===n?void 0:n.match(/.*Linear.*/))?Bp(e,t):[]},Bp=(e,t)=>{if(!(e.id&&t.id&&e.tokens&&t.tokens&&e.mainIndex&&t.mainIndex))throw"Missing tokens";const n=e.tokens[e.mainIndex];return[{poolId:e.id,assetIn:e.address,assetOut:n.address},{poolId:t.id,assetIn:n.address,assetOut:t.address}]},Fp=async(e,t)=>{const n=await t.find(e);if(!n)throw`Pool ${e} not found`;const a=async(e,n)=>{let o=[{address:e}];const i=await t.findBy("address",e);if(i&&e!=n){const t=i.tokens.sort(Np),n=await Promise.all(t.map((({address:e})=>a(e,i.address))));o=[{address:e,id:i.id,poolType:i.poolType,poolTypeVersion:i.poolTypeVersion,mainIndex:i.mainIndex,tokens:n.flat()}]}return o},o=n.tokens.sort(Np);return{id:e,address:n.address,tokens:(await Promise.all(o.map((({address:e})=>a(e,n.address))))).flat(),poolType:n.poolType,poolTypeVersion:n.poolTypeVersion,mainIndex:n.mainIndex}},Np=(e,t)=>e.address.toLowerCase()>t.address.toLowerCase()?1:-1,Dp=(e,t,n,a,o,i,p=!1,l,d,u)=>{if(!(o.id&&i.id&&o.tokens&&i.tokens&&o.poolType&&i.poolType))throw"Pool data is missing";const c=o.tokens.flatMap((({address:e})=>e)),y=i.tokens.flatMap((({address:e})=>e)),m="ComposableStable"==o.poolType&&1==o.poolTypeVersion?0:-1;let b,f=[];m>-1?(b=[{index:m,key:Ms.toChainedReference(`10${m}`)}],f=[Ms.toChainedReference(`20${m}`)]):(b=c.map(((e,t)=>({index:t,key:Ms.toChainedReference(`10${t}`)}))),f=c.map(((e,t)=>Ms.toChainedReference(`20${t}`))));const T=Ms.toChainedReference("999"),h=[];let I=!1;"ComposableStable"===o.poolType&&(I=!0),u&&h.push(Ap(t,!0,u)),l&&h.push(kp(l,e,t,n)),h.push(((e,t,n,a,o=-1,i,s,r,p,l=!0)=>{let d;const u="ComposableStable"===t&&1===n;d=o>-1?ee.exitExactBPTInForOneTokenOut(s,o):(u?re.exitExactBPTInForAllTokensOut:ee.exitExactBPTInForTokensOut)(s);const c=Sp(t,n);return Ms.encodeExitPool({poolId:e,poolKind:c,sender:r,recipient:p,outputReferences:i,exitPoolRequest:{assets:a,minAmountsOut:new Array(a.length).fill("0"),userData:d,toInternalBalance:l}})})(o.id,o.poolType,o.poolTypeVersion||1,c,m,b,n,l?t:e,t));const g=((e,t,n)=>{const a=({tokens:e,mainIndex:t})=>e&&t&&e[t].address||"",o=e.flatMap(a),i=t.flatMap(a),s=o.map(((e,t)=>e&&[t,i.indexOf(e)]||[-1,-1])).map((([n,a])=>{if(-1===n||-1===a)return[];const o=e[n],i=t[a];return Rp(o,i)}));return n>-1?[s[n]]:s})(o.tokens,i.tokens,m);if(g.flat().length>0){const e=g.map(((e,t)=>({path:e,inputAmount:String(b[t].key),outputReference:f[t]}))).filter((({path:e})=>e.length>0));h.push(((e,t,n,a,o=!0)=>{const i=[],p=[],l=[],d=[];n.forEach((e=>{const{path:t,inputAmount:n,outputReference:a}=e;for(let e=0;e<t.length;e++){const{poolId:a,assetIn:o,assetOut:r}=t[e];i.push(o),i.push(r),p.push(s.toString()),p.push("0");const l={poolId:a,assetInIndex:2*e,assetOutIndex:2*e+1,amount:0===e?n:"0",userData:"0x"};d.push(l)}l.push({index:2*t.length-1,key:a})}));const u={sender:e,recipient:t,fromInternalBalance:!0,toInternalBalance:o};return Ms.encodeBatchSwap({swapType:pa.SwapExactIn,swaps:d,assets:i,funds:u,limits:p,deadline:a||r.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:l})})(t,t,e))}const _=y.filter((e=>i.address!=e)).map((e=>{var t;const n=c.indexOf(e);return String(I&&f[n]||(null===(t=b[n])||void 0===t?void 0:t.key)||0)}));h.push(((e,t,n,a,o,i,r,p,l,d=!0)=>{const u=a.map((()=>s)),c=ee.joinExactTokensInForBPTOut(o,i),y=Sp(t,n);return Ms.encodeJoinPool({poolId:e,kind:y,sender:p,recipient:l,joinPoolRequest:{assets:a,maxAmountsIn:u,userData:c,fromInternalBalance:d},value:"0",outputReference:r})})(i.id,i.poolType,i.poolTypeVersion||1,y,_,a,String(T),t,d?t:e,!0)),!0===p&&h.push(Mp(String(T))),d&&h.push(Op(d,t,e,String(T)));return Cp.encodeFunctionData("multicall",[h])};class Lp{constructor({relayerAddress:e,poolsRepository:t,gaugesRepository:n,provider:a}){this.getExpectedBptOut=Lp.getExpectedBptOut,this.relayerAddress=e,this.poolsRepository=t,this.gaugesRepository=n,this.provider=a}async pool2pool({user:e,from:t,to:n,balance:a,minBptOut:o="0",authorisation:i}){const s=await Fp(t,this.poolsRepository),r=await Fp(n,this.poolsRepository),p=Dp(e,this.relayerAddress,String(a),o,s,r,"0"==o,void 0,void 0,i);return{to:this.relayerAddress,data:p}}async pool2poolWithGauges({user:e,from:t,to:n,balance:a,minBptOut:o="0",authorisation:i}){const s=await this.gaugesRepository.findBy("poolId",t),r=await this.gaugesRepository.findBy("poolId",n);if(!(s&&s.poolId&&r&&r.poolId))throw new Error("Gauge not found");const p=await Fp(s.poolId,this.poolsRepository),l=await Fp(r.poolId,this.poolsRepository),d=Dp(e,this.relayerAddress,String(a),o,p,l,"0"==o,s.id,r.id,i);return{to:this.relayerAddress,data:d}}async gauge2gauge({user:e,from:t,to:n,balance:a,authorisation:o}){const i=[kp(t,e,this.relayerAddress,a),Op(n,this.relayerAddress,e,a)];o&&i.unshift(Ap(this.relayerAddress,!0,o));const s=Cp.encodeFunctionData("multicall",[i]);return{to:this.relayerAddress,data:s}}}Lp.getExpectedBptOut=e=>{const t=Cp.decodeFunctionResult("multicall",e)[0].slice(-2).filter((e=>"0x"!==e));return String(BigInt(t))};class Up{constructor(e,t=new ys(e),n=new Cs(e)){this.config=e,this.sor=t,this.subgraph=n;Ae.getInstance().setLoggingEnabled(!!e.enableLogging),this.networkConfig=cs(e),this.provider=t.provider,this.balancerContracts=new Ls(this.networkConfig.addresses.contracts,t.provider),this.data=new vp(this.networkConfig,t.provider,this.balancerContracts,e.subgraphQuery),this.swaps=new As(this.config),this.relayer=new Ms,this.pricing=new Rs(e,this.swaps),this.pools=new Or(this.networkConfig,this.data,this.balancerContracts),this.data.liquidityGauges&&(this.claimService=new To(this.data.liquidityGauges,this.data.feeDistributor,this.networkConfig.chainId,this.contracts.multicall,this.networkConfig.addresses.contracts.gaugeClaimHelper,this.networkConfig.addresses.contracts.balancerMinter),this.migrationService=new Lp({relayerAddress:this.networkConfig.addresses.contracts.balancerRelayer,poolsRepository:this.data.pools,gaugesRepository:this.data.liquidityGauges.subgraph,provider:this.provider})),this.vaultModel=new dr(this.data.poolsForSor,this.networkConfig.addresses.tokens.wrappedNativeAsset)}get contracts(){return this.balancerContracts.contracts}}var Vp,Gp;!function(e){e[e.Direct=0]="Direct",e[e.TokenIn=1]="TokenIn",e[e.TokenOut=2]="TokenOut",e[e.Middle=3]="Middle"}(Vp||(Vp={})),function(e){e[e.BatchSwap=0]="BatchSwap",e[e.Join=1]="Join",e[e.Exit=2]="Exit"}(Gp||(Gp={}));class qp{constructor(e,t,n,a,o,i,s,r,p,l){const d=this.getActionStep(e,t,n,a);this.amountIn=this.getActionAmount(o,Gp.BatchSwap,d,s),this.hasTokenIn=this.actionHasTokenIn(d),this.hasTokenOut=this.actionHasTokenOut(d);const u=this.hasTokenOut?i:"0";this.minOut=this.getActionMinOut(u,r);const[c,y]=this.getActionOutputRef(d,a,s);this.nextOpRefKey=y,this.opRefStart=c,this.sender=this.getSender(this.hasTokenIn,p,l),this.receiver=this.getReceiver(this.hasTokenOut,p,l)}getActionAmount(e,t,n,a){let o=e;return(n===Vp.TokenOut||n===Vp.Middle&&t===Gp.Join||n===Vp.Middle&&t===Gp.Exit)&&(o=Ms.toChainedReference(a-1).toString()),o}getActionOutputRef(e,t,n){let a={};return e!==Vp.TokenIn&&e!==Vp.Middle||(a=this.getOutputRef(n,t),n++),[a,n]}getActionMinOut(e,t){return jn(r.from(e),r.from(t)).toString()}getActionStep(e,t,n,a){let o;return o=n===e&&a===t?Vp.Direct:n===e?Vp.TokenIn:a===t?Vp.TokenOut:Vp.Middle,o}getOutputRef(e,t){return{index:t,key:Ms.toChainedReference(e)}}getFromInternal(e,t){return!e&&!t}getToInternal(e,t){return!e&&!t}actionHasTokenIn(e){return e===Vp.Direct||e===Vp.TokenIn}actionHasTokenOut(e){return e===Vp.Direct||e===Vp.TokenOut}getSender(e,t,n){return e?t:n}getReceiver(e,t,n){return e?t:n}getPoolKind(e){let t=0;return["MetaStable","Stable","StablePhantom"].includes(e)?t=1:"ComposableStable"===e&&(t=3),t}}class Wp extends qp{constructor(e,t,n,a,o,i,s,r){var p;super(t,n,e.assetInIndex,e.assetOutIndex,e.amount,null!==(p=e.returnAmount)&&void 0!==p?p:"0",a,i,s,r),this.opRefKey=a,this.type=Gp.Exit,this.poolId=e.poolId,this.tokenOut=o[e.assetOutIndex],this.toInternalBalance=this.getToInternal(this.hasTokenOut),this.opRef=this.opRefStart}callData(e,t){const n=e.tokensList,a=new Xt(t),[o]=a.sortTokens(n),i=this.tokenOut,s=o.findIndex((e=>e.toLowerCase()===i.toLowerCase())),r=Array(n.length).fill("0");r[s]=this.minOut;const p=this.amountIn,l={assets:o,minAmountsOut:r,userData:te.exitExactBPTInForOneTokenOut(p,s),toInternalBalance:this.toInternalBalance,poolId:this.poolId,poolKind:this.getPoolKind(e.poolType),sender:this.sender,recipient:this.receiver,outputReferences:this.opRef.key?[this.opRef]:[],exitPoolRequest:{}},d=Ms.formatExitPoolInput(l);return{params:l,encoded:Ms.encodeExitPool(d)}}getAmountIn(){return this.hasTokenIn?this.amountIn:"0"}getAmountOut(){return this.hasTokenOut?this.minOut:"0"}}class $p extends qp{constructor(e,t,n,a,o,i,s,r){var p;super(t,n,e.assetInIndex,e.assetOutIndex,e.amount,null!==(p=e.returnAmount)&&void 0!==p?p:"0",a,i,s,r),this.opRefKey=a,this.type=Gp.Join,this.poolId=e.poolId,this.tokenIn=o[e.assetInIndex],this.fromInternal=this.getFromInternal(this.hasTokenIn),this.opRef=this.opRefStart}callData(e,t){const n=e.tokensList,a=new Xt(t),[o]=a.sortTokens(n),i=this.tokenIn,s=o.findIndex((e=>e.toLowerCase()===i.toLowerCase())),r=Array(n.length).fill("0");r[s]=this.amountIn;const p=this.minOut,l=te.joinExactTokensInForBPTOut(r,p),d={poolId:this.poolId,sender:this.sender,recipient:this.receiver,kind:this.getPoolKind(e.poolType),joinPoolRequest:{assets:o,maxAmountsIn:r,userData:l,fromInternalBalance:this.fromInternal},value:"0",outputReference:this.opRef.key?this.opRef.key.toString():"0"};return{params:d,encoded:Ms.encodeJoinPool(d)}}getAmountIn(){return this.hasTokenIn?this.amountIn:"0"}getAmountOut(){return this.hasTokenOut?this.minOut:"0"}}class Hp extends qp{constructor(e,t,n,a,o,i,s,r,p){var l;super(t,n,e.assetInIndex,e.assetOutIndex,e.amount,null!==(l=e.returnAmount)&&void 0!==l?l:"0",a,i,r,p),this.mainTokenInIndex=t,this.mainTokenOutIndex=n,this.opRefKey=a,this.assets=o,this.slippage=i,this.pools=s,this.user=r,this.relayer=p,this.approveTokens=[],this.opRef=[],this.type=Gp.BatchSwap,this.swaps=[{...e,amount:this.amountIn}];const d=this.isBpt(s,o[e.assetInIndex]);d&&this.approveTokens.push(o[e.assetInIndex]),this.fromInternal=this.getFromInternal(this.hasTokenIn,d);const u=this.isBpt(s,o[e.assetOutIndex]);this.toInternal=this.getToInternal(this.hasTokenOut,u),this.limits=this.getLimits(o,e.assetInIndex,e.assetOutIndex,e.amount,this.hasTokenIn,this.hasTokenOut,this.minOut),this.opRefStart.index&&this.opRef.push(this.opRefStart)}getLimits(e,t,n,a,o,i,p){const l=e.map((()=>r.from(0)));return l[t]=o?r.from(a):s,i&&(l[n]=r.from(p).mul(-1)),l}updateLimits(e,t){t.hasTokenIn&&(e[t.swaps[0].assetInIndex]=e[t.swaps[0].assetInIndex].add(t.amountIn)),t.hasTokenOut&&(e[t.swaps[0].assetOutIndex]=e[t.swaps[0].assetOutIndex].sub(t.minOut))}isChainedSwap(e){return this.opRef[this.swaps.length-1]&&this.toInternal===e.fromInternal&&this.receiver===e.sender&&this.opRef[this.swaps.length-1].key.toString()===e.amountIn}canAddSwap(e){return!!this.isChainedSwap(e)||e.fromInternal===this.fromInternal&&e.toInternal===this.toInternal&&e.receiver===this.receiver&&e.sender===this.sender}callData(){const e=[];for(const t of this.approveTokens){const n=Ms.encodeApproveVault(t,i.toString());e.push(n)}const t={sender:this.sender,recipient:this.receiver,fromInternalBalance:this.fromInternal,toInternalBalance:this.toInternal},n={swapType:pa.SwapExactIn,swaps:this.swaps,assets:this.assets,funds:t,limits:this.limits.map((e=>e.toString())),deadline:r.from(Math.ceil(Date.now()/1e3)+3600),value:"0",outputReferences:this.opRef},a=Ms.encodeBatchSwap(n);return e.push(a),{params:n,encoded:e}}getAmountIn(){return this.limits[this.mainTokenInIndex].toString()}getAmountOut(){return this.limits[this.mainTokenOutIndex].abs().toString()}copy(){return new Hp(this.swaps[0],this.mainTokenInIndex,this.mainTokenOutIndex,this.opRefKey,this.assets,this.slippage,this.pools,this.user,this.relayer)}addSwap(e){const t=this.isChainedSwap(e);this.swaps.push(e.swaps[0]),this.approveTokens=[...new Set([...this.approveTokens,...e.approveTokens])],this.toInternal=e.toInternal,this.receiver=e.receiver,this.hasTokenOut=e.hasTokenOut,this.minOut=e.minOut,this.opRef=[...this.opRef,...e.opRef],t||(this.amountIn=r.from(this.amountIn).add(e.amountIn).toString()),this.updateLimits(this.limits,e)}isBpt(e,t){return e.some((e=>e.address.toLowerCase()===t.toLowerCase()))}}function Xp(e){const t=function(e){const t=[],n=[],a=[];for(const o of e)o.type===Gp.Exit||o.type===Gp.Join?o.hasTokenIn?t.push(o):o.hasTokenOut?n.push(o):a.push(o):a.push(o);return[...t,...a,...n]}(e);return function(e){const t=[];let n;for(const a of e)a.type===Gp.BatchSwap?n?n.canAddSwap(a)?n.addSwap(a):(t.push(n),n=a.copy()):n=a.copy():(n&&(t.push(n),n=void 0),t.push(a));return n&&t.push(n),t}(t)}const Yp=new t([{inputs:[{internalType:"contract IVault",name:"vault",type:"address"},{internalType:"address",name:"libraryAddress",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{inputs:[],name:"getLibrary",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getVault",outputs:[{internalType:"contract IVault",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"data",type:"bytes[]"}],name:"multicall",outputs:[{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{stateMutability:"payable",type:"receive"}]);function jp(e){Ae.getInstance()}function Kp(e,t,n){return e!==N.SwapExactOut&&t.toLowerCase()!==o.toLowerCase()&&n.toLowerCase()!==o.toLowerCase()}function Jp(e,t,n){if("Weighted"!==n)return!1;const a=t[e.assetOutIndex],o=ce(e.poolId);return a.toLowerCase()===o.toLowerCase()}function zp(e,t,n){if("Weighted"!==n)return!1;const a=t[e.assetInIndex],o=ce(e.poolId);return a.toLowerCase()===o.toLowerCase()}function Zp(e,t,n){return t.some((t=>function(e,t,n){const a=e.find((e=>e.id===t.poolId));return"Weighted"===(null==a?void 0:a.poolType)&&[n[t.assetInIndex],n[t.assetOutIndex]].includes(a.address)}(e,t,n)))}function Qp(e,t,n,a,o,i,s){const p=function(e,t,n,a,o,i,s,r){var p;const l=a.findIndex((t=>t.toLowerCase()===e.toLowerCase())),d=a.findIndex((e=>e.toLowerCase()===t.toLowerCase())),u=[];let c=0;for(const e of n){const t=null===(p=i.find((t=>t.id===e.poolId)))||void 0===p?void 0:p.poolType;if(Jp(e,a,t)){const t=new $p(e,l,d,c,a,o,s,r);c=t.nextOpRefKey,u.push(t)}else{if(!zp(e,a,t)){const t=new Hp(e,l,d,c,a,o,i,s,r);c=t.nextOpRefKey,u.push(t);continue}{const t=new Wp(e,l,d,c,a,o,s,r);c=t.nextOpRefKey,u.push(t)}}}return u}(e.tokenIn,e.tokenOut,e.swaps,e.tokenAddresses,i,t,n,a),l=Xp(p),d=[],u=[];s&&d.push(Ms.encodeSetRelayerApproval(a,!0,s));for(const e of l){if(e.type===Gp.Exit||e.type===Gp.Join){const n=t.find((t=>t.id===e.poolId));if(void 0===n)throw new ba(ma.NO_POOL_DATA);const{params:a,encoded:i}=e.callData(n,o);d.push(i),u.push(a)}if(e.type===Gp.BatchSwap){const{params:t,encoded:n}=e.callData();d.push(...n),u.push(t)}}!function(e,t,n,a){const o=e.reduce(((e=r.from(0),t)=>e.add(t))),i=t.reduce(((e=r.from(0),t)=>e.add(t)));jp(o.toString()),jp(n.swapAmount.toString()),jp(i.toString()),jp(jn(n.returnAmount,r.from(a)).toString()),jp(n.returnAmount.toString());const s=i.sub(jn(n.returnAmount,r.from(a)));if(!o.eq(n.swapAmount)||!s.lt("3"))throw new ba(ma.RELAY_SWAP_AMOUNTS)}(l.map((e=>r.from(e.getAmountIn()))),l.map((e=>r.from(e.getAmountOut()))),e,i);return{to:a,data:Yp.encodeFunctionData("multicall",[d]),rawCalls:d,inputs:u}}export{cn as AMP_PRECISION,fe as APR_THRESHOLD,$t as AaveHelpers,Ce as AaveLinearPoolFactory__factory,Oe as AaveLinearPool__factory,Bn as AaveRates,Be as AaveWrapping__factory,Xt as AssetHelpers,ca as BALANCER_NETWORK_CONFIG,ia as BalancerAPIArgsFormatter,ba as BalancerError,ma as BalancerErrorCode,jt as BalancerErrors,Ne as BalancerHelpers__factory,Zt as BalancerMinterAuthorization,Le as BalancerMinter__factory,Ve as BalancerPoolDataQueries__factory,qe as BalancerRelayer__factory,Up as BalancerSDK,Q as BasePoolEncoder,$e as BatchRelayerLibrary__factory,xp as BlockNumberRepository,ip as CoingeckoHistoricalPriceRepository,op as CoingeckoPriceRepository,re as ComposableStablePoolEncoder,se as ComposableStablePoolExitKind,je as ComposableStablePoolFactory__factory,ie as ComposableStablePoolJoinKind,Xe as ComposableStablePool__factory,Je as ConvergentCurvePool__factory,vp as Data,Vn as Debouncer,Ze as ERC20__factory,nt as ERC4626LinearPoolFactory__factory,et as ERC4626LinearPool__factory,st as EulerLinearPoolFactory__factory,ot as EulerLinearPool__factory,pt as FXPool__factory,Tp as FeeCollectorRepository,yp as FeeDistributorRepository,dt as GaugeClaimHelper__factory,Cr as GaugeControllerMulticallRepository,Pe as GaugeShareAttributes,Nr as GaugeSharesRepository,mt as GearboxLinearPoolFactory__factory,ct as GearboxLinearPool__factory,ra as GraphQLArgsBuilder,Lt as GyroEV2__factory,pp as HistoricalPriceProvider,ft as LidoRelayer__factory,ht as LinearPool__factory,po as Liquidity,Gr as LiquidityGaugeSubgraphRPCProvider,gt as LiquidityGaugeV5__factory,Ur as LiquidityGaugesMulticallRepository,Vr as LiquidityGaugesSubgraphRepository,ne as ManagedPoolEncoder,Lp as Migrations,wt as Multicall__factory,be as Network,ge as POOLS,ve as PoolBalanceOpKind,_e as PoolGaugesAttributes,Zr as PoolGaugesRepository,Qr as PoolJoinExitAttributes,ep as PoolJoinExitRepository,ks as PoolKind,we as PoolShareAttributes,tp as PoolSharesRepository,xe as PoolSpecialization,Se as PoolType,Or as Pools,Wr as PoolsBalancerAPIRepository,$r as PoolsFallbackRepository,Hr as PoolsStaticRepository,zr as PoolsSubgraphOnChainRepository,Jr as PoolsSubgraphRepository,gp as ProtocolFeesProvider,Pr as ProtocolId,Ms as Relayer,Jt as RelayerAction,zt as RelayerAuthorization,Te as SHALLOW_COMPOSABLE_STABLE_BUFFER,br as SimulationType,ys as Sor,K as StablePhantomPoolJoinKind,ee as StablePoolEncoder,J as StablePoolExitKind,j as StablePoolJoinKind,xt as StablePool__factory,vt as StaticATokenRateProvider__factory,ap as StaticTokenPriceProvider,np as StaticTokenProvider,Cs as Subgraph,sa as SubgraphArgsFormatter,sp as SubgraphPriceRepository,pa as SwapType,As as Swaps,rp as TokenPriceProvider,_p as TokenYieldsRepository,Ee as UserBalanceOpKind,At as Vault__factory,Vt as VeBal__factory,qt as VeDelegationProxy__factory,te as WeightedPoolEncoder,Z as WeightedPoolExitKind,Ct as WeightedPoolFactory__factory,z as WeightedPoolJoinKind,Ot as WeightedPool__factory,Nt as YearnLinearPoolFactory__factory,Bt as YearnLinearPool__factory,Kt as accountToAddress,Kn as addSlippage,Dn as addressMapIn,Xs as balEmissions,Hn as bn,Qp as buildRelayerCalls,Kp as canUseJoinExit,Wt as factories,aa as findEventInReceiptLogs,qn as formatFixed,$n as formatFromBigInt18,Un as getEthValue,la as getLimitsForSlippage,ce as getPoolAddress,me as getPoolNonce,ye as getPoolSpecialization,oa as getRandomBytes32,zn as insert,ta as isLinearish,oe as isNormalizedWeights,Jn as isSameAddress,Yn as mulSlippage,Gn as parseFixed,yn as parsePoolInfo,Wn as parseToBigInt18,Qn as removeItem,ea as reorderArrays,Zn as replace,Qt as signPermit,Zp as someJoinExit,ue as splitPoolId,jn as subSlippage,ae as toNormalizedWeights,Nn as tokenAddressForPricing,Fn as tokensToTokenPrices,na as truncateAddresses,Ln as unwrapToken,Cn as wrappedTokensMap,Mn as yieldTokens};
//# sourceMappingURL=index.esm.js.map
